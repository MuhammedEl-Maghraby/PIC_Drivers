Version 4.0 HI-TECH Software Intermediate Code
[v F2936 `(v ~T0 @X0 0 tf ]
[v F2937 `(v ~T0 @X0 0 tf ]
[v F2939 `(v ~T0 @X0 0 tf ]
[v F2940 `(v ~T0 @X0 0 tf ]
"17 MCAL_Layer/EUSART/hal_eusart.c
[; ;MCAL_Layer/EUSART/hal_eusart.c: 17: STD_ReturnType mcal_eusart_asynchronous_init(const eusart_t *eusart_obj){
[c E2873 0 1 2 3 4 5 .. ]
[n E2873 . EUSART_Asynchronous_8bit_LowSpeed EUSART_Asynchronous_8bit_HighSpeed EUSART_Asynchronous_16bit_LowSpeed EUSART_Asynchronous_16bit_HighSpeed EUSART_Synchronous_8bit EUSART_Synchronous_16bit  ]
[v F2887 `(v ~T0 @X0 0 tf ]
[c E2860 0 1 .. ]
[n E2860 . INTERRUPT_LOW_PRIORITY INTERRUPT_HIGH_PRIORITY  ]
"96 MCAL_Layer/EUSART/hal_eusart.h
[; ;MCAL_Layer/EUSART/hal_eusart.h: 96: typedef struct{
[s S273 :1 `uc 1 :1 `uc 1 :1 `uc 1 :5 `uc 1 `*F2887 1 `E2860 1 ]
[n S273 . eusart_tx_enabled eusart_9bit_transmission eusart_tx_interrupt_enabled eusart_tx_reserved Int_Tx_Handler_Var eusart_tx_priority ]
[v F2896 `(v ~T0 @X0 0 tf ]
"107
[; ;MCAL_Layer/EUSART/hal_eusart.h: 107: typedef struct{
[s S274 :1 `uc 1 :1 `uc 1 :1 `uc 1 :5 `uc 1 `*F2896 1 `E2860 1 ]
[n S274 . eusart_rx_enabled eusart_9bit_reception eusart_rx_interrupt_enabled eusart_rx_reserved Int_Rx_Handler_Var eusart_rx_priority ]
"116
[; ;MCAL_Layer/EUSART/hal_eusart.h: 116: typedef struct{
[s S275 `uc 1 `ui 1 `E2873 1 `*S273 1 `*S274 1 ]
[n S275 . mode_of_operation baudrate_value baudrate_cfg eusart_tx_cfg eusart_rx_cfg ]
"3032 C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc\pic18f4620.h
[s S107 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S107 . RX9D OERR FERR ADDEN CREN SREN RX9 SPEN ]
"3042
[s S108 :3 `uc 1 :1 `uc 1 ]
[n S108 . . ADEN ]
"3046
[s S109 :5 `uc 1 :1 `uc 1 ]
[n S109 . . SRENA ]
"3050
[s S110 :6 `uc 1 :1 `uc 1 ]
[n S110 . . RC8_9 ]
"3054
[s S111 :6 `uc 1 :1 `uc 1 ]
[n S111 . . RC9 ]
"3058
[s S112 :1 `uc 1 ]
[n S112 . RCD8 ]
"3031
[u S106 `S107 1 `S108 1 `S109 1 `S110 1 `S111 1 `S112 1 ]
[n S106 . . . . . . . ]
"3062
[v _RCSTAbits `VS106 ~T0 @X0 0 e@4011 ]
"1836
[s S65 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S65 . TRISC0 TRISC1 TRISC2 TRISC3 TRISC4 TRISC5 TRISC6 TRISC7 ]
"1846
[s S66 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S66 . RC0 RC1 RC2 RC3 RC4 RC5 RC6 RC7 ]
"1835
[u S64 `S65 1 `S66 1 ]
[n S64 . . . ]
"1857
[v _TRISCbits `VS64 ~T0 @X0 0 e@3988 ]
"10 MCAL_Layer/EUSART/hal_eusart.c
[; ;MCAL_Layer/EUSART/hal_eusart.c: 10: static STD_ReturnType eusart_baudrate_configuration_bits_init(const eusart_t *eusart_obj);
[v _eusart_baudrate_configuration_bits_init `(uc ~T0 @X0 0 sf1`*CS275 ]
"11
[; ;MCAL_Layer/EUSART/hal_eusart.c: 11: static STD_ReturnType eusart_tx_init(const eusart_tx_t *eusart_tx_obj);
[v _eusart_tx_init `(uc ~T0 @X0 0 sf1`*CS273 ]
"12
[; ;MCAL_Layer/EUSART/hal_eusart.c: 12: static STD_ReturnType eusart_rx_init(const eusart_rx_t *eusart_rx_obj);
[v _eusart_rx_init `(uc ~T0 @X0 0 sf1`*CS274 ]
"3242 C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc\pic18f4620.h
[s S121 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S121 . TX9D TRMT BRGH SENDB SYNC TXEN TX9 CSRC ]
"3252
[s S122 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S122 . TX9D1 TRMT1 BRGH1 SENDB1 SYNC1 TXEN1 TX91 CSRC1 ]
"3262
[s S123 :6 `uc 1 :1 `uc 1 ]
[n S123 . . TX8_9 ]
"3266
[s S124 :1 `uc 1 ]
[n S124 . TXD8 ]
"3241
[u S120 `S121 1 `S122 1 `S123 1 `S124 1 ]
[n S120 . . . . . ]
"3270
[v _TXSTAbits `VS120 ~T0 @X0 0 e@4012 ]
"3487
[v _TXREG `Vuc ~T0 @X0 0 e@4013 ]
"2504
[s S86 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S86 . TMR1IE TMR2IE CCP1IE SSPIE TXIE RCIE ADIE PSPIE ]
"2514
[s S87 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S87 . . TX1IE RC1IE ]
"2503
[u S85 `S86 1 `S87 1 ]
[n S85 . . . ]
"2520
[v _PIE1bits `VS85 ~T0 @X0 0 e@3997 ]
"2581
[s S89 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S89 . TMR1IF TMR2IF CCP1IF SSPIF TXIF RCIF ADIF PSPIF ]
"2591
[s S90 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S90 . . TX1IF RC1IF ]
"2580
[u S88 `S89 1 `S90 1 ]
[n S88 . . . ]
"2597
[v _PIR1bits `VS88 ~T0 @X0 0 e@3998 ]
"3499
[v _RCREG `Vuc ~T0 @X0 0 e@4014 ]
"3995
[s S151 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S151 . ABDEN WUE . BRG16 TXCKP RXDTP RCIDL ABDOVF ]
"4005
[s S152 :4 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S152 . . SCKP RXCKP RCMT ]
"4011
[s S153 :1 `uc 1 :1 `uc 1 ]
[n S153 . . W4E ]
"3994
[u S150 `S151 1 `S152 1 `S153 1 ]
[n S150 . . . . ]
"4016
[v _BAUDCONbits `VS150 ~T0 @X0 0 e@4024 ]
"3511
[v _SPBRG `Vuc ~T0 @X0 0 e@4015 ]
"3523
[v _SPBRGH `Vuc ~T0 @X0 0 e@4016 ]
"6381
[s S258 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S258 . RBIF INT0IF TMR0IF RBIE INT0IE TMR0IE PEIE_GIEL GIE_GIEH ]
"6391
[s S259 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S259 . . INT0F T0IF . INT0E T0IE PEIE GIE ]
"6401
[s S260 :6 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S260 . . GIEL GIEH ]
"6380
[u S257 `S258 1 `S259 1 `S260 1 ]
[n S257 . . . . ]
"6407
[v _INTCONbits `VS257 ~T0 @X0 0 e@4082 ]
[v F2999 `(v ~T0 @X0 0 tf ]
[v F3001 `(v ~T0 @X0 0 tf ]
"55 C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc\pic18f4620.h
[; <" PORTA equ 0F80h ;# ">
"192
[; <" PORTB equ 0F81h ;# ">
"363
[; <" PORTC equ 0F82h ;# ">
"538
[; <" PORTD equ 0F83h ;# ">
"680
[; <" PORTE equ 0F84h ;# ">
"883
[; <" LATA equ 0F89h ;# ">
"995
[; <" LATB equ 0F8Ah ;# ">
"1107
[; <" LATC equ 0F8Bh ;# ">
"1219
[; <" LATD equ 0F8Ch ;# ">
"1331
[; <" LATE equ 0F8Dh ;# ">
"1383
[; <" TRISA equ 0F92h ;# ">
"1388
[; <" DDRA equ 0F92h ;# ">
"1605
[; <" TRISB equ 0F93h ;# ">
"1610
[; <" DDRB equ 0F93h ;# ">
"1827
[; <" TRISC equ 0F94h ;# ">
"1832
[; <" DDRC equ 0F94h ;# ">
"2049
[; <" TRISD equ 0F95h ;# ">
"2054
[; <" DDRD equ 0F95h ;# ">
"2271
[; <" TRISE equ 0F96h ;# ">
"2276
[; <" DDRE equ 0F96h ;# ">
"2435
[; <" OSCTUNE equ 0F9Bh ;# ">
"2500
[; <" PIE1 equ 0F9Dh ;# ">
"2577
[; <" PIR1 equ 0F9Eh ;# ">
"2654
[; <" IPR1 equ 0F9Fh ;# ">
"2731
[; <" PIE2 equ 0FA0h ;# ">
"2797
[; <" PIR2 equ 0FA1h ;# ">
"2863
[; <" IPR2 equ 0FA2h ;# ">
"2929
[; <" EECON1 equ 0FA6h ;# ">
"2995
[; <" EECON2 equ 0FA7h ;# ">
"3002
[; <" EEDATA equ 0FA8h ;# ">
"3009
[; <" EEADR equ 0FA9h ;# ">
"3016
[; <" EEADRH equ 0FAAh ;# ">
"3023
[; <" RCSTA equ 0FABh ;# ">
"3028
[; <" RCSTA1 equ 0FABh ;# ">
"3233
[; <" TXSTA equ 0FACh ;# ">
"3238
[; <" TXSTA1 equ 0FACh ;# ">
"3489
[; <" TXREG equ 0FADh ;# ">
"3494
[; <" TXREG1 equ 0FADh ;# ">
"3501
[; <" RCREG equ 0FAEh ;# ">
"3506
[; <" RCREG1 equ 0FAEh ;# ">
"3513
[; <" SPBRG equ 0FAFh ;# ">
"3518
[; <" SPBRG1 equ 0FAFh ;# ">
"3525
[; <" SPBRGH equ 0FB0h ;# ">
"3532
[; <" T3CON equ 0FB1h ;# ">
"3644
[; <" TMR3 equ 0FB2h ;# ">
"3651
[; <" TMR3L equ 0FB2h ;# ">
"3658
[; <" TMR3H equ 0FB3h ;# ">
"3665
[; <" CMCON equ 0FB4h ;# ">
"3755
[; <" CVRCON equ 0FB5h ;# ">
"3834
[; <" ECCP1AS equ 0FB6h ;# ">
"3916
[; <" PWM1CON equ 0FB7h ;# ">
"3986
[; <" BAUDCON equ 0FB8h ;# ">
"3991
[; <" BAUDCTL equ 0FB8h ;# ">
"4158
[; <" CCP2CON equ 0FBAh ;# ">
"4237
[; <" CCPR2 equ 0FBBh ;# ">
"4244
[; <" CCPR2L equ 0FBBh ;# ">
"4251
[; <" CCPR2H equ 0FBCh ;# ">
"4258
[; <" CCP1CON equ 0FBDh ;# ">
"4355
[; <" CCPR1 equ 0FBEh ;# ">
"4362
[; <" CCPR1L equ 0FBEh ;# ">
"4369
[; <" CCPR1H equ 0FBFh ;# ">
"4376
[; <" ADCON2 equ 0FC0h ;# ">
"4447
[; <" ADCON1 equ 0FC1h ;# ">
"4532
[; <" ADCON0 equ 0FC2h ;# ">
"4651
[; <" ADRES equ 0FC3h ;# ">
"4658
[; <" ADRESL equ 0FC3h ;# ">
"4665
[; <" ADRESH equ 0FC4h ;# ">
"4672
[; <" SSPCON2 equ 0FC5h ;# ">
"4734
[; <" SSPCON1 equ 0FC6h ;# ">
"4804
[; <" SSPSTAT equ 0FC7h ;# ">
"5025
[; <" SSPADD equ 0FC8h ;# ">
"5032
[; <" SSPBUF equ 0FC9h ;# ">
"5039
[; <" T2CON equ 0FCAh ;# ">
"5110
[; <" PR2 equ 0FCBh ;# ">
"5115
[; <" MEMCON equ 0FCBh ;# ">
"5220
[; <" TMR2 equ 0FCCh ;# ">
"5227
[; <" T1CON equ 0FCDh ;# ">
"5330
[; <" TMR1 equ 0FCEh ;# ">
"5337
[; <" TMR1L equ 0FCEh ;# ">
"5344
[; <" TMR1H equ 0FCFh ;# ">
"5351
[; <" RCON equ 0FD0h ;# ">
"5484
[; <" WDTCON equ 0FD1h ;# ">
"5512
[; <" HLVDCON equ 0FD2h ;# ">
"5517
[; <" LVDCON equ 0FD2h ;# ">
"5782
[; <" OSCCON equ 0FD3h ;# ">
"5859
[; <" T0CON equ 0FD5h ;# ">
"5936
[; <" TMR0 equ 0FD6h ;# ">
"5943
[; <" TMR0L equ 0FD6h ;# ">
"5950
[; <" TMR0H equ 0FD7h ;# ">
"5957
[; <" STATUS equ 0FD8h ;# ">
"6028
[; <" FSR2 equ 0FD9h ;# ">
"6035
[; <" FSR2L equ 0FD9h ;# ">
"6042
[; <" FSR2H equ 0FDAh ;# ">
"6049
[; <" PLUSW2 equ 0FDBh ;# ">
"6056
[; <" PREINC2 equ 0FDCh ;# ">
"6063
[; <" POSTDEC2 equ 0FDDh ;# ">
"6070
[; <" POSTINC2 equ 0FDEh ;# ">
"6077
[; <" INDF2 equ 0FDFh ;# ">
"6084
[; <" BSR equ 0FE0h ;# ">
"6091
[; <" FSR1 equ 0FE1h ;# ">
"6098
[; <" FSR1L equ 0FE1h ;# ">
"6105
[; <" FSR1H equ 0FE2h ;# ">
"6112
[; <" PLUSW1 equ 0FE3h ;# ">
"6119
[; <" PREINC1 equ 0FE4h ;# ">
"6126
[; <" POSTDEC1 equ 0FE5h ;# ">
"6133
[; <" POSTINC1 equ 0FE6h ;# ">
"6140
[; <" INDF1 equ 0FE7h ;# ">
"6147
[; <" WREG equ 0FE8h ;# ">
"6159
[; <" FSR0 equ 0FE9h ;# ">
"6166
[; <" FSR0L equ 0FE9h ;# ">
"6173
[; <" FSR0H equ 0FEAh ;# ">
"6180
[; <" PLUSW0 equ 0FEBh ;# ">
"6187
[; <" PREINC0 equ 0FECh ;# ">
"6194
[; <" POSTDEC0 equ 0FEDh ;# ">
"6201
[; <" POSTINC0 equ 0FEEh ;# ">
"6208
[; <" INDF0 equ 0FEFh ;# ">
"6215
[; <" INTCON3 equ 0FF0h ;# ">
"6307
[; <" INTCON2 equ 0FF1h ;# ">
"6377
[; <" INTCON equ 0FF2h ;# ">
"6494
[; <" PROD equ 0FF3h ;# ">
"6501
[; <" PRODL equ 0FF3h ;# ">
"6508
[; <" PRODH equ 0FF4h ;# ">
"6515
[; <" TABLAT equ 0FF5h ;# ">
"6524
[; <" TBLPTR equ 0FF6h ;# ">
"6531
[; <" TBLPTRL equ 0FF6h ;# ">
"6538
[; <" TBLPTRH equ 0FF7h ;# ">
"6545
[; <" TBLPTRU equ 0FF8h ;# ">
"6554
[; <" PCLAT equ 0FF9h ;# ">
"6561
[; <" PC equ 0FF9h ;# ">
"6568
[; <" PCL equ 0FF9h ;# ">
"6575
[; <" PCLATH equ 0FFAh ;# ">
"6582
[; <" PCLATU equ 0FFBh ;# ">
"6589
[; <" STKPTR equ 0FFCh ;# ">
"6695
[; <" TOS equ 0FFDh ;# ">
"6702
[; <" TOSL equ 0FFDh ;# ">
"6709
[; <" TOSH equ 0FFEh ;# ">
"6716
[; <" TOSU equ 0FFFh ;# ">
"14 MCAL_Layer/EUSART/hal_eusart.c
[; ;MCAL_Layer/EUSART/hal_eusart.c: 14: static void (*TX_Handler)(void) = ((void*)0);
[v _TX_Handler `*F2936 ~T0 @X0 1 s ]
[i _TX_Handler
-> -> -> 0 `i `*v `*F2937
]
"15
[; ;MCAL_Layer/EUSART/hal_eusart.c: 15: static void (*RX_Handler)(void) = ((void*)0);
[v _RX_Handler `*F2939 ~T0 @X0 1 s ]
[i _RX_Handler
-> -> -> 0 `i `*v `*F2940
]
"17
[; ;MCAL_Layer/EUSART/hal_eusart.c: 17: STD_ReturnType mcal_eusart_asynchronous_init(const eusart_t *eusart_obj){
[v _mcal_eusart_asynchronous_init `(uc ~T0 @X0 1 ef1`*CS275 ]
{
[e :U _mcal_eusart_asynchronous_init ]
[v _eusart_obj `*CS275 ~T0 @X0 1 r1 ]
[f ]
"18
[; ;MCAL_Layer/EUSART/hal_eusart.c: 18:     STD_ReturnType Status = (STD_ReturnType)0x01;
[v _Status `uc ~T0 @X0 1 a ]
[e = _Status -> -> 1 `i `uc ]
"19
[; ;MCAL_Layer/EUSART/hal_eusart.c: 19:     if(eusart_obj){
[e $ ! != _eusart_obj -> -> 0 `i `*CS275 277  ]
{
"20
[; ;MCAL_Layer/EUSART/hal_eusart.c: 20:         RCSTAbits.SPEN = 1;
[e = . . _RCSTAbits 0 7 -> -> 1 `i `uc ]
"21
[; ;MCAL_Layer/EUSART/hal_eusart.c: 21:         TRISCbits.RC6 = 1;
[e = . . _TRISCbits 1 6 -> -> 1 `i `uc ]
"22
[; ;MCAL_Layer/EUSART/hal_eusart.c: 22:         TRISCbits.RC7 = 1;
[e = . . _TRISCbits 1 7 -> -> 1 `i `uc ]
"23
[; ;MCAL_Layer/EUSART/hal_eusart.c: 23:         eusart_baudrate_configuration_bits_init(eusart_obj);
[e ( _eusart_baudrate_configuration_bits_init (1 _eusart_obj ]
"27
[; ;MCAL_Layer/EUSART/hal_eusart.c: 27:         if(eusart_obj->eusart_tx_cfg != ((void*)0)){
[e $ ! != . *U _eusart_obj 3 -> -> -> 0 `i `*v `*S273 278  ]
{
"28
[; ;MCAL_Layer/EUSART/hal_eusart.c: 28:             eusart_tx_init(eusart_obj->eusart_tx_cfg);
[e ( _eusart_tx_init (1 -> . *U _eusart_obj 3 `*CS273 ]
"29
[; ;MCAL_Layer/EUSART/hal_eusart.c: 29:         }else{
}
[e $U 279  ]
[e :U 278 ]
{
"30
[; ;MCAL_Layer/EUSART/hal_eusart.c: 30:             Status = (STD_ReturnType)0x00;
[e = _Status -> -> 0 `i `uc ]
"31
[; ;MCAL_Layer/EUSART/hal_eusart.c: 31:         }
}
[e :U 279 ]
"35
[; ;MCAL_Layer/EUSART/hal_eusart.c: 35:         if(eusart_obj->eusart_rx_cfg != ((void*)0)){
[e $ ! != . *U _eusart_obj 4 -> -> -> 0 `i `*v `*S274 280  ]
{
"36
[; ;MCAL_Layer/EUSART/hal_eusart.c: 36:             eusart_rx_init(eusart_obj->eusart_rx_cfg);
[e ( _eusart_rx_init (1 -> . *U _eusart_obj 4 `*CS274 ]
"37
[; ;MCAL_Layer/EUSART/hal_eusart.c: 37:         }else{
}
[e $U 281  ]
[e :U 280 ]
{
"38
[; ;MCAL_Layer/EUSART/hal_eusart.c: 38:             Status = (STD_ReturnType)0x00;
[e = _Status -> -> 0 `i `uc ]
"39
[; ;MCAL_Layer/EUSART/hal_eusart.c: 39:         }
}
[e :U 281 ]
"41
[; ;MCAL_Layer/EUSART/hal_eusart.c: 41:     }
}
[e $U 282  ]
"42
[; ;MCAL_Layer/EUSART/hal_eusart.c: 42:     else{
[e :U 277 ]
{
"43
[; ;MCAL_Layer/EUSART/hal_eusart.c: 43:         Status = (STD_ReturnType)0x00;
[e = _Status -> -> 0 `i `uc ]
"44
[; ;MCAL_Layer/EUSART/hal_eusart.c: 44:     }
}
[e :U 282 ]
"45
[; ;MCAL_Layer/EUSART/hal_eusart.c: 45:     return Status;
[e ) _Status ]
[e $UE 276  ]
"46
[; ;MCAL_Layer/EUSART/hal_eusart.c: 46: }
[e :UE 276 ]
}
"48
[; ;MCAL_Layer/EUSART/hal_eusart.c: 48: STD_ReturnType mcal_eusart_synchronous_init(const eusart_t *eusart_obj){
[v _mcal_eusart_synchronous_init `(uc ~T0 @X0 1 ef1`*CS275 ]
{
[e :U _mcal_eusart_synchronous_init ]
[v _eusart_obj `*CS275 ~T0 @X0 1 r1 ]
[f ]
"51
[; ;MCAL_Layer/EUSART/hal_eusart.c: 51: }
[e :UE 283 ]
}
"53
[; ;MCAL_Layer/EUSART/hal_eusart.c: 53: STD_ReturnType mcal_eusart_deinit(void){
[v _mcal_eusart_deinit `(uc ~T0 @X0 1 ef ]
{
[e :U _mcal_eusart_deinit ]
[f ]
"54
[; ;MCAL_Layer/EUSART/hal_eusart.c: 54:     STD_ReturnType Status = (STD_ReturnType)0x01;
[v _Status `uc ~T0 @X0 1 a ]
[e = _Status -> -> 1 `i `uc ]
"56
[; ;MCAL_Layer/EUSART/hal_eusart.c: 56:     return Status;
[e ) _Status ]
[e $UE 284  ]
"58
[; ;MCAL_Layer/EUSART/hal_eusart.c: 58: }
[e :UE 284 ]
}
"61
[; ;MCAL_Layer/EUSART/hal_eusart.c: 61: STD_ReturnType mcal_eusart_send_byte_blocking(uint8 data){
[v _mcal_eusart_send_byte_blocking `(uc ~T0 @X0 1 ef1`uc ]
{
[e :U _mcal_eusart_send_byte_blocking ]
[v _data `uc ~T0 @X0 1 r1 ]
[f ]
"62
[; ;MCAL_Layer/EUSART/hal_eusart.c: 62:     STD_ReturnType Status = (STD_ReturnType)0x01;
[v _Status `uc ~T0 @X0 1 a ]
[e = _Status -> -> 1 `i `uc ]
"63
[; ;MCAL_Layer/EUSART/hal_eusart.c: 63:     while(TXSTAbits.TRMT == 0);
[e $U 286  ]
[e :U 287 ]
[e :U 286 ]
[e $ == -> . . _TXSTAbits 0 1 `i -> 0 `i 287  ]
[e :U 288 ]
"64
[; ;MCAL_Layer/EUSART/hal_eusart.c: 64:     TXREG = data;
[e = _TXREG _data ]
"65
[; ;MCAL_Layer/EUSART/hal_eusart.c: 65:     return Status;
[e ) _Status ]
[e $UE 285  ]
"66
[; ;MCAL_Layer/EUSART/hal_eusart.c: 66: }
[e :UE 285 ]
}
"69
[; ;MCAL_Layer/EUSART/hal_eusart.c: 69: STD_ReturnType mcal_eusart_send_byte_non_blocking(uint8 data){
[v _mcal_eusart_send_byte_non_blocking `(uc ~T0 @X0 1 ef1`uc ]
{
[e :U _mcal_eusart_send_byte_non_blocking ]
[v _data `uc ~T0 @X0 1 r1 ]
[f ]
"70
[; ;MCAL_Layer/EUSART/hal_eusart.c: 70:     STD_ReturnType Status = (STD_ReturnType)0x01;
[v _Status `uc ~T0 @X0 1 a ]
[e = _Status -> -> 1 `i `uc ]
"71
[; ;MCAL_Layer/EUSART/hal_eusart.c: 71:         TXREG = data;
[e = _TXREG _data ]
"72
[; ;MCAL_Layer/EUSART/hal_eusart.c: 72:         (PIE1bits.TXIE = 1);
[e = . . _PIE1bits 0 4 -> -> 1 `i `uc ]
"73
[; ;MCAL_Layer/EUSART/hal_eusart.c: 73:     return Status;
[e ) _Status ]
[e $UE 289  ]
"74
[; ;MCAL_Layer/EUSART/hal_eusart.c: 74: }
[e :UE 289 ]
}
"80
[; ;MCAL_Layer/EUSART/hal_eusart.c: 80: STD_ReturnType mcal_eusart_send_string_blocking(uint8 *str , uint8 str_length){
[v _mcal_eusart_send_string_blocking `(uc ~T0 @X0 1 ef2`*uc`uc ]
{
[e :U _mcal_eusart_send_string_blocking ]
[v _str `*uc ~T0 @X0 1 r1 ]
[v _str_length `uc ~T0 @X0 1 r2 ]
[f ]
"81
[; ;MCAL_Layer/EUSART/hal_eusart.c: 81:     STD_ReturnType Status = (STD_ReturnType)0x01;
[v _Status `uc ~T0 @X0 1 a ]
[e = _Status -> -> 1 `i `uc ]
"82
[; ;MCAL_Layer/EUSART/hal_eusart.c: 82:     uint8 str_length_copied = str_length;
[v _str_length_copied `uc ~T0 @X0 1 a ]
[e = _str_length_copied _str_length ]
"83
[; ;MCAL_Layer/EUSART/hal_eusart.c: 83:     uint8 *str_copied = str;
[v _str_copied `*uc ~T0 @X0 1 a ]
[e = _str_copied _str ]
"84
[; ;MCAL_Layer/EUSART/hal_eusart.c: 84:     while(*str_copied != '\0'){
[e $U 291  ]
[e :U 292 ]
{
"85
[; ;MCAL_Layer/EUSART/hal_eusart.c: 85:         mcal_eusart_send_byte_blocking(*str_copied);
[e ( _mcal_eusart_send_byte_blocking (1 *U _str_copied ]
"86
[; ;MCAL_Layer/EUSART/hal_eusart.c: 86:         str_copied++;
[e ++ _str_copied * -> -> 1 `i `x -> -> # *U _str_copied `i `x ]
"87
[; ;MCAL_Layer/EUSART/hal_eusart.c: 87:     }
}
[e :U 291 ]
"84
[; ;MCAL_Layer/EUSART/hal_eusart.c: 84:     while(*str_copied != '\0'){
[e $ != -> *U _str_copied `ui -> 0 `ui 292  ]
[e :U 293 ]
"88
[; ;MCAL_Layer/EUSART/hal_eusart.c: 88:     mcal_eusart_send_byte_blocking('\0');
[e ( _mcal_eusart_send_byte_blocking (1 -> -> 0 `ui `uc ]
"89
[; ;MCAL_Layer/EUSART/hal_eusart.c: 89:     return Status;
[e ) _Status ]
[e $UE 290  ]
"90
[; ;MCAL_Layer/EUSART/hal_eusart.c: 90: }
[e :UE 290 ]
}
"107
[; ;MCAL_Layer/EUSART/hal_eusart.c: 107: STD_ReturnType mcal_eusart_send_string_non_blocking(void){
[v _mcal_eusart_send_string_non_blocking `(uc ~T0 @X0 1 ef ]
{
[e :U _mcal_eusart_send_string_non_blocking ]
[f ]
"108
[; ;MCAL_Layer/EUSART/hal_eusart.c: 108:     STD_ReturnType Status = (STD_ReturnType)0x01;
[v _Status `uc ~T0 @X0 1 a ]
[e = _Status -> -> 1 `i `uc ]
"109
[; ;MCAL_Layer/EUSART/hal_eusart.c: 109:     (TXSTAbits.TXEN = 1);
[e = . . _TXSTAbits 0 5 -> -> 1 `i `uc ]
"112
[; ;MCAL_Layer/EUSART/hal_eusart.c: 112:     return Status;
[e ) _Status ]
[e $UE 294  ]
"114
[; ;MCAL_Layer/EUSART/hal_eusart.c: 114: }
[e :UE 294 ]
}
"117
[; ;MCAL_Layer/EUSART/hal_eusart.c: 117: STD_ReturnType mcal_eusart_receive_byte_blocking(uint8 *data){
[v _mcal_eusart_receive_byte_blocking `(uc ~T0 @X0 1 ef1`*uc ]
{
[e :U _mcal_eusart_receive_byte_blocking ]
[v _data `*uc ~T0 @X0 1 r1 ]
[f ]
"118
[; ;MCAL_Layer/EUSART/hal_eusart.c: 118:     STD_ReturnType Status = (STD_ReturnType)0x01;
[v _Status `uc ~T0 @X0 1 a ]
[e = _Status -> -> 1 `i `uc ]
"119
[; ;MCAL_Layer/EUSART/hal_eusart.c: 119:     while(!PIR1bits.RCIF);
[e $U 296  ]
[e :U 297 ]
[e :U 296 ]
[e $ ! != -> . . _PIR1bits 0 5 `i -> 0 `i 297  ]
[e :U 298 ]
"120
[; ;MCAL_Layer/EUSART/hal_eusart.c: 120:     *data = RCREG;
[e = *U _data _RCREG ]
"121
[; ;MCAL_Layer/EUSART/hal_eusart.c: 121:     return Status;
[e ) _Status ]
[e $UE 295  ]
"122
[; ;MCAL_Layer/EUSART/hal_eusart.c: 122: }
[e :UE 295 ]
}
"123
[; ;MCAL_Layer/EUSART/hal_eusart.c: 123: STD_ReturnType mcal_eusart_receive_byte_non_blocking(uint8 *data){
[v _mcal_eusart_receive_byte_non_blocking `(uc ~T0 @X0 1 ef1`*uc ]
{
[e :U _mcal_eusart_receive_byte_non_blocking ]
[v _data `*uc ~T0 @X0 1 r1 ]
[f ]
"124
[; ;MCAL_Layer/EUSART/hal_eusart.c: 124:     STD_ReturnType Status = (STD_ReturnType)0x01;
[v _Status `uc ~T0 @X0 1 a ]
[e = _Status -> -> 1 `i `uc ]
"125
[; ;MCAL_Layer/EUSART/hal_eusart.c: 125:     if(PIR1bits.RCIF){
[e $ ! != -> . . _PIR1bits 0 5 `i -> 0 `i 300  ]
{
"126
[; ;MCAL_Layer/EUSART/hal_eusart.c: 126:         *data = RCREG;
[e = *U _data _RCREG ]
"127
[; ;MCAL_Layer/EUSART/hal_eusart.c: 127:     }
}
[e $U 301  ]
"128
[; ;MCAL_Layer/EUSART/hal_eusart.c: 128:     else{
[e :U 300 ]
{
"129
[; ;MCAL_Layer/EUSART/hal_eusart.c: 129:         Status = (STD_ReturnType)0x00;
[e = _Status -> -> 0 `i `uc ]
"130
[; ;MCAL_Layer/EUSART/hal_eusart.c: 130:     }
}
[e :U 301 ]
"131
[; ;MCAL_Layer/EUSART/hal_eusart.c: 131:     return Status;
[e ) _Status ]
[e $UE 299  ]
"132
[; ;MCAL_Layer/EUSART/hal_eusart.c: 132: }
[e :UE 299 ]
}
"133
[; ;MCAL_Layer/EUSART/hal_eusart.c: 133: STD_ReturnType mcal_eusart_receive_string_blocking(uint8 *str , uint8 str_length){
[v _mcal_eusart_receive_string_blocking `(uc ~T0 @X0 1 ef2`*uc`uc ]
{
[e :U _mcal_eusart_receive_string_blocking ]
[v _str `*uc ~T0 @X0 1 r1 ]
[v _str_length `uc ~T0 @X0 1 r2 ]
[f ]
"134
[; ;MCAL_Layer/EUSART/hal_eusart.c: 134:     STD_ReturnType Status = (STD_ReturnType)0x01;
[v _Status `uc ~T0 @X0 1 a ]
[e = _Status -> -> 1 `i `uc ]
"135
[; ;MCAL_Layer/EUSART/hal_eusart.c: 135:     uint8 str_length_copied = str_length;
[v _str_length_copied `uc ~T0 @X0 1 a ]
[e = _str_length_copied _str_length ]
"136
[; ;MCAL_Layer/EUSART/hal_eusart.c: 136:     uint8 *str_copied = str;
[v _str_copied `*uc ~T0 @X0 1 a ]
[e = _str_copied _str ]
"137
[; ;MCAL_Layer/EUSART/hal_eusart.c: 137:     while(RCREG!='\r'){
[e $U 303  ]
[e :U 304 ]
{
"138
[; ;MCAL_Layer/EUSART/hal_eusart.c: 138:         mcal_eusart_receive_byte_blocking(str_copied);
[e ( _mcal_eusart_receive_byte_blocking (1 _str_copied ]
"139
[; ;MCAL_Layer/EUSART/hal_eusart.c: 139:         str_copied++;
[e ++ _str_copied * -> -> 1 `i `x -> -> # *U _str_copied `i `x ]
"141
[; ;MCAL_Layer/EUSART/hal_eusart.c: 141:     }
}
[e :U 303 ]
"137
[; ;MCAL_Layer/EUSART/hal_eusart.c: 137:     while(RCREG!='\r'){
[e $ != -> _RCREG `ui -> 13 `ui 304  ]
[e :U 305 ]
"142
[; ;MCAL_Layer/EUSART/hal_eusart.c: 142:     *(str_copied++)='\r';
[e = *U ++ _str_copied * -> -> 1 `i `x -> -> # *U _str_copied `i `x -> -> 13 `ui `uc ]
"143
[; ;MCAL_Layer/EUSART/hal_eusart.c: 143:     *(str_copied++)='\0';
[e = *U ++ _str_copied * -> -> 1 `i `x -> -> # *U _str_copied `i `x -> -> 0 `ui `uc ]
"144
[; ;MCAL_Layer/EUSART/hal_eusart.c: 144:     RCREG = '\0';
[e = _RCREG -> -> 0 `ui `uc ]
"146
[; ;MCAL_Layer/EUSART/hal_eusart.c: 146:     return Status;
[e ) _Status ]
[e $UE 302  ]
"147
[; ;MCAL_Layer/EUSART/hal_eusart.c: 147: }
[e :UE 302 ]
}
"148
[; ;MCAL_Layer/EUSART/hal_eusart.c: 148: STD_ReturnType mcal_eusart_receive_string_non_blocking(uint8 *str , uint8 str_length){
[v _mcal_eusart_receive_string_non_blocking `(uc ~T0 @X0 1 ef2`*uc`uc ]
{
[e :U _mcal_eusart_receive_string_non_blocking ]
[v _str `*uc ~T0 @X0 1 r1 ]
[v _str_length `uc ~T0 @X0 1 r2 ]
[f ]
"149
[; ;MCAL_Layer/EUSART/hal_eusart.c: 149:     STD_ReturnType Status = (STD_ReturnType)0x01;
[v _Status `uc ~T0 @X0 1 a ]
[e = _Status -> -> 1 `i `uc ]
"152
[; ;MCAL_Layer/EUSART/hal_eusart.c: 152:     return Status;
[e ) _Status ]
[e $UE 306  ]
"154
[; ;MCAL_Layer/EUSART/hal_eusart.c: 154: }
[e :UE 306 ]
}
"160
[; ;MCAL_Layer/EUSART/hal_eusart.c: 160: static STD_ReturnType eusart_baudrate_configuration_bits_init(const eusart_t *eusart_obj){
[v _eusart_baudrate_configuration_bits_init `(uc ~T0 @X0 1 sf1`*CS275 ]
{
[e :U _eusart_baudrate_configuration_bits_init ]
[v _eusart_obj `*CS275 ~T0 @X0 1 r1 ]
[f ]
"161
[; ;MCAL_Layer/EUSART/hal_eusart.c: 161:     STD_ReturnType Status = (STD_ReturnType)0x01;
[v _Status `uc ~T0 @X0 1 a ]
[e = _Status -> -> 1 `i `uc ]
"162
[; ;MCAL_Layer/EUSART/hal_eusart.c: 162:     float baudrate_val = 0;
[v _baudrate_val `f ~T0 @X0 1 a ]
[e = _baudrate_val -> -> 0 `i `f ]
"163
[; ;MCAL_Layer/EUSART/hal_eusart.c: 163:     if(eusart_obj){
[e $ ! != _eusart_obj -> -> 0 `i `*CS275 308  ]
{
"164
[; ;MCAL_Layer/EUSART/hal_eusart.c: 164:         switch(eusart_obj->baudrate_cfg){
[e $U 310  ]
{
"165
[; ;MCAL_Layer/EUSART/hal_eusart.c: 165:             case EUSART_Asynchronous_8bit_LowSpeed:
[e :U 311 ]
"166
[; ;MCAL_Layer/EUSART/hal_eusart.c: 166:                 (TXSTAbits.SYNC = 0);
[e = . . _TXSTAbits 0 4 -> -> 0 `i `uc ]
"167
[; ;MCAL_Layer/EUSART/hal_eusart.c: 167:                 (BAUDCONbits.BRG16 = 0);
[e = . . _BAUDCONbits 0 3 -> -> 0 `i `uc ]
"168
[; ;MCAL_Layer/EUSART/hal_eusart.c: 168:                 (TXSTAbits.BRGH = 0);
[e = . . _TXSTAbits 0 2 -> -> 0 `i `uc ]
"169
[; ;MCAL_Layer/EUSART/hal_eusart.c: 169:                 baudrate_val = ((8000000/(float)eusart_obj->baudrate_value)/64)-1;
[e = _baudrate_val - / / -> -> 8000000 `l `f -> . *U _eusart_obj 1 `f -> -> 64 `i `f -> -> 1 `i `f ]
"170
[; ;MCAL_Layer/EUSART/hal_eusart.c: 170:                 SPBRG = (uint8)((uint32)baudrate_val);
[e = _SPBRG -> -> _baudrate_val `ui `uc ]
"171
[; ;MCAL_Layer/EUSART/hal_eusart.c: 171:                 SPBRGH = (uint8)(((uint32)baudrate_val) >> 8);
[e = _SPBRGH -> >> -> _baudrate_val `ui -> 8 `i `uc ]
"172
[; ;MCAL_Layer/EUSART/hal_eusart.c: 172:                 break;
[e $U 309  ]
"174
[; ;MCAL_Layer/EUSART/hal_eusart.c: 174:             case EUSART_Asynchronous_8bit_HighSpeed:
[e :U 312 ]
"175
[; ;MCAL_Layer/EUSART/hal_eusart.c: 175:                 (TXSTAbits.SYNC = 0);
[e = . . _TXSTAbits 0 4 -> -> 0 `i `uc ]
"176
[; ;MCAL_Layer/EUSART/hal_eusart.c: 176:                 (BAUDCONbits.BRG16 = 0);
[e = . . _BAUDCONbits 0 3 -> -> 0 `i `uc ]
"177
[; ;MCAL_Layer/EUSART/hal_eusart.c: 177:                 (TXSTAbits.BRGH = 1);
[e = . . _TXSTAbits 0 2 -> -> 1 `i `uc ]
"178
[; ;MCAL_Layer/EUSART/hal_eusart.c: 178:                 baudrate_val = ((8000000/(float)eusart_obj->baudrate_value)/16)-1;
[e = _baudrate_val - / / -> -> 8000000 `l `f -> . *U _eusart_obj 1 `f -> -> 16 `i `f -> -> 1 `i `f ]
"179
[; ;MCAL_Layer/EUSART/hal_eusart.c: 179:                 SPBRG = (uint8)((uint32)baudrate_val);
[e = _SPBRG -> -> _baudrate_val `ui `uc ]
"180
[; ;MCAL_Layer/EUSART/hal_eusart.c: 180:                 SPBRGH = (uint8)(((uint32)baudrate_val) >> 8);
[e = _SPBRGH -> >> -> _baudrate_val `ui -> 8 `i `uc ]
"181
[; ;MCAL_Layer/EUSART/hal_eusart.c: 181:                 break;
[e $U 309  ]
"183
[; ;MCAL_Layer/EUSART/hal_eusart.c: 183:             case EUSART_Asynchronous_16bit_LowSpeed:
[e :U 313 ]
"184
[; ;MCAL_Layer/EUSART/hal_eusart.c: 184:                 (TXSTAbits.SYNC = 0);
[e = . . _TXSTAbits 0 4 -> -> 0 `i `uc ]
"185
[; ;MCAL_Layer/EUSART/hal_eusart.c: 185:                 (BAUDCONbits.BRG16 = 1);
[e = . . _BAUDCONbits 0 3 -> -> 1 `i `uc ]
"186
[; ;MCAL_Layer/EUSART/hal_eusart.c: 186:                 (TXSTAbits.BRGH = 0);
[e = . . _TXSTAbits 0 2 -> -> 0 `i `uc ]
"187
[; ;MCAL_Layer/EUSART/hal_eusart.c: 187:                 baudrate_val = ((8000000/(float)eusart_obj->baudrate_value)/16)-1;
[e = _baudrate_val - / / -> -> 8000000 `l `f -> . *U _eusart_obj 1 `f -> -> 16 `i `f -> -> 1 `i `f ]
"188
[; ;MCAL_Layer/EUSART/hal_eusart.c: 188:                 SPBRG = (uint8)((uint32)baudrate_val);
[e = _SPBRG -> -> _baudrate_val `ui `uc ]
"189
[; ;MCAL_Layer/EUSART/hal_eusart.c: 189:                 SPBRGH = (uint8)(((uint32)baudrate_val) >> 8);
[e = _SPBRGH -> >> -> _baudrate_val `ui -> 8 `i `uc ]
"190
[; ;MCAL_Layer/EUSART/hal_eusart.c: 190:                 break;
[e $U 309  ]
"192
[; ;MCAL_Layer/EUSART/hal_eusart.c: 192:             case EUSART_Asynchronous_16bit_HighSpeed:
[e :U 314 ]
"193
[; ;MCAL_Layer/EUSART/hal_eusart.c: 193:                 (TXSTAbits.SYNC = 0);
[e = . . _TXSTAbits 0 4 -> -> 0 `i `uc ]
"194
[; ;MCAL_Layer/EUSART/hal_eusart.c: 194:                 (BAUDCONbits.BRG16 = 1);
[e = . . _BAUDCONbits 0 3 -> -> 1 `i `uc ]
"195
[; ;MCAL_Layer/EUSART/hal_eusart.c: 195:                 (TXSTAbits.BRGH = 1);
[e = . . _TXSTAbits 0 2 -> -> 1 `i `uc ]
"196
[; ;MCAL_Layer/EUSART/hal_eusart.c: 196:                 baudrate_val = ((8000000/(float)eusart_obj->baudrate_value)/4)-1;
[e = _baudrate_val - / / -> -> 8000000 `l `f -> . *U _eusart_obj 1 `f -> -> 4 `i `f -> -> 1 `i `f ]
"197
[; ;MCAL_Layer/EUSART/hal_eusart.c: 197:                 SPBRG = (uint8)((uint32)baudrate_val);
[e = _SPBRG -> -> _baudrate_val `ui `uc ]
"198
[; ;MCAL_Layer/EUSART/hal_eusart.c: 198:                 SPBRGH = (uint8)(((uint32)baudrate_val) >> 8);
[e = _SPBRGH -> >> -> _baudrate_val `ui -> 8 `i `uc ]
"199
[; ;MCAL_Layer/EUSART/hal_eusart.c: 199:                 break;
[e $U 309  ]
"201
[; ;MCAL_Layer/EUSART/hal_eusart.c: 201:             case EUSART_Synchronous_8bit:
[e :U 315 ]
"202
[; ;MCAL_Layer/EUSART/hal_eusart.c: 202:                 (TXSTAbits.SYNC = 1);
[e = . . _TXSTAbits 0 4 -> -> 1 `i `uc ]
"203
[; ;MCAL_Layer/EUSART/hal_eusart.c: 203:                 (BAUDCONbits.BRG16 = 0);
[e = . . _BAUDCONbits 0 3 -> -> 0 `i `uc ]
"204
[; ;MCAL_Layer/EUSART/hal_eusart.c: 204:                 baudrate_val = ((8000000/(float)eusart_obj->baudrate_value)/4)-1;
[e = _baudrate_val - / / -> -> 8000000 `l `f -> . *U _eusart_obj 1 `f -> -> 4 `i `f -> -> 1 `i `f ]
"205
[; ;MCAL_Layer/EUSART/hal_eusart.c: 205:                 SPBRG = (uint8)((uint32)baudrate_val);
[e = _SPBRG -> -> _baudrate_val `ui `uc ]
"206
[; ;MCAL_Layer/EUSART/hal_eusart.c: 206:                 SPBRGH = (uint8)(((uint32)baudrate_val) >> 8);
[e = _SPBRGH -> >> -> _baudrate_val `ui -> 8 `i `uc ]
"207
[; ;MCAL_Layer/EUSART/hal_eusart.c: 207:                 break;
[e $U 309  ]
"209
[; ;MCAL_Layer/EUSART/hal_eusart.c: 209:             case EUSART_Synchronous_16bit:
[e :U 316 ]
"210
[; ;MCAL_Layer/EUSART/hal_eusart.c: 210:                 (TXSTAbits.SYNC = 1);
[e = . . _TXSTAbits 0 4 -> -> 1 `i `uc ]
"211
[; ;MCAL_Layer/EUSART/hal_eusart.c: 211:                 (BAUDCONbits.BRG16 = 1);
[e = . . _BAUDCONbits 0 3 -> -> 1 `i `uc ]
"212
[; ;MCAL_Layer/EUSART/hal_eusart.c: 212:                 baudrate_val = ((8000000/(float)eusart_obj->baudrate_value)/4)-1;
[e = _baudrate_val - / / -> -> 8000000 `l `f -> . *U _eusart_obj 1 `f -> -> 4 `i `f -> -> 1 `i `f ]
"213
[; ;MCAL_Layer/EUSART/hal_eusart.c: 213:                 SPBRG = (uint8)((uint32)baudrate_val);
[e = _SPBRG -> -> _baudrate_val `ui `uc ]
"214
[; ;MCAL_Layer/EUSART/hal_eusart.c: 214:                 SPBRGH = (uint8)(((uint32)baudrate_val) >> 8);
[e = _SPBRGH -> >> -> _baudrate_val `ui -> 8 `i `uc ]
"215
[; ;MCAL_Layer/EUSART/hal_eusart.c: 215:                 break;
[e $U 309  ]
"217
[; ;MCAL_Layer/EUSART/hal_eusart.c: 217:             default:
[e :U 317 ]
"219
[; ;MCAL_Layer/EUSART/hal_eusart.c: 219:                 break;
[e $U 309  ]
"220
[; ;MCAL_Layer/EUSART/hal_eusart.c: 220:         }
}
[e $U 309  ]
[e :U 310 ]
[e [\ -> . *U _eusart_obj 2 `ui , $ -> . `E2873 0 `ui 311
 , $ -> . `E2873 1 `ui 312
 , $ -> . `E2873 2 `ui 313
 , $ -> . `E2873 3 `ui 314
 , $ -> . `E2873 4 `ui 315
 , $ -> . `E2873 5 `ui 316
 317 ]
[e :U 309 ]
"221
[; ;MCAL_Layer/EUSART/hal_eusart.c: 221:     }
}
[e $U 318  ]
"222
[; ;MCAL_Layer/EUSART/hal_eusart.c: 222:     else{
[e :U 308 ]
{
"223
[; ;MCAL_Layer/EUSART/hal_eusart.c: 223:         Status = (STD_ReturnType)0x00;
[e = _Status -> -> 0 `i `uc ]
"224
[; ;MCAL_Layer/EUSART/hal_eusart.c: 224:     }
}
[e :U 318 ]
"225
[; ;MCAL_Layer/EUSART/hal_eusart.c: 225:     return Status;
[e ) _Status ]
[e $UE 307  ]
"227
[; ;MCAL_Layer/EUSART/hal_eusart.c: 227: }
[e :UE 307 ]
}
"229
[; ;MCAL_Layer/EUSART/hal_eusart.c: 229: static STD_ReturnType eusart_tx_init(const eusart_tx_t *eusart_tx_obj){
[v _eusart_tx_init `(uc ~T0 @X0 1 sf1`*CS273 ]
{
[e :U _eusart_tx_init ]
[v _eusart_tx_obj `*CS273 ~T0 @X0 1 r1 ]
[f ]
"230
[; ;MCAL_Layer/EUSART/hal_eusart.c: 230:     STD_ReturnType Status = (STD_ReturnType)0x01;
[v _Status `uc ~T0 @X0 1 a ]
[e = _Status -> -> 1 `i `uc ]
"231
[; ;MCAL_Layer/EUSART/hal_eusart.c: 231:     if(eusart_tx_obj != ((void*)0)){
[e $ ! != _eusart_tx_obj -> -> -> 0 `i `*v `*CS273 320  ]
{
"245
[; ;MCAL_Layer/EUSART/hal_eusart.c: 245:         if(eusart_tx_obj->eusart_9bit_transmission == 1){
[e $ ! == -> . *U _eusart_tx_obj 1 `i -> 1 `i 321  ]
{
"246
[; ;MCAL_Layer/EUSART/hal_eusart.c: 246:             (TXSTAbits.TX9 = 1);
[e = . . _TXSTAbits 0 6 -> -> 1 `i `uc ]
"247
[; ;MCAL_Layer/EUSART/hal_eusart.c: 247:         }
}
[e $U 322  ]
"248
[; ;MCAL_Layer/EUSART/hal_eusart.c: 248:         else if(eusart_tx_obj->eusart_9bit_transmission == 0){
[e :U 321 ]
[e $ ! == -> . *U _eusart_tx_obj 1 `i -> 0 `i 323  ]
{
"249
[; ;MCAL_Layer/EUSART/hal_eusart.c: 249:             (TXSTAbits.TX9 = 0);
[e = . . _TXSTAbits 0 6 -> -> 0 `i `uc ]
"250
[; ;MCAL_Layer/EUSART/hal_eusart.c: 250:         }
}
[e $U 324  ]
"251
[; ;MCAL_Layer/EUSART/hal_eusart.c: 251:         else{
[e :U 323 ]
{
"252
[; ;MCAL_Layer/EUSART/hal_eusart.c: 252:             Status = (STD_ReturnType)0x00;
[e = _Status -> -> 0 `i `uc ]
"253
[; ;MCAL_Layer/EUSART/hal_eusart.c: 253:         }
}
[e :U 324 ]
[e :U 322 ]
"257
[; ;MCAL_Layer/EUSART/hal_eusart.c: 257:         if(eusart_tx_obj->eusart_tx_interrupt_enabled == 1){
[e $ ! == -> . *U _eusart_tx_obj 2 `i -> 1 `i 325  ]
{
"259
[; ;MCAL_Layer/EUSART/hal_eusart.c: 259:             (PIE1bits.TXIE = 0);
[e = . . _PIE1bits 0 4 -> -> 0 `i `uc ]
"261
[; ;MCAL_Layer/EUSART/hal_eusart.c: 261:             TX_Handler = eusart_tx_obj->Int_Tx_Handler_Var;
[e = _TX_Handler . *U _eusart_tx_obj 4 ]
"276
[; ;MCAL_Layer/EUSART/hal_eusart.c: 276:             (INTCONbits.GIE = 1);
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"277
[; ;MCAL_Layer/EUSART/hal_eusart.c: 277:             (INTCONbits.PEIE = 1);
[e = . . _INTCONbits 1 6 -> -> 1 `i `uc ]
"280
[; ;MCAL_Layer/EUSART/hal_eusart.c: 280:             (PIE1bits.TXIE = 1);
[e = . . _PIE1bits 0 4 -> -> 1 `i `uc ]
"281
[; ;MCAL_Layer/EUSART/hal_eusart.c: 281:         }
}
[e $U 326  ]
"282
[; ;MCAL_Layer/EUSART/hal_eusart.c: 282:         else if(eusart_tx_obj->eusart_tx_interrupt_enabled == 0){
[e :U 325 ]
[e $ ! == -> . *U _eusart_tx_obj 2 `i -> 0 `i 327  ]
{
"283
[; ;MCAL_Layer/EUSART/hal_eusart.c: 283:             (PIE1bits.TXIE = 0);
[e = . . _PIE1bits 0 4 -> -> 0 `i `uc ]
"284
[; ;MCAL_Layer/EUSART/hal_eusart.c: 284:         }
}
[e $U 328  ]
"285
[; ;MCAL_Layer/EUSART/hal_eusart.c: 285:         else{
[e :U 327 ]
{
"286
[; ;MCAL_Layer/EUSART/hal_eusart.c: 286:             Status = (STD_ReturnType)0x00;
[e = _Status -> -> 0 `i `uc ]
"287
[; ;MCAL_Layer/EUSART/hal_eusart.c: 287:         }
}
[e :U 328 ]
[e :U 326 ]
"291
[; ;MCAL_Layer/EUSART/hal_eusart.c: 291:     }
}
[e $U 329  ]
"292
[; ;MCAL_Layer/EUSART/hal_eusart.c: 292:     else{
[e :U 320 ]
{
"293
[; ;MCAL_Layer/EUSART/hal_eusart.c: 293:         Status = (STD_ReturnType)0x00;
[e = _Status -> -> 0 `i `uc ]
"294
[; ;MCAL_Layer/EUSART/hal_eusart.c: 294:     }
}
[e :U 329 ]
"297
[; ;MCAL_Layer/EUSART/hal_eusart.c: 297:     return Status;
[e ) _Status ]
[e $UE 319  ]
"298
[; ;MCAL_Layer/EUSART/hal_eusart.c: 298: }
[e :UE 319 ]
}
"301
[; ;MCAL_Layer/EUSART/hal_eusart.c: 301: static STD_ReturnType eusart_rx_init(const eusart_rx_t *eusart_rx_obj){
[v _eusart_rx_init `(uc ~T0 @X0 1 sf1`*CS274 ]
{
[e :U _eusart_rx_init ]
[v _eusart_rx_obj `*CS274 ~T0 @X0 1 r1 ]
[f ]
"302
[; ;MCAL_Layer/EUSART/hal_eusart.c: 302:     STD_ReturnType Status = (STD_ReturnType)0x01;
[v _Status `uc ~T0 @X0 1 a ]
[e = _Status -> -> 1 `i `uc ]
"303
[; ;MCAL_Layer/EUSART/hal_eusart.c: 303:     if(eusart_rx_obj != ((void*)0)){
[e $ ! != _eusart_rx_obj -> -> -> 0 `i `*v `*CS274 331  ]
{
"304
[; ;MCAL_Layer/EUSART/hal_eusart.c: 304:         if(eusart_rx_obj->eusart_rx_enabled == 1){
[e $ ! == -> . *U _eusart_rx_obj 0 `i -> 1 `i 332  ]
{
"305
[; ;MCAL_Layer/EUSART/hal_eusart.c: 305:             (RCSTAbits.CREN = 1);
[e = . . _RCSTAbits 0 4 -> -> 1 `i `uc ]
"306
[; ;MCAL_Layer/EUSART/hal_eusart.c: 306:         }
}
[e $U 333  ]
"307
[; ;MCAL_Layer/EUSART/hal_eusart.c: 307:         else if(eusart_rx_obj->eusart_rx_enabled == 0){
[e :U 332 ]
[e $ ! == -> . *U _eusart_rx_obj 0 `i -> 0 `i 334  ]
{
"308
[; ;MCAL_Layer/EUSART/hal_eusart.c: 308:             (RCSTAbits.CREN = 0);
[e = . . _RCSTAbits 0 4 -> -> 0 `i `uc ]
"309
[; ;MCAL_Layer/EUSART/hal_eusart.c: 309:         }
}
[e $U 335  ]
"310
[; ;MCAL_Layer/EUSART/hal_eusart.c: 310:         else{
[e :U 334 ]
{
"311
[; ;MCAL_Layer/EUSART/hal_eusart.c: 311:             Status = (STD_ReturnType)0x00;
[e = _Status -> -> 0 `i `uc ]
"312
[; ;MCAL_Layer/EUSART/hal_eusart.c: 312:         }
}
[e :U 335 ]
[e :U 333 ]
"315
[; ;MCAL_Layer/EUSART/hal_eusart.c: 315:         if(eusart_rx_obj->eusart_9bit_reception == 1){
[e $ ! == -> . *U _eusart_rx_obj 1 `i -> 1 `i 336  ]
{
"316
[; ;MCAL_Layer/EUSART/hal_eusart.c: 316:             (RCSTAbits.RX9 = 1);
[e = . . _RCSTAbits 0 6 -> -> 1 `i `uc ]
"317
[; ;MCAL_Layer/EUSART/hal_eusart.c: 317:         }
}
[e $U 337  ]
"318
[; ;MCAL_Layer/EUSART/hal_eusart.c: 318:         else if(eusart_rx_obj->eusart_9bit_reception == 0){
[e :U 336 ]
[e $ ! == -> . *U _eusart_rx_obj 1 `i -> 0 `i 338  ]
{
"319
[; ;MCAL_Layer/EUSART/hal_eusart.c: 319:             (RCSTAbits.RX9 = 0);
[e = . . _RCSTAbits 0 6 -> -> 0 `i `uc ]
"320
[; ;MCAL_Layer/EUSART/hal_eusart.c: 320:         }
}
[e $U 339  ]
"321
[; ;MCAL_Layer/EUSART/hal_eusart.c: 321:         else{
[e :U 338 ]
{
"322
[; ;MCAL_Layer/EUSART/hal_eusart.c: 322:             Status = (STD_ReturnType)0x00;
[e = _Status -> -> 0 `i `uc ]
"323
[; ;MCAL_Layer/EUSART/hal_eusart.c: 323:         }
}
[e :U 339 ]
[e :U 337 ]
"326
[; ;MCAL_Layer/EUSART/hal_eusart.c: 326:         if(eusart_rx_obj->eusart_rx_interrupt_enabled == 1){
[e $ ! == -> . *U _eusart_rx_obj 2 `i -> 1 `i 340  ]
{
"327
[; ;MCAL_Layer/EUSART/hal_eusart.c: 327:             (PIE1bits.RCIE = 1);
[e = . . _PIE1bits 0 5 -> -> 1 `i `uc ]
"328
[; ;MCAL_Layer/EUSART/hal_eusart.c: 328:             RX_Handler = eusart_rx_obj->Int_Rx_Handler_Var;
[e = _RX_Handler . *U _eusart_rx_obj 4 ]
"331
[; ;MCAL_Layer/EUSART/hal_eusart.c: 331:         }
}
[e $U 341  ]
"332
[; ;MCAL_Layer/EUSART/hal_eusart.c: 332:         else if(eusart_rx_obj->eusart_rx_interrupt_enabled == 0){
[e :U 340 ]
[e $ ! == -> . *U _eusart_rx_obj 2 `i -> 0 `i 342  ]
{
"333
[; ;MCAL_Layer/EUSART/hal_eusart.c: 333:             (PIE1bits.RCIE = 0);
[e = . . _PIE1bits 0 5 -> -> 0 `i `uc ]
"334
[; ;MCAL_Layer/EUSART/hal_eusart.c: 334:         }
}
[e $U 343  ]
"335
[; ;MCAL_Layer/EUSART/hal_eusart.c: 335:         else{
[e :U 342 ]
{
"336
[; ;MCAL_Layer/EUSART/hal_eusart.c: 336:             Status = (STD_ReturnType)0x00;
[e = _Status -> -> 0 `i `uc ]
"337
[; ;MCAL_Layer/EUSART/hal_eusart.c: 337:         }
}
[e :U 343 ]
[e :U 341 ]
"339
[; ;MCAL_Layer/EUSART/hal_eusart.c: 339:     }
}
[e $U 344  ]
"340
[; ;MCAL_Layer/EUSART/hal_eusart.c: 340:     else{
[e :U 331 ]
{
"341
[; ;MCAL_Layer/EUSART/hal_eusart.c: 341:         Status = (STD_ReturnType)0x00;
[e = _Status -> -> 0 `i `uc ]
"342
[; ;MCAL_Layer/EUSART/hal_eusart.c: 342:     }
}
[e :U 344 ]
"345
[; ;MCAL_Layer/EUSART/hal_eusart.c: 345:     return Status;
[e ) _Status ]
[e $UE 330  ]
"346
[; ;MCAL_Layer/EUSART/hal_eusart.c: 346: }
[e :UE 330 ]
}
"349
[; ;MCAL_Layer/EUSART/hal_eusart.c: 349: void EUSART_TX_Isr(void){
[v _EUSART_TX_Isr `(v ~T0 @X0 1 ef ]
{
[e :U _EUSART_TX_Isr ]
[f ]
"351
[; ;MCAL_Layer/EUSART/hal_eusart.c: 351:     if(TX_Handler){
[e $ ! != _TX_Handler -> -> 0 `i `*F2999 346  ]
{
"352
[; ;MCAL_Layer/EUSART/hal_eusart.c: 352:         TX_Handler();
[e ( *U _TX_Handler ..  ]
"353
[; ;MCAL_Layer/EUSART/hal_eusart.c: 353:     }
}
[e :U 346 ]
"354
[; ;MCAL_Layer/EUSART/hal_eusart.c: 354: }
[e :UE 345 ]
}
"355
[; ;MCAL_Layer/EUSART/hal_eusart.c: 355: void EUSART_RX_Isr(void){
[v _EUSART_RX_Isr `(v ~T0 @X0 1 ef ]
{
[e :U _EUSART_RX_Isr ]
[f ]
"356
[; ;MCAL_Layer/EUSART/hal_eusart.c: 356:     if(RX_Handler){
[e $ ! != _RX_Handler -> -> 0 `i `*F3001 348  ]
{
"357
[; ;MCAL_Layer/EUSART/hal_eusart.c: 357:         RX_Handler();
[e ( *U _RX_Handler ..  ]
"358
[; ;MCAL_Layer/EUSART/hal_eusart.c: 358:     }
}
[e :U 348 ]
"359
[; ;MCAL_Layer/EUSART/hal_eusart.c: 359: }
[e :UE 347 ]
}
