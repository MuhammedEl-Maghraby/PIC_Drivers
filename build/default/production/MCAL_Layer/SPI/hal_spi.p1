Version 4.0 HI-TECH Software Intermediate Code
"12 MCAL_Layer/SPI/hal_spi.c
[; ;MCAL_Layer/SPI/hal_spi.c: 12: STD_ReturnType mcal_spi_init(const spi_cfg_t *spi_obj){
[c E2885 0 1 2 3 4 5 .. ]
[n E2885 . SPI_Master_Clock_Fosc_Div_By_4 SPI_Master_Clock_Fosc_Div_By_16 SPI_Master_Clock_Fosc_Div_By_64 SPI_Master_Clock_TMR2_Div_By_2 SPI_Slave_SS_Pin_Enabled SPI_Slave_SS_Pin_Disabled  ]
[c E2873 0 1 .. ]
[n E2873 . SPI_Transmit_On_Trans_From_Idle_To_Active SPI_Transmit_On_Trans_From_Active_To_Idle  ]
[c E2877 0 1 .. ]
[n E2877 . Idle_State_Low Idle_State_High  ]
[c E2881 0 1 .. ]
[n E2881 . SPI_Data_Sampled_At_Middle_Of_Output SPI_Data_Sampled_At_End_Of_Output  ]
"73 MCAL_Layer/SPI/hal_spi.h
[; ;MCAL_Layer/SPI/hal_spi.h: 73: typedef struct{
[s S273 `E2885 1 `E2873 1 `E2877 1 `E2881 1 `uc 1 ]
[n S273 . spi_mode spi_clock_phase spi_clock_Polarity spi_sample_data serial_port_enable ]
"4738 C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc\pic18f4620.h
[s S185 :4 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S185 . SSPM CKP SSPEN SSPOV WCOL ]
"4745
[s S186 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S186 . SSPM0 SSPM1 SSPM2 SSPM3 ]
"4737
[u S184 `S185 1 `S186 1 ]
[n S184 . . . ]
"4752
[v _SSPCON1bits `VS184 ~T0 @X0 0 e@4038 ]
"1836
[s S65 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S65 . TRISC0 TRISC1 TRISC2 TRISC3 TRISC4 TRISC5 TRISC6 TRISC7 ]
"1846
[s S66 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S66 . RC0 RC1 RC2 RC3 RC4 RC5 RC6 RC7 ]
"1835
[u S64 `S65 1 `S66 1 ]
[n S64 . . . ]
"1857
[v _TRISCbits `VS64 ~T0 @X0 0 e@3988 ]
"1392
[s S53 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S53 . TRISA0 TRISA1 TRISA2 TRISA3 TRISA4 TRISA5 TRISA6 TRISA7 ]
"1402
[s S54 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S54 . RA0 RA1 RA2 RA3 RA4 RA5 RA6 RA7 ]
"1391
[u S52 `S53 1 `S54 1 ]
[n S52 . . . ]
"1413
[v _TRISAbits `VS52 ~T0 @X0 0 e@3986 ]
"4808
[s S188 :2 `uc 1 :1 `uc 1 ]
[n S188 . . R_NOT_W ]
"4812
[s S189 :5 `uc 1 :1 `uc 1 ]
[n S189 . . D_NOT_A ]
"4816
[s S190 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S190 . BF UA R_nW S P D_nA CKE SMP ]
"4826
[s S191 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S191 . . R . D ]
"4832
[s S192 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S192 . . W . A ]
"4838
[s S193 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S193 . . nW . nA ]
"4844
[s S194 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S194 . . R_W . D_A ]
"4850
[s S195 :2 `uc 1 :1 `uc 1 ]
[n S195 . . NOT_WRITE ]
"4854
[s S196 :5 `uc 1 :1 `uc 1 ]
[n S196 . . NOT_ADDRESS ]
"4858
[s S197 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S197 . . nWRITE . nADDRESS ]
"4864
[s S198 :2 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S198 . . RW START STOP DA ]
"4871
[s S199 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S199 . . NOT_W . NOT_A ]
"4807
[u S187 `S188 1 `S189 1 `S190 1 `S191 1 `S192 1 `S193 1 `S194 1 `S195 1 `S196 1 `S197 1 `S198 1 `S199 1 ]
[n S187 . . . . . . . . . . . . . ]
"4878
[v _SSPSTATbits `VS187 ~T0 @X0 0 e@4039 ]
"881
[v _LATA `Vuc ~T0 @X0 0 e@3977 ]
"5030
[v _SSPBUF `Vuc ~T0 @X0 0 e@4041 ]
"2581
[s S89 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S89 . TMR1IF TMR2IF CCP1IF SSPIF TXIF RCIF ADIF PSPIF ]
"2591
[s S90 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S90 . . TX1IF RC1IF ]
"2580
[u S88 `S89 1 `S90 1 ]
[n S88 . . . ]
"2597
[v _PIR1bits `VS88 ~T0 @X0 0 e@3998 ]
"55 C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc\pic18f4620.h
[; <" PORTA equ 0F80h ;# ">
"192
[; <" PORTB equ 0F81h ;# ">
"363
[; <" PORTC equ 0F82h ;# ">
"538
[; <" PORTD equ 0F83h ;# ">
"680
[; <" PORTE equ 0F84h ;# ">
"883
[; <" LATA equ 0F89h ;# ">
"995
[; <" LATB equ 0F8Ah ;# ">
"1107
[; <" LATC equ 0F8Bh ;# ">
"1219
[; <" LATD equ 0F8Ch ;# ">
"1331
[; <" LATE equ 0F8Dh ;# ">
"1383
[; <" TRISA equ 0F92h ;# ">
"1388
[; <" DDRA equ 0F92h ;# ">
"1605
[; <" TRISB equ 0F93h ;# ">
"1610
[; <" DDRB equ 0F93h ;# ">
"1827
[; <" TRISC equ 0F94h ;# ">
"1832
[; <" DDRC equ 0F94h ;# ">
"2049
[; <" TRISD equ 0F95h ;# ">
"2054
[; <" DDRD equ 0F95h ;# ">
"2271
[; <" TRISE equ 0F96h ;# ">
"2276
[; <" DDRE equ 0F96h ;# ">
"2435
[; <" OSCTUNE equ 0F9Bh ;# ">
"2500
[; <" PIE1 equ 0F9Dh ;# ">
"2577
[; <" PIR1 equ 0F9Eh ;# ">
"2654
[; <" IPR1 equ 0F9Fh ;# ">
"2731
[; <" PIE2 equ 0FA0h ;# ">
"2797
[; <" PIR2 equ 0FA1h ;# ">
"2863
[; <" IPR2 equ 0FA2h ;# ">
"2929
[; <" EECON1 equ 0FA6h ;# ">
"2995
[; <" EECON2 equ 0FA7h ;# ">
"3002
[; <" EEDATA equ 0FA8h ;# ">
"3009
[; <" EEADR equ 0FA9h ;# ">
"3016
[; <" EEADRH equ 0FAAh ;# ">
"3023
[; <" RCSTA equ 0FABh ;# ">
"3028
[; <" RCSTA1 equ 0FABh ;# ">
"3233
[; <" TXSTA equ 0FACh ;# ">
"3238
[; <" TXSTA1 equ 0FACh ;# ">
"3489
[; <" TXREG equ 0FADh ;# ">
"3494
[; <" TXREG1 equ 0FADh ;# ">
"3501
[; <" RCREG equ 0FAEh ;# ">
"3506
[; <" RCREG1 equ 0FAEh ;# ">
"3513
[; <" SPBRG equ 0FAFh ;# ">
"3518
[; <" SPBRG1 equ 0FAFh ;# ">
"3525
[; <" SPBRGH equ 0FB0h ;# ">
"3532
[; <" T3CON equ 0FB1h ;# ">
"3644
[; <" TMR3 equ 0FB2h ;# ">
"3651
[; <" TMR3L equ 0FB2h ;# ">
"3658
[; <" TMR3H equ 0FB3h ;# ">
"3665
[; <" CMCON equ 0FB4h ;# ">
"3755
[; <" CVRCON equ 0FB5h ;# ">
"3834
[; <" ECCP1AS equ 0FB6h ;# ">
"3916
[; <" PWM1CON equ 0FB7h ;# ">
"3986
[; <" BAUDCON equ 0FB8h ;# ">
"3991
[; <" BAUDCTL equ 0FB8h ;# ">
"4158
[; <" CCP2CON equ 0FBAh ;# ">
"4237
[; <" CCPR2 equ 0FBBh ;# ">
"4244
[; <" CCPR2L equ 0FBBh ;# ">
"4251
[; <" CCPR2H equ 0FBCh ;# ">
"4258
[; <" CCP1CON equ 0FBDh ;# ">
"4355
[; <" CCPR1 equ 0FBEh ;# ">
"4362
[; <" CCPR1L equ 0FBEh ;# ">
"4369
[; <" CCPR1H equ 0FBFh ;# ">
"4376
[; <" ADCON2 equ 0FC0h ;# ">
"4447
[; <" ADCON1 equ 0FC1h ;# ">
"4532
[; <" ADCON0 equ 0FC2h ;# ">
"4651
[; <" ADRES equ 0FC3h ;# ">
"4658
[; <" ADRESL equ 0FC3h ;# ">
"4665
[; <" ADRESH equ 0FC4h ;# ">
"4672
[; <" SSPCON2 equ 0FC5h ;# ">
"4734
[; <" SSPCON1 equ 0FC6h ;# ">
"4804
[; <" SSPSTAT equ 0FC7h ;# ">
"5025
[; <" SSPADD equ 0FC8h ;# ">
"5032
[; <" SSPBUF equ 0FC9h ;# ">
"5039
[; <" T2CON equ 0FCAh ;# ">
"5110
[; <" PR2 equ 0FCBh ;# ">
"5115
[; <" MEMCON equ 0FCBh ;# ">
"5220
[; <" TMR2 equ 0FCCh ;# ">
"5227
[; <" T1CON equ 0FCDh ;# ">
"5330
[; <" TMR1 equ 0FCEh ;# ">
"5337
[; <" TMR1L equ 0FCEh ;# ">
"5344
[; <" TMR1H equ 0FCFh ;# ">
"5351
[; <" RCON equ 0FD0h ;# ">
"5484
[; <" WDTCON equ 0FD1h ;# ">
"5512
[; <" HLVDCON equ 0FD2h ;# ">
"5517
[; <" LVDCON equ 0FD2h ;# ">
"5782
[; <" OSCCON equ 0FD3h ;# ">
"5859
[; <" T0CON equ 0FD5h ;# ">
"5936
[; <" TMR0 equ 0FD6h ;# ">
"5943
[; <" TMR0L equ 0FD6h ;# ">
"5950
[; <" TMR0H equ 0FD7h ;# ">
"5957
[; <" STATUS equ 0FD8h ;# ">
"6028
[; <" FSR2 equ 0FD9h ;# ">
"6035
[; <" FSR2L equ 0FD9h ;# ">
"6042
[; <" FSR2H equ 0FDAh ;# ">
"6049
[; <" PLUSW2 equ 0FDBh ;# ">
"6056
[; <" PREINC2 equ 0FDCh ;# ">
"6063
[; <" POSTDEC2 equ 0FDDh ;# ">
"6070
[; <" POSTINC2 equ 0FDEh ;# ">
"6077
[; <" INDF2 equ 0FDFh ;# ">
"6084
[; <" BSR equ 0FE0h ;# ">
"6091
[; <" FSR1 equ 0FE1h ;# ">
"6098
[; <" FSR1L equ 0FE1h ;# ">
"6105
[; <" FSR1H equ 0FE2h ;# ">
"6112
[; <" PLUSW1 equ 0FE3h ;# ">
"6119
[; <" PREINC1 equ 0FE4h ;# ">
"6126
[; <" POSTDEC1 equ 0FE5h ;# ">
"6133
[; <" POSTINC1 equ 0FE6h ;# ">
"6140
[; <" INDF1 equ 0FE7h ;# ">
"6147
[; <" WREG equ 0FE8h ;# ">
"6159
[; <" FSR0 equ 0FE9h ;# ">
"6166
[; <" FSR0L equ 0FE9h ;# ">
"6173
[; <" FSR0H equ 0FEAh ;# ">
"6180
[; <" PLUSW0 equ 0FEBh ;# ">
"6187
[; <" PREINC0 equ 0FECh ;# ">
"6194
[; <" POSTDEC0 equ 0FEDh ;# ">
"6201
[; <" POSTINC0 equ 0FEEh ;# ">
"6208
[; <" INDF0 equ 0FEFh ;# ">
"6215
[; <" INTCON3 equ 0FF0h ;# ">
"6307
[; <" INTCON2 equ 0FF1h ;# ">
"6377
[; <" INTCON equ 0FF2h ;# ">
"6494
[; <" PROD equ 0FF3h ;# ">
"6501
[; <" PRODL equ 0FF3h ;# ">
"6508
[; <" PRODH equ 0FF4h ;# ">
"6515
[; <" TABLAT equ 0FF5h ;# ">
"6524
[; <" TBLPTR equ 0FF6h ;# ">
"6531
[; <" TBLPTRL equ 0FF6h ;# ">
"6538
[; <" TBLPTRH equ 0FF7h ;# ">
"6545
[; <" TBLPTRU equ 0FF8h ;# ">
"6554
[; <" PCLAT equ 0FF9h ;# ">
"6561
[; <" PC equ 0FF9h ;# ">
"6568
[; <" PCL equ 0FF9h ;# ">
"6575
[; <" PCLATH equ 0FFAh ;# ">
"6582
[; <" PCLATU equ 0FFBh ;# ">
"6589
[; <" STKPTR equ 0FFCh ;# ">
"6695
[; <" TOS equ 0FFDh ;# ">
"6702
[; <" TOSL equ 0FFDh ;# ">
"6709
[; <" TOSH equ 0FFEh ;# ">
"6716
[; <" TOSU equ 0FFFh ;# ">
"12 MCAL_Layer/SPI/hal_spi.c
[; ;MCAL_Layer/SPI/hal_spi.c: 12: STD_ReturnType mcal_spi_init(const spi_cfg_t *spi_obj){
[v _mcal_spi_init `(uc ~T0 @X0 1 ef1`*CS273 ]
{
[e :U _mcal_spi_init ]
[v _spi_obj `*CS273 ~T0 @X0 1 r1 ]
[f ]
"13
[; ;MCAL_Layer/SPI/hal_spi.c: 13:     STD_ReturnType status = (STD_ReturnType)0x01;
[v _status `uc ~T0 @X0 1 a ]
[e = _status -> -> 1 `i `uc ]
"15
[; ;MCAL_Layer/SPI/hal_spi.c: 15:     if(spi_obj != ((void*)0)){
[e $ ! != _spi_obj -> -> -> 0 `i `*v `*CS273 275  ]
{
"17
[; ;MCAL_Layer/SPI/hal_spi.c: 17:         if(spi_obj->serial_port_enable == 1){
[e $ ! == -> . *U _spi_obj 4 `i -> 1 `i 276  ]
{
"18
[; ;MCAL_Layer/SPI/hal_spi.c: 18:             (SSPCON1bits.SSPEN = 1);
[e = . . _SSPCON1bits 0 2 -> -> 1 `i `uc ]
"19
[; ;MCAL_Layer/SPI/hal_spi.c: 19:         }
}
[e $U 277  ]
"20
[; ;MCAL_Layer/SPI/hal_spi.c: 20:         else if (spi_obj->serial_port_enable == 0){
[e :U 276 ]
[e $ ! == -> . *U _spi_obj 4 `i -> 0 `i 278  ]
{
"21
[; ;MCAL_Layer/SPI/hal_spi.c: 21:             (SSPCON1bits.SSPEN = 0);
[e = . . _SSPCON1bits 0 2 -> -> 0 `i `uc ]
"22
[; ;MCAL_Layer/SPI/hal_spi.c: 22:         }
}
[e $U 279  ]
"23
[; ;MCAL_Layer/SPI/hal_spi.c: 23:         else{
[e :U 278 ]
{
"24
[; ;MCAL_Layer/SPI/hal_spi.c: 24:             status = (STD_ReturnType)0x00;
[e = _status -> -> 0 `i `uc ]
"25
[; ;MCAL_Layer/SPI/hal_spi.c: 25:         }
}
[e :U 279 ]
[e :U 277 ]
"26
[; ;MCAL_Layer/SPI/hal_spi.c: 26:         TRISCbits.RC5 = 0;
[e = . . _TRISCbits 1 5 -> -> 0 `i `uc ]
"27
[; ;MCAL_Layer/SPI/hal_spi.c: 27:         switch(spi_obj->spi_mode){
[e $U 281  ]
{
"28
[; ;MCAL_Layer/SPI/hal_spi.c: 28:             case SPI_Master_Clock_Fosc_Div_By_4:
[e :U 282 ]
"29
[; ;MCAL_Layer/SPI/hal_spi.c: 29:                 (SSPCON1bits.SSPM = SPI_Master_Clock_Fosc_Div_By_4);
[e = . . _SSPCON1bits 0 0 -> . `E2885 0 `uc ]
"30
[; ;MCAL_Layer/SPI/hal_spi.c: 30:                 TRISCbits.RC3 = 0;
[e = . . _TRISCbits 1 3 -> -> 0 `i `uc ]
"31
[; ;MCAL_Layer/SPI/hal_spi.c: 31:                 TRISAbits.RA5 = 0;
[e = . . _TRISAbits 1 5 -> -> 0 `i `uc ]
"32
[; ;MCAL_Layer/SPI/hal_spi.c: 32:                 break;
[e $U 280  ]
"34
[; ;MCAL_Layer/SPI/hal_spi.c: 34:             case SPI_Master_Clock_Fosc_Div_By_16:
[e :U 283 ]
"35
[; ;MCAL_Layer/SPI/hal_spi.c: 35:                 (SSPCON1bits.SSPM = SPI_Master_Clock_Fosc_Div_By_16);
[e = . . _SSPCON1bits 0 0 -> . `E2885 1 `uc ]
"36
[; ;MCAL_Layer/SPI/hal_spi.c: 36:                 TRISCbits.RC3 = 0;
[e = . . _TRISCbits 1 3 -> -> 0 `i `uc ]
"37
[; ;MCAL_Layer/SPI/hal_spi.c: 37:                 TRISAbits.RA5 = 0;
[e = . . _TRISAbits 1 5 -> -> 0 `i `uc ]
"38
[; ;MCAL_Layer/SPI/hal_spi.c: 38:                 break;
[e $U 280  ]
"40
[; ;MCAL_Layer/SPI/hal_spi.c: 40:             case SPI_Master_Clock_Fosc_Div_By_64:
[e :U 284 ]
"41
[; ;MCAL_Layer/SPI/hal_spi.c: 41:                 (SSPCON1bits.SSPM = SPI_Master_Clock_Fosc_Div_By_64);
[e = . . _SSPCON1bits 0 0 -> . `E2885 2 `uc ]
"42
[; ;MCAL_Layer/SPI/hal_spi.c: 42:                 TRISCbits.RC3 = 0;
[e = . . _TRISCbits 1 3 -> -> 0 `i `uc ]
"43
[; ;MCAL_Layer/SPI/hal_spi.c: 43:                 TRISAbits.RA5 = 0;
[e = . . _TRISAbits 1 5 -> -> 0 `i `uc ]
"44
[; ;MCAL_Layer/SPI/hal_spi.c: 44:                 break;
[e $U 280  ]
"46
[; ;MCAL_Layer/SPI/hal_spi.c: 46:             case SPI_Master_Clock_TMR2_Div_By_2:
[e :U 285 ]
"47
[; ;MCAL_Layer/SPI/hal_spi.c: 47:                 (SSPCON1bits.SSPM = SPI_Master_Clock_TMR2_Div_By_2);
[e = . . _SSPCON1bits 0 0 -> . `E2885 3 `uc ]
"48
[; ;MCAL_Layer/SPI/hal_spi.c: 48:                 TRISCbits.RC3 = 0;
[e = . . _TRISCbits 1 3 -> -> 0 `i `uc ]
"49
[; ;MCAL_Layer/SPI/hal_spi.c: 49:                 TRISAbits.RA5 = 0;
[e = . . _TRISAbits 1 5 -> -> 0 `i `uc ]
"50
[; ;MCAL_Layer/SPI/hal_spi.c: 50:                 break;
[e $U 280  ]
"52
[; ;MCAL_Layer/SPI/hal_spi.c: 52:             case SPI_Slave_SS_Pin_Enabled:
[e :U 286 ]
"53
[; ;MCAL_Layer/SPI/hal_spi.c: 53:                 (SSPCON1bits.SSPM = SPI_Slave_SS_Pin_Enabled);
[e = . . _SSPCON1bits 0 0 -> . `E2885 4 `uc ]
"54
[; ;MCAL_Layer/SPI/hal_spi.c: 54:                 TRISCbits.RC3 = 1;
[e = . . _TRISCbits 1 3 -> -> 1 `i `uc ]
"55
[; ;MCAL_Layer/SPI/hal_spi.c: 55:                 TRISAbits.RA5 = 1;
[e = . . _TRISAbits 1 5 -> -> 1 `i `uc ]
"56
[; ;MCAL_Layer/SPI/hal_spi.c: 56:                 break;
[e $U 280  ]
"58
[; ;MCAL_Layer/SPI/hal_spi.c: 58:             case SPI_Slave_SS_Pin_Disabled:
[e :U 287 ]
"59
[; ;MCAL_Layer/SPI/hal_spi.c: 59:                 (SSPCON1bits.SSPM = SPI_Slave_SS_Pin_Disabled);
[e = . . _SSPCON1bits 0 0 -> . `E2885 5 `uc ]
"60
[; ;MCAL_Layer/SPI/hal_spi.c: 60:                 TRISCbits.RC3 = 1;
[e = . . _TRISCbits 1 3 -> -> 1 `i `uc ]
"61
[; ;MCAL_Layer/SPI/hal_spi.c: 61:                 TRISAbits.RA5 = 1;
[e = . . _TRISAbits 1 5 -> -> 1 `i `uc ]
"62
[; ;MCAL_Layer/SPI/hal_spi.c: 62:                 break;
[e $U 280  ]
"64
[; ;MCAL_Layer/SPI/hal_spi.c: 64:             default:
[e :U 288 ]
"65
[; ;MCAL_Layer/SPI/hal_spi.c: 65:                 status = (STD_ReturnType)0x00;
[e = _status -> -> 0 `i `uc ]
"66
[; ;MCAL_Layer/SPI/hal_spi.c: 66:                 break;
[e $U 280  ]
"67
[; ;MCAL_Layer/SPI/hal_spi.c: 67:         }
}
[e $U 280  ]
[e :U 281 ]
[e [\ -> . *U _spi_obj 0 `ui , $ -> . `E2885 0 `ui 282
 , $ -> . `E2885 1 `ui 283
 , $ -> . `E2885 2 `ui 284
 , $ -> . `E2885 3 `ui 285
 , $ -> . `E2885 4 `ui 286
 , $ -> . `E2885 5 `ui 287
 288 ]
[e :U 280 ]
"70
[; ;MCAL_Layer/SPI/hal_spi.c: 70:         if(spi_obj->spi_clock_phase == SPI_Transmit_On_Trans_From_Idle_To_Active){
[e $ ! == -> . *U _spi_obj 1 `ui -> . `E2873 0 `ui 289  ]
{
"71
[; ;MCAL_Layer/SPI/hal_spi.c: 71:             (SSPSTATbits.CKE = SPI_Transmit_On_Trans_From_Idle_To_Active);
[e = . . _SSPSTATbits 2 6 -> . `E2873 0 `uc ]
"72
[; ;MCAL_Layer/SPI/hal_spi.c: 72:         }
}
[e $U 290  ]
"73
[; ;MCAL_Layer/SPI/hal_spi.c: 73:         else if(spi_obj->spi_clock_phase == SPI_Transmit_On_Trans_From_Active_To_Idle){
[e :U 289 ]
[e $ ! == -> . *U _spi_obj 1 `ui -> . `E2873 1 `ui 291  ]
{
"74
[; ;MCAL_Layer/SPI/hal_spi.c: 74:             (SSPSTATbits.CKE = SPI_Transmit_On_Trans_From_Active_To_Idle);
[e = . . _SSPSTATbits 2 6 -> . `E2873 1 `uc ]
"75
[; ;MCAL_Layer/SPI/hal_spi.c: 75:         }
}
[e $U 292  ]
"76
[; ;MCAL_Layer/SPI/hal_spi.c: 76:         else{
[e :U 291 ]
{
"77
[; ;MCAL_Layer/SPI/hal_spi.c: 77:           status = (STD_ReturnType)0x00;
[e = _status -> -> 0 `i `uc ]
"78
[; ;MCAL_Layer/SPI/hal_spi.c: 78:         }
}
[e :U 292 ]
[e :U 290 ]
"81
[; ;MCAL_Layer/SPI/hal_spi.c: 81:         if(spi_obj->spi_clock_Polarity == Idle_State_Low){
[e $ ! == -> . *U _spi_obj 2 `ui -> . `E2877 0 `ui 293  ]
{
"82
[; ;MCAL_Layer/SPI/hal_spi.c: 82:             (SSPCON1bits.CKP = Idle_State_Low);
[e = . . _SSPCON1bits 0 1 -> . `E2877 0 `uc ]
"83
[; ;MCAL_Layer/SPI/hal_spi.c: 83:         }
}
[e $U 294  ]
"84
[; ;MCAL_Layer/SPI/hal_spi.c: 84:         else if(spi_obj->spi_clock_Polarity == Idle_State_High){
[e :U 293 ]
[e $ ! == -> . *U _spi_obj 2 `ui -> . `E2877 1 `ui 295  ]
{
"85
[; ;MCAL_Layer/SPI/hal_spi.c: 85:             (SSPCON1bits.CKP = Idle_State_High);
[e = . . _SSPCON1bits 0 1 -> . `E2877 1 `uc ]
"86
[; ;MCAL_Layer/SPI/hal_spi.c: 86:         }
}
[e $U 296  ]
"87
[; ;MCAL_Layer/SPI/hal_spi.c: 87:         else{
[e :U 295 ]
{
"88
[; ;MCAL_Layer/SPI/hal_spi.c: 88:             status = (STD_ReturnType)0x00;
[e = _status -> -> 0 `i `uc ]
"89
[; ;MCAL_Layer/SPI/hal_spi.c: 89:         }
}
[e :U 296 ]
[e :U 294 ]
"92
[; ;MCAL_Layer/SPI/hal_spi.c: 92:         if(spi_obj->spi_sample_data == SPI_Data_Sampled_At_Middle_Of_Output){
[e $ ! == -> . *U _spi_obj 3 `ui -> . `E2881 0 `ui 297  ]
{
"93
[; ;MCAL_Layer/SPI/hal_spi.c: 93:             (SSPSTATbits.SMP = SPI_Data_Sampled_At_Middle_Of_Output);
[e = . . _SSPSTATbits 2 7 -> . `E2881 0 `uc ]
"94
[; ;MCAL_Layer/SPI/hal_spi.c: 94:         }
}
[e $U 298  ]
"95
[; ;MCAL_Layer/SPI/hal_spi.c: 95:         else if(spi_obj->spi_sample_data == SPI_Data_Sampled_At_End_Of_Output){
[e :U 297 ]
[e $ ! == -> . *U _spi_obj 3 `ui -> . `E2881 1 `ui 299  ]
{
"96
[; ;MCAL_Layer/SPI/hal_spi.c: 96:             (SSPSTATbits.SMP = SPI_Data_Sampled_At_End_Of_Output);
[e = . . _SSPSTATbits 2 7 -> . `E2881 1 `uc ]
"97
[; ;MCAL_Layer/SPI/hal_spi.c: 97:         }
}
[e $U 300  ]
"98
[; ;MCAL_Layer/SPI/hal_spi.c: 98:         else{
[e :U 299 ]
{
"99
[; ;MCAL_Layer/SPI/hal_spi.c: 99:             status = (STD_ReturnType)0x00;
[e = _status -> -> 0 `i `uc ]
"100
[; ;MCAL_Layer/SPI/hal_spi.c: 100:         }
}
[e :U 300 ]
[e :U 298 ]
"101
[; ;MCAL_Layer/SPI/hal_spi.c: 101:     }
}
[e $U 301  ]
"102
[; ;MCAL_Layer/SPI/hal_spi.c: 102:     else{
[e :U 275 ]
{
"103
[; ;MCAL_Layer/SPI/hal_spi.c: 103:         status = (STD_ReturnType)0x00;
[e = _status -> -> 0 `i `uc ]
"104
[; ;MCAL_Layer/SPI/hal_spi.c: 104:     }
}
[e :U 301 ]
"106
[; ;MCAL_Layer/SPI/hal_spi.c: 106:     return status;
[e ) _status ]
[e $UE 274  ]
"108
[; ;MCAL_Layer/SPI/hal_spi.c: 108: }
[e :UE 274 ]
}
"109
[; ;MCAL_Layer/SPI/hal_spi.c: 109: STD_ReturnType mcal_spi_deinit(const spi_cfg_t *spi_obj){
[v _mcal_spi_deinit `(uc ~T0 @X0 1 ef1`*CS273 ]
{
[e :U _mcal_spi_deinit ]
[v _spi_obj `*CS273 ~T0 @X0 1 r1 ]
[f ]
"112
[; ;MCAL_Layer/SPI/hal_spi.c: 112: }
[e :UE 302 ]
}
"113
[; ;MCAL_Layer/SPI/hal_spi.c: 113: STD_ReturnType mcal_spi_select_slave(uint8 slave_pin){
[v _mcal_spi_select_slave `(uc ~T0 @X0 1 ef1`uc ]
{
[e :U _mcal_spi_select_slave ]
[v _slave_pin `uc ~T0 @X0 1 r1 ]
[f ]
"114
[; ;MCAL_Layer/SPI/hal_spi.c: 114:     STD_ReturnType status = (STD_ReturnType)0x01;
[v _status `uc ~T0 @X0 1 a ]
[e = _status -> -> 1 `i `uc ]
"115
[; ;MCAL_Layer/SPI/hal_spi.c: 115:     if(slave_pin < 8 && slave_pin >= 0){
[e $ ! && < -> _slave_pin `i -> 8 `i >= -> _slave_pin `i -> 0 `i 304  ]
{
"116
[; ;MCAL_Layer/SPI/hal_spi.c: 116:         LATA &= ~(1 << slave_pin);
[e =& _LATA -> ~ << -> 1 `i -> _slave_pin `i `Vuc ]
"117
[; ;MCAL_Layer/SPI/hal_spi.c: 117:     }
}
[e $U 305  ]
"118
[; ;MCAL_Layer/SPI/hal_spi.c: 118:     else{
[e :U 304 ]
{
"119
[; ;MCAL_Layer/SPI/hal_spi.c: 119:         status = (STD_ReturnType)0x00;
[e = _status -> -> 0 `i `uc ]
"120
[; ;MCAL_Layer/SPI/hal_spi.c: 120:     }
}
[e :U 305 ]
"121
[; ;MCAL_Layer/SPI/hal_spi.c: 121: }
[e :UE 303 ]
}
"123
[; ;MCAL_Layer/SPI/hal_spi.c: 123: STD_ReturnType mcal_spi_send_byte_blocking(uint8 data){
[v _mcal_spi_send_byte_blocking `(uc ~T0 @X0 1 ef1`uc ]
{
[e :U _mcal_spi_send_byte_blocking ]
[v _data `uc ~T0 @X0 1 r1 ]
[f ]
"124
[; ;MCAL_Layer/SPI/hal_spi.c: 124:     SSPBUF = data;
[e = _SSPBUF _data ]
"125
[; ;MCAL_Layer/SPI/hal_spi.c: 125:     while(!PIR1bits.SSPIF);
[e $U 307  ]
[e :U 308 ]
[e :U 307 ]
[e $ ! != -> . . _PIR1bits 0 3 `i -> 0 `i 308  ]
[e :U 309 ]
"127
[; ;MCAL_Layer/SPI/hal_spi.c: 127: }
[e :UE 306 ]
}
"128
[; ;MCAL_Layer/SPI/hal_spi.c: 128: STD_ReturnType mcal_spi_receive_byte_blocking(uint8 *data){
[v _mcal_spi_receive_byte_blocking `(uc ~T0 @X0 1 ef1`*uc ]
{
[e :U _mcal_spi_receive_byte_blocking ]
[v _data `*uc ~T0 @X0 1 r1 ]
[f ]
"129
[; ;MCAL_Layer/SPI/hal_spi.c: 129:     while(!SSPSTATbits.BF);
[e $U 311  ]
[e :U 312 ]
[e :U 311 ]
[e $ ! != -> . . _SSPSTATbits 2 0 `i -> 0 `i 312  ]
[e :U 313 ]
"130
[; ;MCAL_Layer/SPI/hal_spi.c: 130:     *data = SSPBUF;
[e = *U _data _SSPBUF ]
"132
[; ;MCAL_Layer/SPI/hal_spi.c: 132: }
[e :UE 310 ]
}
