

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Aug 13 16:30:38 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37  0000                     
    38                           ; Version 2.40
    39                           ; Generated 17/11/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4620 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74                           	psect	idataCOMRAM
    75  0015D0                     __pidataCOMRAM:
    76                           	callstack 0
    77                           
    78                           ;initializer for _port_registers
    79  0015D0  80                 	db	128
    80  0015D1  0F                 	db	15
    81  0015D2  81                 	db	129
    82  0015D3  0F                 	db	15
    83  0015D4  82                 	db	130
    84  0015D5  0F                 	db	15
    85  0015D6  83                 	db	131
    86  0015D7  0F                 	db	15
    87  0015D8  84                 	db	132
    88  0015D9  0F                 	db	15
    89                           
    90                           ;initializer for _lat_registers
    91  0015DA  89                 	db	137
    92  0015DB  0F                 	db	15
    93  0015DC  8A                 	db	138
    94  0015DD  0F                 	db	15
    95  0015DE  8B                 	db	139
    96  0015DF  0F                 	db	15
    97  0015E0  8C                 	db	140
    98  0015E1  0F                 	db	15
    99  0015E2  8D                 	db	141
   100  0015E3  0F                 	db	15
   101                           
   102                           ;initializer for _tris_registers
   103  0015E4  92                 	db	146
   104  0015E5  0F                 	db	15
   105  0015E6  93                 	db	147
   106  0015E7  0F                 	db	15
   107  0015E8  94                 	db	148
   108  0015E9  0F                 	db	15
   109  0015EA  95                 	db	149
   110  0015EB  0F                 	db	15
   111  0015EC  96                 	db	150
   112  0015ED  0F                 	db	15
   113                           
   114                           ;initializer for _RB7_Flag
   115  0015EE  01                 	db	1
   116                           
   117                           ;initializer for _RB6_Flag
   118  0015EF  01                 	db	1
   119                           
   120                           ;initializer for _RB5_Flag
   121  0015F0  01                 	db	1
   122                           
   123                           ;initializer for _RB4_Flag
   124  0015F1  01                 	db	1
   125                           
   126                           ;initializer for _lcd_2
   127  0015F2  32                 	db	50
   128  0015F3  3A                 	db	58
   129  0015F4  03                 	db	3
   130  0015F5  0B                 	db	11
   131  0015F6  13                 	db	19
   132  0015F7  1B                 	db	27
   133  0015F8  23                 	db	35
   134  0015F9  2B                 	db	43
   135  0015FA  33                 	db	51
   136  0015FB  3B                 	db	59
   137                           
   138                           ;initializer for _lcd_1
   139  0015FC  02                 	db	2
   140  0015FD  0A                 	db	10
   141  0015FE  12                 	db	18
   142  0015FF  1A                 	db	26
   143  001600  22                 	db	34
   144  001601  2A                 	db	42
   145                           
   146                           ;initializer for __spi
   147  001602  02                 	db	2
   148  001603  00                 	db	0
   149  001604  00                 	db	0
   150  001605  01                 	db	1
   151  001606  01                 	db	1
   152                           
   153                           	psect	smallconst
   154  001000                     __psmallconst:
   155                           	callstack 0
   156  001000  00                 	db	0
   157  001001  37                 	db	55
   158  001002  38                 	db	56
   159  001003  39                 	db	57
   160  001004  2F                 	db	47
   161  001005  34                 	db	52
   162  001006  35                 	db	53
   163  001007  36                 	db	54
   164  001008  2A                 	db	42
   165  001009  31                 	db	49
   166  00100A  32                 	db	50
   167  00100B  33                 	db	51
   168  00100C  2D                 	db	45
   169  00100D  23                 	db	35
   170  00100E  30                 	db	48
   171  00100F  3D                 	db	61
   172  001010  2B                 	db	43
   173  001011                     __end_of_keypad_btns:
   174                           	callstack 0
   175  0000                     _TMR3	set	4018
   176  0000                     _TMR1	set	4046
   177  0000                     _T3CONbits	set	4017
   178  0000                     _TMR2	set	4044
   179  0000                     _T1CONbits	set	4045
   180  0000                     _TMR0L	set	4054
   181  0000                     _TMR0H	set	4055
   182  0000                     _T0CONbits	set	4053
   183  0000                     _INTCON2bits	set	4081
   184  0000                     _INTCON3bits	set	4080
   185  0000                     _SPBRGH	set	4016
   186  0000                     _SPBRG	set	4015
   187  0000                     _BAUDCONbits	set	4024
   188  0000                     _RCREG	set	4014
   189  0000                     _TXREG	set	4013
   190  0000                     _TXSTAbits	set	4012
   191  0000                     _RCSTAbits	set	4011
   192  0000                     _EECON2	set	4007
   193  0000                     _CCPR2H	set	4028
   194  0000                     _CCPR2L	set	4027
   195  0000                     _CCPR1H	set	4031
   196  0000                     _CCPR1L	set	4030
   197  0000                     _TRISB	set	3987
   198  0000                     _TRISAbits	set	3986
   199  0000                     _TMR3H	set	4019
   200  0000                     _TMR3L	set	4018
   201  0000                     _TMR1H	set	4047
   202  0000                     _TMR1L	set	4046
   203  0000                     _PORTBbits	set	3969
   204  0000                     _TRISC	set	3988
   205  0000                     _TRISCbits	set	3988
   206  0000                     _PIE1bits	set	3997
   207  0000                     _PORTE	set	3972
   208  0000                     _PORTD	set	3971
   209  0000                     _PORTC	set	3970
   210  0000                     _PORTB	set	3969
   211  0000                     _PORTA	set	3968
   212  0000                     _LATA	set	3977
   213  0000                     _TRISA	set	3986
   214  0000                     _PIE2bits	set	4000
   215  0000                     _CCP2CONbits	set	4026
   216  0000                     _CCP1CONbits	set	4029
   217  0000                     _PIR1bits	set	3998
   218  0000                     _ADCON2bits	set	4032
   219  0000                     _ADCON1bits	set	4033
   220  0000                     _ADCON0bits	set	4034
   221  0000                     _SSPCON1bits	set	4038
   222  0000                     _T2CONbits	set	4042
   223  0000                     _ADRESH	set	4036
   224  0000                     _ADRESL	set	4035
   225  0000                     _INTCONbits	set	4082
   226  0000                     _PR2	set	4043
   227  0000                     _EECON1bits	set	4006
   228  0000                     _EEDATA	set	4008
   229  0000                     _EEADR	set	4009
   230  0000                     _EEADRH	set	4010
   231  0000                     _PIR2bits	set	4001
   232  0000                     _TRISE	set	3990
   233  0000                     _TRISD	set	3989
   234  0000                     _LATE	set	3981
   235  0000                     _LATD	set	3980
   236  0000                     _LATC	set	3979
   237  0000                     _LATB	set	3978
   238  0000                     _SSPBUF	set	4041
   239  0000                     _SSPSTATbits	set	4039
   240  001011                     STR_1:
   241  001011  25                 	db	37
   242  001012  69                 	db	105	;'i'
   243  001013  00                 	db	0
   244  001014  00                 	db	0	; dummy byte at the end
   245  0000                     
   246                           ; #config settings
   247                           
   248                           	psect	cinit
   249  001608                     __pcinit:
   250                           	callstack 0
   251  001608                     start_initialization:
   252                           	callstack 0
   253  001608                     __initialization:
   254                           	callstack 0
   255                           
   256                           ; Initialize objects allocated to COMRAM (55 bytes)
   257                           ; load TBLPTR registers with __pidataCOMRAM
   258  001608  0ED0               	movlw	low __pidataCOMRAM
   259  00160A  6EF6               	movwf	tblptrl,c
   260  00160C  0E15               	movlw	high __pidataCOMRAM
   261  00160E  6EF7               	movwf	tblptrh,c
   262  001610  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   263  001612  6EF8               	movwf	tblptru,c
   264  001614  EE00  F001         	lfsr	0,__pdataCOMRAM
   265  001618  EE10 F037          	lfsr	1,55
   266  00161C                     copy_data0:
   267  00161C  0009               	tblrd		*+
   268  00161E  CFF5 FFEE          	movff	tablat,postinc0
   269  001622  50E5               	movf	postdec1,w,c
   270  001624  50E1               	movf	fsr1l,w,c
   271  001626  E1FA               	bnz	copy_data0
   272                           
   273                           ; Clear objects allocated to COMRAM (52 bytes)
   274  001628  EE00  F038         	lfsr	0,__pbssCOMRAM
   275  00162C  0E34               	movlw	52
   276  00162E                     clear_0:
   277  00162E  6AEE               	clrf	postinc0,c
   278  001630  06E8               	decf	wreg,f,c
   279  001632  E1FD               	bnz	clear_0
   280  001634                     end_of_initialization:
   281                           	callstack 0
   282  001634                     __end_of__initialization:
   283                           	callstack 0
   284  001634  9073               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   285  001636  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   286  001638  0100               	movlb	0
   287  00163A  EFBC  F00A         	goto	_main	;jump to C main() function
   288                           
   289                           	psect	bssCOMRAM
   290  000038                     __pbssCOMRAM:
   291                           	callstack 0
   292  000038                     _timer3_isr_preload_value:
   293                           	callstack 0
   294  000038                     	ds	2
   295  00003A                     _TMR3_InterruptHandler:
   296                           	callstack 0
   297  00003A                     	ds	2
   298  00003C                     _TMR2_InterruptHandler:
   299                           	callstack 0
   300  00003C                     	ds	2
   301  00003E                     _timer1_isr_preload_value:
   302                           	callstack 0
   303  00003E                     	ds	2
   304  000040                     _TMR1_InterruptHandler:
   305                           	callstack 0
   306  000040                     	ds	2
   307  000042                     _TMR0_InterruptHandler:
   308                           	callstack 0
   309  000042                     	ds	2
   310  000044                     _RB7_InterruptHandler_Low:
   311                           	callstack 0
   312  000044                     	ds	2
   313  000046                     _RB7_InterruptHandler_High:
   314                           	callstack 0
   315  000046                     	ds	2
   316  000048                     _RB6_InterruptHandler_Low:
   317                           	callstack 0
   318  000048                     	ds	2
   319  00004A                     _RB6_InterruptHandler_High:
   320                           	callstack 0
   321  00004A                     	ds	2
   322  00004C                     _RB5_InterruptHandler_Low:
   323                           	callstack 0
   324  00004C                     	ds	2
   325  00004E                     _RB5_InterruptHandler_High:
   326                           	callstack 0
   327  00004E                     	ds	2
   328  000050                     _RB4_InterruptHandler_Low:
   329                           	callstack 0
   330  000050                     	ds	2
   331  000052                     _RB4_InterruptHandler_High:
   332                           	callstack 0
   333  000052                     	ds	2
   334  000054                     _INT2_InterruptHandler:
   335                           	callstack 0
   336  000054                     	ds	2
   337  000056                     _INT1_InterruptHandler:
   338                           	callstack 0
   339  000056                     	ds	2
   340  000058                     _INT0_InterruptHandler:
   341                           	callstack 0
   342  000058                     	ds	2
   343  00005A                     _RX_Handler:
   344                           	callstack 0
   345  00005A                     	ds	2
   346  00005C                     _TX_Handler:
   347                           	callstack 0
   348  00005C                     	ds	2
   349  00005E                     _CCP2_InterruptHandler:
   350                           	callstack 0
   351  00005E                     	ds	2
   352  000060                     _CCP1_InterruptHandler:
   353                           	callstack 0
   354  000060                     	ds	2
   355  000062                     _ADC_InterruptHandler:
   356                           	callstack 0
   357  000062                     	ds	2
   358  000064                     _timer2_preload:
   359                           	callstack 0
   360  000064                     	ds	1
   361  000065                     relay_Off@F2889:
   362                           	callstack 0
   363  000065                     	ds	1
   364  000066                     relay_On@F2884:
   365                           	callstack 0
   366  000066                     	ds	1
   367  000067                     relay_initialize@F2879:
   368                           	callstack 0
   369  000067                     	ds	1
   370  000068                     led_toggle@F2896:
   371                           	callstack 0
   372  000068                     	ds	1
   373  000069                     led_turn_off@F2891:
   374                           	callstack 0
   375  000069                     	ds	1
   376  00006A                     led_turn_on@F2886:
   377                           	callstack 0
   378  00006A                     	ds	1
   379  00006B                     led_initialize@F2881:
   380                           	callstack 0
   381  00006B                     	ds	1
   382                           
   383                           	psect	dataCOMRAM
   384  000001                     __pdataCOMRAM:
   385                           	callstack 0
   386  000001                     _port_registers:
   387                           	callstack 0
   388  000001                     	ds	10
   389  00000B                     _lat_registers:
   390                           	callstack 0
   391  00000B                     	ds	10
   392  000015                     _tris_registers:
   393                           	callstack 0
   394  000015                     	ds	10
   395  00001F                     _RB7_Flag:
   396                           	callstack 0
   397  00001F                     	ds	1
   398  000020                     _RB6_Flag:
   399                           	callstack 0
   400  000020                     	ds	1
   401  000021                     _RB5_Flag:
   402                           	callstack 0
   403  000021                     	ds	1
   404  000022                     _RB4_Flag:
   405                           	callstack 0
   406  000022                     	ds	1
   407  000023                     _lcd_2:
   408                           	callstack 0
   409  000023                     	ds	10
   410  00002D                     _lcd_1:
   411                           	callstack 0
   412  00002D                     	ds	6
   413  000033                     __spi:
   414                           	callstack 0
   415  000033                     	ds	5
   416                           
   417                           	psect	cstackCOMRAM
   418  00006C                     __pcstackCOMRAM:
   419                           	callstack 0
   420  00006C                     RB4_ISR@source:
   421                           	callstack 0
   422  00006C                     RB5_ISR@source:
   423                           	callstack 0
   424  00006C                     RB6_ISR@source:
   425                           	callstack 0
   426  00006C                     RB7_ISR@source:
   427                           	callstack 0
   428                           
   429                           ; 1 bytes @ 0x0
   430  00006C                     	ds	1
   431  00006D                     ??_mcal_spi_select_slave:
   432  00006D                     mcal_spi_send_byte_blocking@data:
   433                           	callstack 0
   434  00006D                     mcal_spi_init@spi_obj:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x1
   438  00006D                     	ds	2
   439  00006F                     ??_mcal_spi_init:
   440  00006F                     mcal_spi_select_slave@slave_pin:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x3
   444  00006F                     	ds	2
   445  000071                     ??_main:
   446                           
   447                           ; 1 bytes @ 0x5
   448  000071                     	ds	2
   449                           
   450 ;;
   451 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   452 ;;
   453 ;; *************** function _main *****************
   454 ;; Defined at:
   455 ;;		line 32 in file "application.c"
   456 ;; Parameters:    Size  Location     Type
   457 ;;		None
   458 ;; Auto vars:     Size  Location     Type
   459 ;;		None
   460 ;; Return value:  Size  Location     Type
   461 ;;                  2  1683[None  ] int 
   462 ;; Registers used:
   463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   464 ;; Tracked objects:
   465 ;;		On entry : 0/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   471 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   472 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   473 ;;Total ram usage:        2 bytes
   474 ;; Hardware stack levels required when called: 3
   475 ;; This function calls:
   476 ;;		_mcal_spi_init
   477 ;;		_mcal_spi_select_slave
   478 ;;		_mcal_spi_send_byte_blocking
   479 ;; This function is called by:
   480 ;;		Startup code after reset
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484                           	psect	text0
   485  001578                     __ptext0:
   486                           	callstack 0
   487  001578                     _main:
   488                           	callstack 28
   489  001578                     
   490                           ;application.c: 62:     mcal_spi_init(&_spi);
   491  001578  0E33               	movlw	low __spi
   492  00157A  6E6D               	movwf	mcal_spi_init@spi_obj^0,c
   493  00157C  0E00               	movlw	high __spi
   494  00157E  6E6E               	movwf	(mcal_spi_init@spi_obj+1)^0,c
   495  001580  ECCE  F009         	call	_mcal_spi_init	;wreg free
   496  001584                     l5670:
   497                           
   498                           ;application.c: 71:         mcal_spi_select_slave(5);
   499  001584  0E05               	movlw	5
   500  001586  EC1F  F00B         	call	_mcal_spi_select_slave
   501  00158A                     
   502                           ;application.c: 72:         mcal_spi_send_byte_blocking('M');
   503  00158A  0E4D               	movlw	77
   504  00158C  EC6E  F00B         	call	_mcal_spi_send_byte_blocking
   505  001590                     
   506                           ;application.c: 73:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   507  001590  0E0B               	movlw	11
   508  001592  6E72               	movwf	(??_main+1)^0,c
   509  001594  0E26               	movlw	38
   510  001596  6E71               	movwf	??_main^0,c
   511  001598  0E5E               	movlw	94
   512  00159A                     u4027:
   513  00159A  2EE8               	decfsz	wreg,f,c
   514  00159C  D7FE               	bra	u4027
   515  00159E  2E71               	decfsz	??_main^0,f,c
   516  0015A0  D7FC               	bra	u4027
   517  0015A2  2E72               	decfsz	(??_main+1)^0,f,c
   518  0015A4  D7FA               	bra	u4027
   519  0015A6                     
   520                           ;application.c: 74:         mcal_spi_select_slave(5);
   521  0015A6  0E05               	movlw	5
   522  0015A8  EC1F  F00B         	call	_mcal_spi_select_slave
   523  0015AC                     
   524                           ;application.c: 75:         mcal_spi_send_byte_blocking('S');
   525  0015AC  0E53               	movlw	83
   526  0015AE  EC6E  F00B         	call	_mcal_spi_send_byte_blocking
   527  0015B2                     
   528                           ;application.c: 76:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   529  0015B2  0E0B               	movlw	11
   530  0015B4  6E72               	movwf	(??_main+1)^0,c
   531  0015B6  0E26               	movlw	38
   532  0015B8  6E71               	movwf	??_main^0,c
   533  0015BA  0E5E               	movlw	94
   534  0015BC                     u4037:
   535  0015BC  2EE8               	decfsz	wreg,f,c
   536  0015BE  D7FE               	bra	u4037
   537  0015C0  2E71               	decfsz	??_main^0,f,c
   538  0015C2  D7FC               	bra	u4037
   539  0015C4  2E72               	decfsz	(??_main+1)^0,f,c
   540  0015C6  D7FA               	bra	u4037
   541  0015C8  EFC2  F00A         	goto	l5670
   542  0015CC  EF07  F000         	goto	start
   543  0015D0                     __end_of_main:
   544                           	callstack 0
   545                           
   546 ;; *************** function _mcal_spi_send_byte_blocking *****************
   547 ;; Defined at:
   548 ;;		line 123 in file "MCAL_Layer/SPI/hal_spi.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;  data            1    wreg     unsigned char 
   551 ;; Auto vars:     Size  Location     Type
   552 ;;  data            1    1[COMRAM] unsigned char 
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      unsigned char 
   555 ;; Registers used:
   556 ;;		wreg
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   563 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;Total ram usage:        1 bytes
   567 ;; Hardware stack levels used: 1
   568 ;; Hardware stack levels required when called: 2
   569 ;; This function calls:
   570 ;;		Nothing
   571 ;; This function is called by:
   572 ;;		_main
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           	psect	text1
   577  0016DC                     __ptext1:
   578                           	callstack 0
   579  0016DC                     _mcal_spi_send_byte_blocking:
   580                           	callstack 28
   581                           
   582                           ;incstack = 0
   583                           ;mcal_spi_send_byte_blocking@data stored from wreg
   584  0016DC  6E6D               	movwf	mcal_spi_send_byte_blocking@data^0,c
   585  0016DE                     
   586                           ;MCAL_Layer/SPI/hal_spi.c: 124:     SSPBUF = data;
   587  0016DE  C06D  FFC9         	movff	mcal_spi_send_byte_blocking@data,4041	;volatile
   588  0016E2                     l1742:
   589  0016E2  A69E               	btfss	158,3,c	;volatile
   590  0016E4  EF76  F00B         	goto	u561
   591  0016E8  EF78  F00B         	goto	u560
   592  0016EC                     u561:
   593  0016EC  EF71  F00B         	goto	l1742
   594  0016F0                     u560:
   595  0016F0  0012               	return		;funcret
   596  0016F2                     __end_of_mcal_spi_send_byte_blocking:
   597                           	callstack 0
   598                           
   599 ;; *************** function _mcal_spi_select_slave *****************
   600 ;; Defined at:
   601 ;;		line 113 in file "MCAL_Layer/SPI/hal_spi.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;  slave_pin       1    wreg     unsigned char 
   604 ;; Auto vars:     Size  Location     Type
   605 ;;  slave_pin       1    3[COMRAM] unsigned char 
   606 ;;  status          1    0        unsigned char 
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      unsigned char 
   609 ;; Registers used:
   610 ;;		wreg, status,2, status,0
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   620 ;;Total ram usage:        3 bytes
   621 ;; Hardware stack levels used: 1
   622 ;; Hardware stack levels required when called: 2
   623 ;; This function calls:
   624 ;;		Nothing
   625 ;; This function is called by:
   626 ;;		_main
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           	psect	text2
   631  00163E                     __ptext2:
   632                           	callstack 0
   633  00163E                     _mcal_spi_select_slave:
   634                           	callstack 28
   635                           
   636                           ;incstack = 0
   637                           ;mcal_spi_select_slave@slave_pin stored from wreg
   638  00163E  6E6F               	movwf	mcal_spi_select_slave@slave_pin^0,c
   639  001640                     
   640                           ;MCAL_Layer/SPI/hal_spi.c: 115:     if(slave_pin < 8 && slave_pin >= 0){
   641  001640  0E08               	movlw	8
   642  001642  606F               	cpfslt	mcal_spi_select_slave@slave_pin^0,c
   643  001644  EF26  F00B         	goto	u541
   644  001648  EF28  F00B         	goto	u540
   645  00164C                     u541:
   646  00164C  EF39  F00B         	goto	l2990
   647  001650                     u540:
   648  001650                     
   649                           ;MCAL_Layer/SPI/hal_spi.c: 116:         LATA &= ~(1 << slave_pin);
   650  001650  C06F  F06D         	movff	mcal_spi_select_slave@slave_pin,??_mcal_spi_select_slave
   651  001654  0E01               	movlw	1
   652  001656  6E6E               	movwf	(??_mcal_spi_select_slave+1)^0,c
   653  001658  2A6D               	incf	??_mcal_spi_select_slave^0,f,c
   654  00165A  EF31  F00B         	goto	u554
   655  00165E                     u555:
   656  00165E  90D8               	bcf	status,0,c
   657  001660  366E               	rlcf	(??_mcal_spi_select_slave+1)^0,f,c
   658  001662                     u554:
   659  001662  2E6D               	decfsz	??_mcal_spi_select_slave^0,f,c
   660  001664  EF2F  F00B         	goto	u555
   661  001668  506E               	movf	(??_mcal_spi_select_slave+1)^0,w,c
   662  00166A  0AFF               	xorlw	255
   663  00166C  1689               	andwf	137,f,c	;volatile
   664                           
   665                           ;MCAL_Layer/SPI/hal_spi.c: 117:     }
   666  00166E  EF39  F00B         	goto	l1739
   667  001672                     l2990:
   668  001672                     l1739:
   669  001672  0012               	return		;funcret
   670  001674                     __end_of_mcal_spi_select_slave:
   671                           	callstack 0
   672                           
   673 ;; *************** function _mcal_spi_init *****************
   674 ;; Defined at:
   675 ;;		line 12 in file "MCAL_Layer/SPI/hal_spi.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;  spi_obj         2    1[COMRAM] PTR const struct .
   678 ;;		 -> _spi(5), 
   679 ;; Auto vars:     Size  Location     Type
   680 ;;  status          1    0        unsigned char 
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      unsigned char 
   683 ;; Registers used:
   684 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   690 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   692 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   693 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;Total ram usage:        4 bytes
   695 ;; Hardware stack levels used: 1
   696 ;; Hardware stack levels required when called: 2
   697 ;; This function calls:
   698 ;;		Nothing
   699 ;; This function is called by:
   700 ;;		_main
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           	psect	text3
   705  00139C                     __ptext3:
   706                           	callstack 0
   707  00139C                     _mcal_spi_init:
   708                           	callstack 28
   709  00139C                     
   710                           ;MCAL_Layer/SPI/hal_spi.c: 15:     if(spi_obj != ((void*)0)){
   711  00139C  506D               	movf	mcal_spi_init@spi_obj^0,w,c
   712  00139E  106E               	iorwf	(mcal_spi_init@spi_obj+1)^0,w,c
   713  0013A0  B4D8               	btfsc	status,2,c
   714  0013A2  EFD5  F009         	goto	u3931
   715  0013A6  EFD7  F009         	goto	u3930
   716  0013AA                     u3931:
   717  0013AA  EFBB  F00A         	goto	l5658
   718  0013AE                     u3930:
   719  0013AE                     
   720                           ;MCAL_Layer/SPI/hal_spi.c: 17:         if(spi_obj->serial_port_enable == 1){
   721  0013AE  EE20 F004          	lfsr	2,4
   722  0013B2  506D               	movf	mcal_spi_init@spi_obj^0,w,c
   723  0013B4  26D9               	addwf	fsr2l,f,c
   724  0013B6  506E               	movf	(mcal_spi_init@spi_obj+1)^0,w,c
   725  0013B8  22DA               	addwfc	fsr2h,f,c
   726  0013BA  04DE               	decf	postinc2,w,c
   727  0013BC  A4D8               	btfss	status,2,c
   728  0013BE  EFE3  F009         	goto	u3941
   729  0013C2  EFE5  F009         	goto	u3940
   730  0013C6                     u3941:
   731  0013C6  EFE8  F009         	goto	l5580
   732  0013CA                     u3940:
   733  0013CA                     
   734                           ;MCAL_Layer/SPI/hal_spi.c: 18:             (SSPCON1bits.SSPEN = 1);
   735  0013CA  8AC6               	bsf	198,5,c	;volatile
   736                           
   737                           ;MCAL_Layer/SPI/hal_spi.c: 19:         }
   738  0013CC  EFF9  F009         	goto	l5586
   739  0013D0                     l5580:
   740  0013D0  EE20 F004          	lfsr	2,4
   741  0013D4  506D               	movf	mcal_spi_init@spi_obj^0,w,c
   742  0013D6  26D9               	addwf	fsr2l,f,c
   743  0013D8  506E               	movf	(mcal_spi_init@spi_obj+1)^0,w,c
   744  0013DA  22DA               	addwfc	fsr2h,f,c
   745  0013DC  50DF               	movf	indf2,w,c
   746  0013DE  A4D8               	btfss	status,2,c
   747  0013E0  EFF4  F009         	goto	u3951
   748  0013E4  EFF6  F009         	goto	u3950
   749  0013E8                     u3951:
   750  0013E8  EFF9  F009         	goto	l5584
   751  0013EC                     u3950:
   752  0013EC                     
   753                           ;MCAL_Layer/SPI/hal_spi.c: 21:             (SSPCON1bits.SSPEN = 0);
   754  0013EC  9AC6               	bcf	198,5,c	;volatile
   755                           
   756                           ;MCAL_Layer/SPI/hal_spi.c: 22:         }
   757  0013EE  EFF9  F009         	goto	l5586
   758  0013F2                     l5584:
   759  0013F2                     l5586:
   760                           
   761                           ;MCAL_Layer/SPI/hal_spi.c: 26:         TRISCbits.RC5 = 0;
   762  0013F2  9A94               	bcf	148,5,c	;volatile
   763                           
   764                           ;MCAL_Layer/SPI/hal_spi.c: 27:         switch(spi_obj->spi_mode){
   765  0013F4  EF2C  F00A         	goto	l5628
   766  0013F8                     l5588:
   767                           
   768                           ;MCAL_Layer/SPI/hal_spi.c: 29:                 (SSPCON1bits.SSPM = SPI_Master_Clock_Fosc
      +                          _Div_By_4);
   769  0013F8  0EF0               	movlw	-16
   770  0013FA  16C6               	andwf	198,f,c	;volatile
   771  0013FC                     
   772                           ;MCAL_Layer/SPI/hal_spi.c: 30:                 TRISCbits.RC3 = 0;
   773  0013FC  9694               	bcf	148,3,c	;volatile
   774  0013FE                     
   775                           ;MCAL_Layer/SPI/hal_spi.c: 31:                 TRISAbits.RA5 = 0;
   776  0013FE  9A92               	bcf	146,5,c	;volatile
   777                           
   778                           ;MCAL_Layer/SPI/hal_spi.c: 32:                 break;
   779  001400  EF55  F00A         	goto	l5630
   780  001404                     l5594:
   781                           
   782                           ;MCAL_Layer/SPI/hal_spi.c: 35:                 (SSPCON1bits.SSPM = SPI_Master_Clock_Fosc
      +                          _Div_By_16);
   783  001404  50C6               	movf	198,w,c	;volatile
   784  001406  0BF0               	andlw	-16
   785  001408  0901               	iorlw	1
   786  00140A  6EC6               	movwf	198,c	;volatile
   787  00140C                     
   788                           ;MCAL_Layer/SPI/hal_spi.c: 36:                 TRISCbits.RC3 = 0;
   789  00140C  9694               	bcf	148,3,c	;volatile
   790  00140E                     
   791                           ;MCAL_Layer/SPI/hal_spi.c: 37:                 TRISAbits.RA5 = 0;
   792  00140E  9A92               	bcf	146,5,c	;volatile
   793                           
   794                           ;MCAL_Layer/SPI/hal_spi.c: 38:                 break;
   795  001410  EF55  F00A         	goto	l5630
   796  001414                     l5600:
   797                           
   798                           ;MCAL_Layer/SPI/hal_spi.c: 41:                 (SSPCON1bits.SSPM = SPI_Master_Clock_Fosc
      +                          _Div_By_64);
   799  001414  50C6               	movf	198,w,c	;volatile
   800  001416  0BF0               	andlw	-16
   801  001418  0902               	iorlw	2
   802  00141A  6EC6               	movwf	198,c	;volatile
   803  00141C                     
   804                           ;MCAL_Layer/SPI/hal_spi.c: 42:                 TRISCbits.RC3 = 0;
   805  00141C  9694               	bcf	148,3,c	;volatile
   806  00141E                     
   807                           ;MCAL_Layer/SPI/hal_spi.c: 43:                 TRISAbits.RA5 = 0;
   808  00141E  9A92               	bcf	146,5,c	;volatile
   809                           
   810                           ;MCAL_Layer/SPI/hal_spi.c: 44:                 break;
   811  001420  EF55  F00A         	goto	l5630
   812  001424                     l5606:
   813                           
   814                           ;MCAL_Layer/SPI/hal_spi.c: 47:                 (SSPCON1bits.SSPM = SPI_Master_Clock_TMR2
      +                          _Div_By_2);
   815  001424  50C6               	movf	198,w,c	;volatile
   816  001426  0BF0               	andlw	-16
   817  001428  0903               	iorlw	3
   818  00142A  6EC6               	movwf	198,c	;volatile
   819  00142C                     
   820                           ;MCAL_Layer/SPI/hal_spi.c: 48:                 TRISCbits.RC3 = 0;
   821  00142C  9694               	bcf	148,3,c	;volatile
   822  00142E                     
   823                           ;MCAL_Layer/SPI/hal_spi.c: 49:                 TRISAbits.RA5 = 0;
   824  00142E  9A92               	bcf	146,5,c	;volatile
   825                           
   826                           ;MCAL_Layer/SPI/hal_spi.c: 50:                 break;
   827  001430  EF55  F00A         	goto	l5630
   828  001434                     l5612:
   829                           
   830                           ;MCAL_Layer/SPI/hal_spi.c: 53:                 (SSPCON1bits.SSPM = SPI_Slave_SS_Pin_Enab
      +                          led);
   831  001434  50C6               	movf	198,w,c	;volatile
   832  001436  0BF0               	andlw	-16
   833  001438  0904               	iorlw	4
   834  00143A  6EC6               	movwf	198,c	;volatile
   835  00143C                     
   836                           ;MCAL_Layer/SPI/hal_spi.c: 54:                 TRISCbits.RC3 = 1;
   837  00143C  8694               	bsf	148,3,c	;volatile
   838  00143E                     
   839                           ;MCAL_Layer/SPI/hal_spi.c: 55:                 TRISAbits.RA5 = 1;
   840  00143E  8A92               	bsf	146,5,c	;volatile
   841                           
   842                           ;MCAL_Layer/SPI/hal_spi.c: 56:                 break;
   843  001440  EF55  F00A         	goto	l5630
   844  001444                     l5618:
   845                           
   846                           ;MCAL_Layer/SPI/hal_spi.c: 59:                 (SSPCON1bits.SSPM = SPI_Slave_SS_Pin_Disa
      +                          bled);
   847  001444  50C6               	movf	198,w,c	;volatile
   848  001446  0BF0               	andlw	-16
   849  001448  0905               	iorlw	5
   850  00144A  6EC6               	movwf	198,c	;volatile
   851  00144C                     
   852                           ;MCAL_Layer/SPI/hal_spi.c: 60:                 TRISCbits.RC3 = 1;
   853  00144C  8694               	bsf	148,3,c	;volatile
   854  00144E                     
   855                           ;MCAL_Layer/SPI/hal_spi.c: 61:                 TRISAbits.RA5 = 1;
   856  00144E  8A92               	bsf	146,5,c	;volatile
   857                           
   858                           ;MCAL_Layer/SPI/hal_spi.c: 62:                 break;
   859  001450  EF55  F00A         	goto	l5630
   860  001454                     l5624:
   861                           
   862                           ;MCAL_Layer/SPI/hal_spi.c: 66:                 break;
   863  001454  EF55  F00A         	goto	l5630
   864  001458                     l5628:
   865  001458  C06D  FFD9         	movff	mcal_spi_init@spi_obj,fsr2l
   866  00145C  C06E  FFDA         	movff	mcal_spi_init@spi_obj+1,fsr2h
   867  001460  50DF               	movf	indf2,w,c
   868  001462  6E6F               	movwf	??_mcal_spi_init^0,c
   869  001464  6A70               	clrf	(??_mcal_spi_init+1)^0,c
   870                           
   871                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   872                           ; Switch size 1, requested type "simple"
   873                           ; Number of cases is 1, Range of values is 0 to 0
   874                           ; switch strategies available:
   875                           ; Name         Instructions Cycles
   876                           ; simple_byte            4     3 (average)
   877                           ;	Chosen strategy is simple_byte
   878  001466  5070               	movf	(??_mcal_spi_init+1)^0,w,c
   879  001468  0A00               	xorlw	0	; case 0
   880  00146A  B4D8               	btfsc	status,2,c
   881  00146C  EF3A  F00A         	goto	l5686
   882  001470  EF2A  F00A         	goto	l5624
   883  001474                     l5686:
   884                           
   885                           ; Switch size 1, requested type "simple"
   886                           ; Number of cases is 6, Range of values is 0 to 5
   887                           ; switch strategies available:
   888                           ; Name         Instructions Cycles
   889                           ; simple_byte           19    10 (average)
   890                           ;	Chosen strategy is simple_byte
   891  001474  506F               	movf	??_mcal_spi_init^0,w,c
   892  001476  0A00               	xorlw	0	; case 0
   893  001478  B4D8               	btfsc	status,2,c
   894  00147A  EFFC  F009         	goto	l5588
   895  00147E  0A01               	xorlw	1	; case 1
   896  001480  B4D8               	btfsc	status,2,c
   897  001482  EF02  F00A         	goto	l5594
   898  001486  0A03               	xorlw	3	; case 2
   899  001488  B4D8               	btfsc	status,2,c
   900  00148A  EF0A  F00A         	goto	l5600
   901  00148E  0A01               	xorlw	1	; case 3
   902  001490  B4D8               	btfsc	status,2,c
   903  001492  EF12  F00A         	goto	l5606
   904  001496  0A07               	xorlw	7	; case 4
   905  001498  B4D8               	btfsc	status,2,c
   906  00149A  EF1A  F00A         	goto	l5612
   907  00149E  0A01               	xorlw	1	; case 5
   908  0014A0  B4D8               	btfsc	status,2,c
   909  0014A2  EF22  F00A         	goto	l5618
   910  0014A6  EF2A  F00A         	goto	l5624
   911  0014AA                     l5630:
   912                           
   913                           ;MCAL_Layer/SPI/hal_spi.c: 70:         if(spi_obj->spi_clock_phase == SPI_Transmit_On_Tr
      +                          ans_From_Idle_To_Active){
   914  0014AA  EE20 F001          	lfsr	2,1
   915  0014AE  506D               	movf	mcal_spi_init@spi_obj^0,w,c
   916  0014B0  26D9               	addwf	fsr2l,f,c
   917  0014B2  506E               	movf	(mcal_spi_init@spi_obj+1)^0,w,c
   918  0014B4  22DA               	addwfc	fsr2h,f,c
   919  0014B6  50DF               	movf	indf2,w,c
   920  0014B8  A4D8               	btfss	status,2,c
   921  0014BA  EF61  F00A         	goto	u3961
   922  0014BE  EF63  F00A         	goto	u3960
   923  0014C2                     u3961:
   924  0014C2  EF66  F00A         	goto	l5634
   925  0014C6                     u3960:
   926  0014C6                     
   927                           ;MCAL_Layer/SPI/hal_spi.c: 71:             (SSPSTATbits.CKE = SPI_Transmit_On_Trans_From
      +                          _Idle_To_Active);
   928  0014C6  9CC7               	bcf	199,6,c	;volatile
   929                           
   930                           ;MCAL_Layer/SPI/hal_spi.c: 72:         }
   931  0014C8  EF77  F00A         	goto	l5640
   932  0014CC                     l5634:
   933  0014CC  EE20 F001          	lfsr	2,1
   934  0014D0  506D               	movf	mcal_spi_init@spi_obj^0,w,c
   935  0014D2  26D9               	addwf	fsr2l,f,c
   936  0014D4  506E               	movf	(mcal_spi_init@spi_obj+1)^0,w,c
   937  0014D6  22DA               	addwfc	fsr2h,f,c
   938  0014D8  04DE               	decf	postinc2,w,c
   939  0014DA  A4D8               	btfss	status,2,c
   940  0014DC  EF72  F00A         	goto	u3971
   941  0014E0  EF74  F00A         	goto	u3970
   942  0014E4                     u3971:
   943  0014E4  EF77  F00A         	goto	l5638
   944  0014E8                     u3970:
   945  0014E8                     
   946                           ;MCAL_Layer/SPI/hal_spi.c: 74:             (SSPSTATbits.CKE = SPI_Transmit_On_Trans_From
      +                          _Active_To_Idle);
   947  0014E8  8CC7               	bsf	199,6,c	;volatile
   948                           
   949                           ;MCAL_Layer/SPI/hal_spi.c: 75:         }
   950  0014EA  EF77  F00A         	goto	l5640
   951  0014EE                     l5638:
   952  0014EE                     l5640:
   953                           
   954                           ;MCAL_Layer/SPI/hal_spi.c: 81:         if(spi_obj->spi_clock_Polarity == Idle_State_Low)
      +                          {
   955  0014EE  EE20 F002          	lfsr	2,2
   956  0014F2  506D               	movf	mcal_spi_init@spi_obj^0,w,c
   957  0014F4  26D9               	addwf	fsr2l,f,c
   958  0014F6  506E               	movf	(mcal_spi_init@spi_obj+1)^0,w,c
   959  0014F8  22DA               	addwfc	fsr2h,f,c
   960  0014FA  50DF               	movf	indf2,w,c
   961  0014FC  A4D8               	btfss	status,2,c
   962  0014FE  EF83  F00A         	goto	u3981
   963  001502  EF85  F00A         	goto	u3980
   964  001506                     u3981:
   965  001506  EF88  F00A         	goto	l5644
   966  00150A                     u3980:
   967  00150A                     
   968                           ;MCAL_Layer/SPI/hal_spi.c: 82:             (SSPCON1bits.CKP = Idle_State_Low);
   969  00150A  98C6               	bcf	198,4,c	;volatile
   970                           
   971                           ;MCAL_Layer/SPI/hal_spi.c: 83:         }
   972  00150C  EF99  F00A         	goto	l5650
   973  001510                     l5644:
   974  001510  EE20 F002          	lfsr	2,2
   975  001514  506D               	movf	mcal_spi_init@spi_obj^0,w,c
   976  001516  26D9               	addwf	fsr2l,f,c
   977  001518  506E               	movf	(mcal_spi_init@spi_obj+1)^0,w,c
   978  00151A  22DA               	addwfc	fsr2h,f,c
   979  00151C  04DE               	decf	postinc2,w,c
   980  00151E  A4D8               	btfss	status,2,c
   981  001520  EF94  F00A         	goto	u3991
   982  001524  EF96  F00A         	goto	u3990
   983  001528                     u3991:
   984  001528  EF99  F00A         	goto	l5648
   985  00152C                     u3990:
   986  00152C                     
   987                           ;MCAL_Layer/SPI/hal_spi.c: 85:             (SSPCON1bits.CKP = Idle_State_High);
   988  00152C  88C6               	bsf	198,4,c	;volatile
   989                           
   990                           ;MCAL_Layer/SPI/hal_spi.c: 86:         }
   991  00152E  EF99  F00A         	goto	l5650
   992  001532                     l5648:
   993  001532                     l5650:
   994                           
   995                           ;MCAL_Layer/SPI/hal_spi.c: 92:         if(spi_obj->spi_sample_data == SPI_Data_Sampled_A
      +                          t_Middle_Of_Output){
   996  001532  EE20 F003          	lfsr	2,3
   997  001536  506D               	movf	mcal_spi_init@spi_obj^0,w,c
   998  001538  26D9               	addwf	fsr2l,f,c
   999  00153A  506E               	movf	(mcal_spi_init@spi_obj+1)^0,w,c
  1000  00153C  22DA               	addwfc	fsr2h,f,c
  1001  00153E  50DF               	movf	indf2,w,c
  1002  001540  A4D8               	btfss	status,2,c
  1003  001542  EFA5  F00A         	goto	u4001
  1004  001546  EFA7  F00A         	goto	u4000
  1005  00154A                     u4001:
  1006  00154A  EFAA  F00A         	goto	l5654
  1007  00154E                     u4000:
  1008  00154E                     
  1009                           ;MCAL_Layer/SPI/hal_spi.c: 93:             (SSPSTATbits.SMP = SPI_Data_Sampled_At_Middle
      +                          _Of_Output);
  1010  00154E  9EC7               	bcf	199,7,c	;volatile
  1011                           
  1012                           ;MCAL_Layer/SPI/hal_spi.c: 94:         }
  1013  001550  EFBB  F00A         	goto	l1731
  1014  001554                     l5654:
  1015  001554  EE20 F003          	lfsr	2,3
  1016  001558  506D               	movf	mcal_spi_init@spi_obj^0,w,c
  1017  00155A  26D9               	addwf	fsr2l,f,c
  1018  00155C  506E               	movf	(mcal_spi_init@spi_obj+1)^0,w,c
  1019  00155E  22DA               	addwfc	fsr2h,f,c
  1020  001560  04DE               	decf	postinc2,w,c
  1021  001562  A4D8               	btfss	status,2,c
  1022  001564  EFB6  F00A         	goto	u4011
  1023  001568  EFB8  F00A         	goto	u4010
  1024  00156C                     u4011:
  1025  00156C  EFBB  F00A         	goto	l5658
  1026  001570                     u4010:
  1027  001570                     
  1028                           ;MCAL_Layer/SPI/hal_spi.c: 96:             (SSPSTATbits.SMP = SPI_Data_Sampled_At_End_Of
      +                          _Output);
  1029  001570  8EC7               	bsf	199,7,c	;volatile
  1030                           
  1031                           ;MCAL_Layer/SPI/hal_spi.c: 97:         }
  1032  001572  EFBB  F00A         	goto	l1731
  1033  001576                     l5658:
  1034  001576                     l1731:
  1035  001576  0012               	return		;funcret
  1036  001578                     __end_of_mcal_spi_init:
  1037                           	callstack 0
  1038                           
  1039 ;; *************** function _InterruptManager *****************
  1040 ;; Defined at:
  1041 ;;		line 42 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;		None
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;		None
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      void 
  1048 ;; Registers used:
  1049 ;;		wreg, status,2, status,0, cstack
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1059 ;;Total ram usage:        0 bytes
  1060 ;; Hardware stack levels used: 1
  1061 ;; Hardware stack levels required when called: 1
  1062 ;; This function calls:
  1063 ;;		_ADC_ISR
  1064 ;;		_CCP1_ISR
  1065 ;;		_CCP2_ISR
  1066 ;;		_EUSART_TX_Isr
  1067 ;;		_INT0_ISR
  1068 ;;		_INT1_ISR
  1069 ;;		_INT2_ISR
  1070 ;;		_RB4_ISR
  1071 ;;		_RB5_ISR
  1072 ;;		_RB6_ISR
  1073 ;;		_RB7_ISR
  1074 ;;		_Timer0_ISR
  1075 ;;		_Timer1_ISR
  1076 ;;		_Timer2_ISR
  1077 ;;		_Timer3_ISR
  1078 ;; This function is called by:
  1079 ;;		Interrupt level 2
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           	psect	intcode
  1084  000008                     __pintcode:
  1085                           	callstack 0
  1086  000008                     _InterruptManager:
  1087                           	callstack 28
  1088                           
  1089                           ;incstack = 0
  1090  000008  8273               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1091  00000A  ED0B  F008         	call	int_func,f	;refresh shadow registers
  1092                           
  1093                           	psect	intcode_body
  1094  001016                     __pintcode_body:
  1095                           	callstack 28
  1096  001016                     int_func:
  1097                           	callstack 28
  1098  001016  0006               	pop		; remove dummy address from shadow register refresh
  1099  001018                     
  1100                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 44:     if((INTCONbits.INT0IE == 1)&&(IN
      +                          TCONbits.INT0IF == 1)){
  1101  001018  A8F2               	btfss	242,4,c	;volatile
  1102  00101A  EF11  F008         	goto	i2u244_41
  1103  00101E  EF13  F008         	goto	i2u244_40
  1104  001022                     i2u244_41:
  1105  001022  EF1C  F008         	goto	i2l4648
  1106  001026                     i2u244_40:
  1107  001026  A2F2               	btfss	242,1,c	;volatile
  1108  001028  EF18  F008         	goto	i2u245_41
  1109  00102C  EF1A  F008         	goto	i2u245_40
  1110  001030                     i2u245_41:
  1111  001030  EF1C  F008         	goto	i2l4648
  1112  001034                     i2u245_40:
  1113  001034                     
  1114                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 45:         INT0_ISR();
  1115  001034  EC8F  F00B         	call	_INT0_ISR	;wreg free
  1116  001038                     i2l4648:
  1117                           
  1118                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 47:     if((INTCON3bits.INT1IE == 1)&&(I
      +                          NTCON3bits.INT1IF == 1)){
  1119  001038  A6F0               	btfss	240,3,c	;volatile
  1120  00103A  EF21  F008         	goto	i2u246_41
  1121  00103E  EF23  F008         	goto	i2u246_40
  1122  001042                     i2u246_41:
  1123  001042  EF2C  F008         	goto	i2l4654
  1124  001046                     i2u246_40:
  1125  001046  A0F0               	btfss	240,0,c	;volatile
  1126  001048  EF28  F008         	goto	i2u247_41
  1127  00104C  EF2A  F008         	goto	i2u247_40
  1128  001050                     i2u247_41:
  1129  001050  EF2C  F008         	goto	i2l4654
  1130  001054                     i2u247_40:
  1131  001054                     
  1132                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 48:         INT1_ISR();
  1133  001054  EC8D  F00B         	call	_INT1_ISR	;wreg free
  1134  001058                     i2l4654:
  1135                           
  1136                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 50:     if((INTCON3bits.INT2IE == 1)&&(I
      +                          NTCON3bits.INT2IF == 1)){
  1137  001058  A8F0               	btfss	240,4,c	;volatile
  1138  00105A  EF31  F008         	goto	i2u248_41
  1139  00105E  EF33  F008         	goto	i2u248_40
  1140  001062                     i2u248_41:
  1141  001062  EF3C  F008         	goto	i2l4660
  1142  001066                     i2u248_40:
  1143  001066  A2F0               	btfss	240,1,c	;volatile
  1144  001068  EF38  F008         	goto	i2u249_41
  1145  00106C  EF3A  F008         	goto	i2u249_40
  1146  001070                     i2u249_41:
  1147  001070  EF3C  F008         	goto	i2l4660
  1148  001074                     i2u249_40:
  1149  001074                     
  1150                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 51:         INT2_ISR();
  1151  001074  EC8B  F00B         	call	_INT2_ISR	;wreg free
  1152  001078                     i2l4660:
  1153                           
  1154                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 53:     if((INTCONbits.RBIE == 1) && (IN
      +                          TCONbits.RBIF == 1)&&(PORTBbits.RB4 == HIGH) && (RB4_Flag == 1)){
  1155  001078  A6F2               	btfss	242,3,c	;volatile
  1156  00107A  EF41  F008         	goto	i2u250_41
  1157  00107E  EF43  F008         	goto	i2u250_40
  1158  001082                     i2u250_41:
  1159  001082  EF5E  F008         	goto	i2l4672
  1160  001086                     i2u250_40:
  1161  001086  A0F2               	btfss	242,0,c	;volatile
  1162  001088  EF48  F008         	goto	i2u251_41
  1163  00108C  EF4A  F008         	goto	i2u251_40
  1164  001090                     i2u251_41:
  1165  001090  EF5E  F008         	goto	i2l4672
  1166  001094                     i2u251_40:
  1167  001094  A881               	btfss	129,4,c	;volatile
  1168  001096  EF4F  F008         	goto	i2u252_41
  1169  00109A  EF51  F008         	goto	i2u252_40
  1170  00109E                     i2u252_41:
  1171  00109E  EF5E  F008         	goto	i2l4672
  1172  0010A2                     i2u252_40:
  1173  0010A2  0422               	decf	_RB4_Flag^0,w,c
  1174  0010A4  A4D8               	btfss	status,2,c
  1175  0010A6  EF57  F008         	goto	i2u253_41
  1176  0010AA  EF59  F008         	goto	i2u253_40
  1177  0010AE                     i2u253_41:
  1178  0010AE  EF5E  F008         	goto	i2l4672
  1179  0010B2                     i2u253_40:
  1180  0010B2                     
  1181                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 54:         RB4_Flag = 0;
  1182  0010B2  0E00               	movlw	0
  1183  0010B4  6E22               	movwf	_RB4_Flag^0,c
  1184  0010B6                     
  1185                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 55:         RB4_ISR(0);
  1186  0010B6  0E00               	movlw	0
  1187  0010B8  EC61  F00B         	call	_RB4_ISR
  1188  0010BC                     i2l4672:
  1189                           
  1190                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 57:     if((INTCONbits.RBIE == 1) && (IN
      +                          TCONbits.RBIF == 1)&& (PORTBbits.RB4 == LOW) && (RB4_Flag == 0)){
  1191  0010BC  A6F2               	btfss	242,3,c	;volatile
  1192  0010BE  EF63  F008         	goto	i2u254_41
  1193  0010C2  EF65  F008         	goto	i2u254_40
  1194  0010C6                     i2u254_41:
  1195  0010C6  EF80  F008         	goto	i2l4684
  1196  0010CA                     i2u254_40:
  1197  0010CA  A0F2               	btfss	242,0,c	;volatile
  1198  0010CC  EF6A  F008         	goto	i2u255_41
  1199  0010D0  EF6C  F008         	goto	i2u255_40
  1200  0010D4                     i2u255_41:
  1201  0010D4  EF80  F008         	goto	i2l4684
  1202  0010D8                     i2u255_40:
  1203  0010D8  B881               	btfsc	129,4,c	;volatile
  1204  0010DA  EF71  F008         	goto	i2u256_41
  1205  0010DE  EF73  F008         	goto	i2u256_40
  1206  0010E2                     i2u256_41:
  1207  0010E2  EF80  F008         	goto	i2l4684
  1208  0010E6                     i2u256_40:
  1209  0010E6  5022               	movf	_RB4_Flag^0,w,c
  1210  0010E8  A4D8               	btfss	status,2,c
  1211  0010EA  EF79  F008         	goto	i2u257_41
  1212  0010EE  EF7B  F008         	goto	i2u257_40
  1213  0010F2                     i2u257_41:
  1214  0010F2  EF80  F008         	goto	i2l4684
  1215  0010F6                     i2u257_40:
  1216  0010F6                     
  1217                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 58:         RB4_Flag = 1;
  1218  0010F6  0E01               	movlw	1
  1219  0010F8  6E22               	movwf	_RB4_Flag^0,c
  1220  0010FA                     
  1221                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 59:         RB4_ISR(1);
  1222  0010FA  0E01               	movlw	1
  1223  0010FC  EC61  F00B         	call	_RB4_ISR
  1224  001100                     i2l4684:
  1225                           
  1226                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 61:     if((INTCONbits.RBIE == 1) && (IN
      +                          TCONbits.RBIF == 1)&&(PORTBbits.RB5 == HIGH) && (RB5_Flag == 1)){
  1227  001100  A6F2               	btfss	242,3,c	;volatile
  1228  001102  EF85  F008         	goto	i2u258_41
  1229  001106  EF87  F008         	goto	i2u258_40
  1230  00110A                     i2u258_41:
  1231  00110A  EFA2  F008         	goto	i2l4696
  1232  00110E                     i2u258_40:
  1233  00110E  A0F2               	btfss	242,0,c	;volatile
  1234  001110  EF8C  F008         	goto	i2u259_41
  1235  001114  EF8E  F008         	goto	i2u259_40
  1236  001118                     i2u259_41:
  1237  001118  EFA2  F008         	goto	i2l4696
  1238  00111C                     i2u259_40:
  1239  00111C  AA81               	btfss	129,5,c	;volatile
  1240  00111E  EF93  F008         	goto	i2u260_41
  1241  001122  EF95  F008         	goto	i2u260_40
  1242  001126                     i2u260_41:
  1243  001126  EFA2  F008         	goto	i2l4696
  1244  00112A                     i2u260_40:
  1245  00112A  0421               	decf	_RB5_Flag^0,w,c
  1246  00112C  A4D8               	btfss	status,2,c
  1247  00112E  EF9B  F008         	goto	i2u261_41
  1248  001132  EF9D  F008         	goto	i2u261_40
  1249  001136                     i2u261_41:
  1250  001136  EFA2  F008         	goto	i2l4696
  1251  00113A                     i2u261_40:
  1252  00113A                     
  1253                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 62:         RB5_Flag = 0;
  1254  00113A  0E00               	movlw	0
  1255  00113C  6E21               	movwf	_RB5_Flag^0,c
  1256  00113E                     
  1257                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 63:         RB5_ISR(0);
  1258  00113E  0E00               	movlw	0
  1259  001140  EC54  F00B         	call	_RB5_ISR
  1260  001144                     i2l4696:
  1261                           
  1262                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 65:     if((INTCONbits.RBIE == 1) && (IN
      +                          TCONbits.RBIF == 1)&& (PORTBbits.RB5 == LOW) && (RB5_Flag == 0)){
  1263  001144  A6F2               	btfss	242,3,c	;volatile
  1264  001146  EFA7  F008         	goto	i2u262_41
  1265  00114A  EFA9  F008         	goto	i2u262_40
  1266  00114E                     i2u262_41:
  1267  00114E  EFC4  F008         	goto	i2l4708
  1268  001152                     i2u262_40:
  1269  001152  A0F2               	btfss	242,0,c	;volatile
  1270  001154  EFAE  F008         	goto	i2u263_41
  1271  001158  EFB0  F008         	goto	i2u263_40
  1272  00115C                     i2u263_41:
  1273  00115C  EFC4  F008         	goto	i2l4708
  1274  001160                     i2u263_40:
  1275  001160  BA81               	btfsc	129,5,c	;volatile
  1276  001162  EFB5  F008         	goto	i2u264_41
  1277  001166  EFB7  F008         	goto	i2u264_40
  1278  00116A                     i2u264_41:
  1279  00116A  EFC4  F008         	goto	i2l4708
  1280  00116E                     i2u264_40:
  1281  00116E  5021               	movf	_RB5_Flag^0,w,c
  1282  001170  A4D8               	btfss	status,2,c
  1283  001172  EFBD  F008         	goto	i2u265_41
  1284  001176  EFBF  F008         	goto	i2u265_40
  1285  00117A                     i2u265_41:
  1286  00117A  EFC4  F008         	goto	i2l4708
  1287  00117E                     i2u265_40:
  1288  00117E                     
  1289                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 66:         RB5_Flag = 1;
  1290  00117E  0E01               	movlw	1
  1291  001180  6E21               	movwf	_RB5_Flag^0,c
  1292  001182                     
  1293                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 67:        RB5_ISR(1);
  1294  001182  0E01               	movlw	1
  1295  001184  EC54  F00B         	call	_RB5_ISR
  1296  001188                     i2l4708:
  1297                           
  1298                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 69:     if((INTCONbits.RBIE == 1) && (IN
      +                          TCONbits.RBIF == 1)&&(PORTBbits.RB6 == HIGH) && (RB6_Flag == 1)){
  1299  001188  A6F2               	btfss	242,3,c	;volatile
  1300  00118A  EFC9  F008         	goto	i2u266_41
  1301  00118E  EFCB  F008         	goto	i2u266_40
  1302  001192                     i2u266_41:
  1303  001192  EFE6  F008         	goto	i2l4720
  1304  001196                     i2u266_40:
  1305  001196  A0F2               	btfss	242,0,c	;volatile
  1306  001198  EFD0  F008         	goto	i2u267_41
  1307  00119C  EFD2  F008         	goto	i2u267_40
  1308  0011A0                     i2u267_41:
  1309  0011A0  EFE6  F008         	goto	i2l4720
  1310  0011A4                     i2u267_40:
  1311  0011A4  AC81               	btfss	129,6,c	;volatile
  1312  0011A6  EFD7  F008         	goto	i2u268_41
  1313  0011AA  EFD9  F008         	goto	i2u268_40
  1314  0011AE                     i2u268_41:
  1315  0011AE  EFE6  F008         	goto	i2l4720
  1316  0011B2                     i2u268_40:
  1317  0011B2  0420               	decf	_RB6_Flag^0,w,c
  1318  0011B4  A4D8               	btfss	status,2,c
  1319  0011B6  EFDF  F008         	goto	i2u269_41
  1320  0011BA  EFE1  F008         	goto	i2u269_40
  1321  0011BE                     i2u269_41:
  1322  0011BE  EFE6  F008         	goto	i2l4720
  1323  0011C2                     i2u269_40:
  1324  0011C2                     
  1325                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 70:         RB6_Flag = 0;
  1326  0011C2  0E00               	movlw	0
  1327  0011C4  6E20               	movwf	_RB6_Flag^0,c
  1328  0011C6                     
  1329                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 71:         RB6_ISR(0);
  1330  0011C6  0E00               	movlw	0
  1331  0011C8  EC47  F00B         	call	_RB6_ISR
  1332  0011CC                     i2l4720:
  1333                           
  1334                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 73:     if((INTCONbits.RBIE == 1) && (IN
      +                          TCONbits.RBIF == 1)&& (PORTBbits.RB6 == LOW) && (RB6_Flag == 0)){
  1335  0011CC  A6F2               	btfss	242,3,c	;volatile
  1336  0011CE  EFEB  F008         	goto	i2u270_41
  1337  0011D2  EFED  F008         	goto	i2u270_40
  1338  0011D6                     i2u270_41:
  1339  0011D6  EF08  F009         	goto	i2l4732
  1340  0011DA                     i2u270_40:
  1341  0011DA  A0F2               	btfss	242,0,c	;volatile
  1342  0011DC  EFF2  F008         	goto	i2u271_41
  1343  0011E0  EFF4  F008         	goto	i2u271_40
  1344  0011E4                     i2u271_41:
  1345  0011E4  EF08  F009         	goto	i2l4732
  1346  0011E8                     i2u271_40:
  1347  0011E8  BC81               	btfsc	129,6,c	;volatile
  1348  0011EA  EFF9  F008         	goto	i2u272_41
  1349  0011EE  EFFB  F008         	goto	i2u272_40
  1350  0011F2                     i2u272_41:
  1351  0011F2  EF08  F009         	goto	i2l4732
  1352  0011F6                     i2u272_40:
  1353  0011F6  5020               	movf	_RB6_Flag^0,w,c
  1354  0011F8  A4D8               	btfss	status,2,c
  1355  0011FA  EF01  F009         	goto	i2u273_41
  1356  0011FE  EF03  F009         	goto	i2u273_40
  1357  001202                     i2u273_41:
  1358  001202  EF08  F009         	goto	i2l4732
  1359  001206                     i2u273_40:
  1360  001206                     
  1361                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 74:         RB6_Flag = 1;
  1362  001206  0E01               	movlw	1
  1363  001208  6E20               	movwf	_RB6_Flag^0,c
  1364  00120A                     
  1365                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 75:         RB6_ISR(1);
  1366  00120A  0E01               	movlw	1
  1367  00120C  EC47  F00B         	call	_RB6_ISR
  1368  001210                     i2l4732:
  1369                           
  1370                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 77:     if((INTCONbits.RBIE == 1) && (IN
      +                          TCONbits.RBIF == 1)&&(PORTBbits.RB7 == HIGH) && (RB7_Flag == 1)){
  1371  001210  A6F2               	btfss	242,3,c	;volatile
  1372  001212  EF0D  F009         	goto	i2u274_41
  1373  001216  EF0F  F009         	goto	i2u274_40
  1374  00121A                     i2u274_41:
  1375  00121A  EF2A  F009         	goto	i2l4744
  1376  00121E                     i2u274_40:
  1377  00121E  A0F2               	btfss	242,0,c	;volatile
  1378  001220  EF14  F009         	goto	i2u275_41
  1379  001224  EF16  F009         	goto	i2u275_40
  1380  001228                     i2u275_41:
  1381  001228  EF2A  F009         	goto	i2l4744
  1382  00122C                     i2u275_40:
  1383  00122C  AE81               	btfss	129,7,c	;volatile
  1384  00122E  EF1B  F009         	goto	i2u276_41
  1385  001232  EF1D  F009         	goto	i2u276_40
  1386  001236                     i2u276_41:
  1387  001236  EF2A  F009         	goto	i2l4744
  1388  00123A                     i2u276_40:
  1389  00123A  041F               	decf	_RB7_Flag^0,w,c
  1390  00123C  A4D8               	btfss	status,2,c
  1391  00123E  EF23  F009         	goto	i2u277_41
  1392  001242  EF25  F009         	goto	i2u277_40
  1393  001246                     i2u277_41:
  1394  001246  EF2A  F009         	goto	i2l4744
  1395  00124A                     i2u277_40:
  1396  00124A                     
  1397                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 78:         RB7_Flag = 0;
  1398  00124A  0E00               	movlw	0
  1399  00124C  6E1F               	movwf	_RB7_Flag^0,c
  1400  00124E                     
  1401                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 79:         RB7_ISR(0);
  1402  00124E  0E00               	movlw	0
  1403  001250  EC3A  F00B         	call	_RB7_ISR
  1404  001254                     i2l4744:
  1405                           
  1406                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 81:     if((INTCONbits.RBIE == 1) && (IN
      +                          TCONbits.RBIF == 1)&& (PORTBbits.RB7 == LOW) && (RB7_Flag == 0)){
  1407  001254  A6F2               	btfss	242,3,c	;volatile
  1408  001256  EF2F  F009         	goto	i2u278_41
  1409  00125A  EF31  F009         	goto	i2u278_40
  1410  00125E                     i2u278_41:
  1411  00125E  EF4C  F009         	goto	i2l4756
  1412  001262                     i2u278_40:
  1413  001262  A0F2               	btfss	242,0,c	;volatile
  1414  001264  EF36  F009         	goto	i2u279_41
  1415  001268  EF38  F009         	goto	i2u279_40
  1416  00126C                     i2u279_41:
  1417  00126C  EF4C  F009         	goto	i2l4756
  1418  001270                     i2u279_40:
  1419  001270  BE81               	btfsc	129,7,c	;volatile
  1420  001272  EF3D  F009         	goto	i2u280_41
  1421  001276  EF3F  F009         	goto	i2u280_40
  1422  00127A                     i2u280_41:
  1423  00127A  EF4C  F009         	goto	i2l4756
  1424  00127E                     i2u280_40:
  1425  00127E  501F               	movf	_RB7_Flag^0,w,c
  1426  001280  A4D8               	btfss	status,2,c
  1427  001282  EF45  F009         	goto	i2u281_41
  1428  001286  EF47  F009         	goto	i2u281_40
  1429  00128A                     i2u281_41:
  1430  00128A  EF4C  F009         	goto	i2l4756
  1431  00128E                     i2u281_40:
  1432  00128E                     
  1433                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 82:         RB7_Flag = 1;
  1434  00128E  0E01               	movlw	1
  1435  001290  6E1F               	movwf	_RB7_Flag^0,c
  1436  001292                     
  1437                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 83:         RB7_ISR(1);
  1438  001292  0E01               	movlw	1
  1439  001294  EC3A  F00B         	call	_RB7_ISR
  1440  001298                     i2l4756:
  1441                           
  1442                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 85:     if((PIE1bits.ADIE == 1) && (PIR1
      +                          bits.ADIF == 1)){
  1443  001298  AC9D               	btfss	157,6,c	;volatile
  1444  00129A  EF51  F009         	goto	i2u282_41
  1445  00129E  EF53  F009         	goto	i2u282_40
  1446  0012A2                     i2u282_41:
  1447  0012A2  EF5C  F009         	goto	i2l4762
  1448  0012A6                     i2u282_40:
  1449  0012A6  AC9E               	btfss	158,6,c	;volatile
  1450  0012A8  EF58  F009         	goto	i2u283_41
  1451  0012AC  EF5A  F009         	goto	i2u283_40
  1452  0012B0                     i2u283_41:
  1453  0012B0  EF5C  F009         	goto	i2l4762
  1454  0012B4                     i2u283_40:
  1455  0012B4                     
  1456                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 86:         ADC_ISR();
  1457  0012B4  EC95  F00B         	call	_ADC_ISR	;wreg free
  1458  0012B8                     i2l4762:
  1459                           
  1460                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 88:     if((1 == INTCONbits.TMR0IE) && (
      +                          1 == INTCONbits.TMR0IF)){
  1461  0012B8  AAF2               	btfss	242,5,c	;volatile
  1462  0012BA  EF61  F009         	goto	i2u284_41
  1463  0012BE  EF63  F009         	goto	i2u284_40
  1464  0012C2                     i2u284_41:
  1465  0012C2  EF6C  F009         	goto	i2l4768
  1466  0012C6                     i2u284_40:
  1467  0012C6  A4F2               	btfss	242,2,c	;volatile
  1468  0012C8  EF68  F009         	goto	i2u285_41
  1469  0012CC  EF6A  F009         	goto	i2u285_40
  1470  0012D0                     i2u285_41:
  1471  0012D0  EF6C  F009         	goto	i2l4768
  1472  0012D4                     i2u285_40:
  1473  0012D4                     
  1474                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 89:         Timer0_ISR();
  1475  0012D4  EC89  F00B         	call	_Timer0_ISR	;wreg free
  1476  0012D8                     i2l4768:
  1477                           
  1478                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 91:     if((1 == PIE1bits.TMR1IE) && (1 
      +                          == PIR1bits.TMR1IF)){
  1479  0012D8  A09D               	btfss	157,0,c	;volatile
  1480  0012DA  EF71  F009         	goto	i2u286_41
  1481  0012DE  EF73  F009         	goto	i2u286_40
  1482  0012E2                     i2u286_41:
  1483  0012E2  EF7C  F009         	goto	i2l4774
  1484  0012E6                     i2u286_40:
  1485  0012E6  A09E               	btfss	158,0,c	;volatile
  1486  0012E8  EF78  F009         	goto	i2u287_41
  1487  0012EC  EF7A  F009         	goto	i2u287_40
  1488  0012F0                     i2u287_41:
  1489  0012F0  EF7C  F009         	goto	i2l4774
  1490  0012F4                     i2u287_40:
  1491  0012F4                     
  1492                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 92:         Timer1_ISR();
  1493  0012F4  EC7F  F00B         	call	_Timer1_ISR	;wreg free
  1494  0012F8                     i2l4774:
  1495                           
  1496                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 94:     if((1 == PIE1bits.TMR2IE) && (1 
      +                          == PIR1bits.TMR2IF)){
  1497  0012F8  A29D               	btfss	157,1,c	;volatile
  1498  0012FA  EF81  F009         	goto	i2u288_41
  1499  0012FE  EF83  F009         	goto	i2u288_40
  1500  001302                     i2u288_41:
  1501  001302  EF8C  F009         	goto	i2l4780
  1502  001306                     i2u288_40:
  1503  001306  A29E               	btfss	158,1,c	;volatile
  1504  001308  EF88  F009         	goto	i2u289_41
  1505  00130C  EF8A  F009         	goto	i2u289_40
  1506  001310                     i2u289_41:
  1507  001310  EF8C  F009         	goto	i2l4780
  1508  001314                     i2u289_40:
  1509  001314                     
  1510                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 95:         Timer2_ISR();
  1511  001314  EC85  F00B         	call	_Timer2_ISR	;wreg free
  1512  001318                     i2l4780:
  1513                           
  1514                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 97:     if((1 == PIE2bits.TMR3IE) && (1 
      +                          == PIR2bits.TMR3IF)){
  1515  001318  A2A0               	btfss	160,1,c	;volatile
  1516  00131A  EF91  F009         	goto	i2u290_41
  1517  00131E  EF93  F009         	goto	i2u290_40
  1518  001322                     i2u290_41:
  1519  001322  EF9C  F009         	goto	i2l4786
  1520  001326                     i2u290_40:
  1521  001326  A2A1               	btfss	161,1,c	;volatile
  1522  001328  EF98  F009         	goto	i2u291_41
  1523  00132C  EF9A  F009         	goto	i2u291_40
  1524  001330                     i2u291_41:
  1525  001330  EF9C  F009         	goto	i2l4786
  1526  001334                     i2u291_40:
  1527  001334                     
  1528                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 98:         Timer3_ISR();
  1529  001334  EC79  F00B         	call	_Timer3_ISR	;wreg free
  1530  001338                     i2l4786:
  1531                           
  1532                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 100:     if((1 == PIE1bits.CCP1IE) && (1
      +                           == PIR1bits.CCP1IF)){
  1533  001338  A49D               	btfss	157,2,c	;volatile
  1534  00133A  EFA1  F009         	goto	i2u292_41
  1535  00133E  EFA3  F009         	goto	i2u292_40
  1536  001342                     i2u292_41:
  1537  001342  EFAC  F009         	goto	i2l4792
  1538  001346                     i2u292_40:
  1539  001346  A49E               	btfss	158,2,c	;volatile
  1540  001348  EFA8  F009         	goto	i2u293_41
  1541  00134C  EFAA  F009         	goto	i2u293_40
  1542  001350                     i2u293_41:
  1543  001350  EFAC  F009         	goto	i2l4792
  1544  001354                     i2u293_40:
  1545  001354                     
  1546                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 101:         CCP1_ISR();
  1547  001354  EC93  F00B         	call	_CCP1_ISR	;wreg free
  1548  001358                     i2l4792:
  1549                           
  1550                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 103:     if((1 == PIE2bits.CCP2IE) && (1
      +                           == PIR2bits.CCP2IF)){
  1551  001358  A0A0               	btfss	160,0,c	;volatile
  1552  00135A  EFB1  F009         	goto	i2u294_41
  1553  00135E  EFB3  F009         	goto	i2u294_40
  1554  001362                     i2u294_41:
  1555  001362  EFBC  F009         	goto	i2l4798
  1556  001366                     i2u294_40:
  1557  001366  A0A1               	btfss	161,0,c	;volatile
  1558  001368  EFB8  F009         	goto	i2u295_41
  1559  00136C  EFBA  F009         	goto	i2u295_40
  1560  001370                     i2u295_41:
  1561  001370  EFBC  F009         	goto	i2l4798
  1562  001374                     i2u295_40:
  1563  001374                     
  1564                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 104:         CCP2_ISR();
  1565  001374  EC91  F00B         	call	_CCP2_ISR	;wreg free
  1566  001378                     i2l4798:
  1567                           
  1568                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 106:     if((1 == PIE1bits.TXIE) && (1 =
      +                          = PIR1bits.TXIF)){
  1569  001378  A89D               	btfss	157,4,c	;volatile
  1570  00137A  EFC1  F009         	goto	i2u296_41
  1571  00137E  EFC3  F009         	goto	i2u296_40
  1572  001382                     i2u296_41:
  1573  001382  EFCC  F009         	goto	i2l1201
  1574  001386                     i2u296_40:
  1575  001386  A89E               	btfss	158,4,c	;volatile
  1576  001388  EFC8  F009         	goto	i2u297_41
  1577  00138C  EFCA  F009         	goto	i2u297_40
  1578  001390                     i2u297_41:
  1579  001390  EFCC  F009         	goto	i2l1201
  1580  001394                     i2u297_40:
  1581  001394                     
  1582                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 107:         EUSART_TX_Isr();
  1583  001394  EC97  F00B         	call	_EUSART_TX_Isr	;wreg free
  1584  001398                     i2l1201:
  1585  001398  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1586  00139A  0011               	retfie		f
  1587  00139C                     __end_of_InterruptManager:
  1588                           	callstack 0
  1589                           
  1590 ;; *************** function _Timer3_ISR *****************
  1591 ;; Defined at:
  1592 ;;		line 318 in file "MCAL_Layer/Timer3/hal_timer3.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;		None
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		wreg, status,2
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1610 ;;Total ram usage:        0 bytes
  1611 ;; Hardware stack levels used: 1
  1612 ;; This function calls:
  1613 ;;		Nothing
  1614 ;; This function is called by:
  1615 ;;		_InterruptManager
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           	psect	text5
  1620  0016F2                     __ptext5:
  1621                           	callstack 0
  1622  0016F2                     _Timer3_ISR:
  1623                           	callstack 28
  1624  0016F2                     
  1625                           ;MCAL_Layer/Timer3/hal_timer3.c: 319:     (PIR2bits.TMR3IF = 0);
  1626  0016F2  92A1               	bcf	161,1,c	;volatile
  1627  0016F4                     
  1628                           ;MCAL_Layer/Timer3/hal_timer3.c: 320:     TMR3H = (timer3_isr_preload_value) >> 8;
  1629  0016F4  5039               	movf	(_timer3_isr_preload_value+1)^0,w,c	;volatile
  1630  0016F6  6EB3               	movwf	179,c	;volatile
  1631  0016F8                     
  1632                           ;MCAL_Layer/Timer3/hal_timer3.c: 321:     TMR3L = (uint8)(timer3_isr_preload_value);
  1633  0016F8  C038  FFB2         	movff	_timer3_isr_preload_value,4018	;volatile
  1634  0016FC  0012               	return		;funcret
  1635  0016FE                     __end_of_Timer3_ISR:
  1636                           	callstack 0
  1637                           
  1638 ;; *************** function _Timer2_ISR *****************
  1639 ;; Defined at:
  1640 ;;		line 168 in file "MCAL_Layer/Timer2/hal_timer2.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;		None
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;		None
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  1    wreg      void 
  1647 ;; Registers used:
  1648 ;;		None
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1658 ;;Total ram usage:        0 bytes
  1659 ;; Hardware stack levels used: 1
  1660 ;; This function calls:
  1661 ;;		Nothing
  1662 ;; This function is called by:
  1663 ;;		_InterruptManager
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text6
  1668  00170A                     __ptext6:
  1669                           	callstack 0
  1670  00170A                     _Timer2_ISR:
  1671                           	callstack 28
  1672  00170A                     
  1673                           ;MCAL_Layer/Timer2/hal_timer2.c: 169:     (PIR1bits.TMR2IF = 0);
  1674  00170A  929E               	bcf	158,1,c	;volatile
  1675                           
  1676                           ;MCAL_Layer/Timer2/hal_timer2.c: 171:     TMR2 = timer2_preload;
  1677  00170C  C064  FFCC         	movff	_timer2_preload,4044	;volatile
  1678  001710  0012               	return		;funcret
  1679  001712                     __end_of_Timer2_ISR:
  1680                           	callstack 0
  1681                           
  1682 ;; *************** function _Timer1_ISR *****************
  1683 ;; Defined at:
  1684 ;;		line 339 in file "MCAL_Layer/Timer1/hal_timer1.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;		None
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;		None
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		wreg, status,2
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1702 ;;Total ram usage:        0 bytes
  1703 ;; Hardware stack levels used: 1
  1704 ;; This function calls:
  1705 ;;		Nothing
  1706 ;; This function is called by:
  1707 ;;		_InterruptManager
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           	psect	text7
  1712  0016FE                     __ptext7:
  1713                           	callstack 0
  1714  0016FE                     _Timer1_ISR:
  1715                           	callstack 28
  1716  0016FE                     
  1717                           ;MCAL_Layer/Timer1/hal_timer1.c: 340:     (PIR1bits.TMR1IF = 0);
  1718  0016FE  909E               	bcf	158,0,c	;volatile
  1719  001700                     
  1720                           ;MCAL_Layer/Timer1/hal_timer1.c: 341:     TMR1H = (timer1_isr_preload_value) >> 8;
  1721  001700  503F               	movf	(_timer1_isr_preload_value+1)^0,w,c	;volatile
  1722  001702  6ECF               	movwf	207,c	;volatile
  1723  001704                     
  1724                           ;MCAL_Layer/Timer1/hal_timer1.c: 342:     TMR1L = (uint8)(timer1_isr_preload_value);
  1725  001704  C03E  FFCE         	movff	_timer1_isr_preload_value,4046	;volatile
  1726  001708  0012               	return		;funcret
  1727  00170A                     __end_of_Timer1_ISR:
  1728                           	callstack 0
  1729                           
  1730 ;; *************** function _Timer0_ISR *****************
  1731 ;; Defined at:
  1732 ;;		line 407 in file "MCAL_Layer/Timer0/hal_timer0.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		None
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1750 ;;Total ram usage:        0 bytes
  1751 ;; Hardware stack levels used: 1
  1752 ;; This function calls:
  1753 ;;		Nothing
  1754 ;; This function is called by:
  1755 ;;		_InterruptManager
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text8
  1760  001712                     __ptext8:
  1761                           	callstack 0
  1762  001712                     _Timer0_ISR:
  1763                           	callstack 28
  1764  001712                     
  1765                           ;MCAL_Layer/Timer0/hal_timer0.c: 408:     (INTCONbits.TMR0IF = 0);
  1766  001712  94F2               	bcf	242,2,c	;volatile
  1767  001714  0012               	return		;funcret
  1768  001716                     __end_of_Timer0_ISR:
  1769                           	callstack 0
  1770                           
  1771 ;; *************** function _RB7_ISR *****************
  1772 ;; Defined at:
  1773 ;;		line 765 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;  source          1    wreg     unsigned char 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  source          1    0[COMRAM] unsigned char 
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      void 
  1780 ;; Registers used:
  1781 ;;		wreg, status,2, status,0
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1791 ;;Total ram usage:        1 bytes
  1792 ;; Hardware stack levels used: 1
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_InterruptManager
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text9
  1801  001674                     __ptext9:
  1802                           	callstack 0
  1803  001674                     _RB7_ISR:
  1804                           	callstack 28
  1805                           
  1806                           ;incstack = 0
  1807                           ;RB7_ISR@source stored from wreg
  1808  001674  6E6C               	movwf	RB7_ISR@source^0,c
  1809  001676                     
  1810                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 766:     (INTCONbits.RBIF = 0);
  1811  001676  90F2               	bcf	242,0,c	;volatile
  1812  001678                     
  1813                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 767:     if(source == 0){
  1814  001678  506C               	movf	RB7_ISR@source^0,w,c
  1815  00167A  A4D8               	btfss	status,2,c
  1816  00167C  EF42  F00B         	goto	i2u44_41
  1817  001680  EF44  F00B         	goto	i2u44_40
  1818  001684                     i2u44_41:
  1819  001684  EF46  F00B         	goto	i2l2860
  1820  001688                     i2u44_40:
  1821  001688  EF46  F00B         	goto	i2l1125
  1822  00168C                     i2l2860:
  1823  00168C                     i2l1125:
  1824  00168C  0012               	return		;funcret
  1825  00168E                     __end_of_RB7_ISR:
  1826                           	callstack 0
  1827                           
  1828 ;; *************** function _RB6_ISR *****************
  1829 ;; Defined at:
  1830 ;;		line 756 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;  source          1    wreg     unsigned char 
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  source          1    0[COMRAM] unsigned char 
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg, status,2, status,0
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1848 ;;Total ram usage:        1 bytes
  1849 ;; Hardware stack levels used: 1
  1850 ;; This function calls:
  1851 ;;		Nothing
  1852 ;; This function is called by:
  1853 ;;		_InterruptManager
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           	psect	text10
  1858  00168E                     __ptext10:
  1859                           	callstack 0
  1860  00168E                     _RB6_ISR:
  1861                           	callstack 28
  1862                           
  1863                           ;incstack = 0
  1864                           ;RB6_ISR@source stored from wreg
  1865  00168E  6E6C               	movwf	RB6_ISR@source^0,c
  1866  001690                     
  1867                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 757:     (INTCONbits.RBIF = 0);
  1868  001690  90F2               	bcf	242,0,c	;volatile
  1869  001692                     
  1870                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 758:     if(source == 0){
  1871  001692  506C               	movf	RB6_ISR@source^0,w,c
  1872  001694  A4D8               	btfss	status,2,c
  1873  001696  EF4F  F00B         	goto	i2u43_41
  1874  00169A  EF51  F00B         	goto	i2u43_40
  1875  00169E                     i2u43_41:
  1876  00169E  EF53  F00B         	goto	i2l2850
  1877  0016A2                     i2u43_40:
  1878  0016A2  EF53  F00B         	goto	i2l1117
  1879  0016A6                     i2l2850:
  1880  0016A6                     i2l1117:
  1881  0016A6  0012               	return		;funcret
  1882  0016A8                     __end_of_RB6_ISR:
  1883                           	callstack 0
  1884                           
  1885 ;; *************** function _RB5_ISR *****************
  1886 ;; Defined at:
  1887 ;;		line 747 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  source          1    wreg     unsigned char 
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;  source          1    0[COMRAM] unsigned char 
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		wreg, status,2, status,0
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1902 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1904 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1905 ;;Total ram usage:        1 bytes
  1906 ;; Hardware stack levels used: 1
  1907 ;; This function calls:
  1908 ;;		Nothing
  1909 ;; This function is called by:
  1910 ;;		_InterruptManager
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text11
  1915  0016A8                     __ptext11:
  1916                           	callstack 0
  1917  0016A8                     _RB5_ISR:
  1918                           	callstack 28
  1919                           
  1920                           ;incstack = 0
  1921                           ;RB5_ISR@source stored from wreg
  1922  0016A8  6E6C               	movwf	RB5_ISR@source^0,c
  1923  0016AA                     
  1924                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 748:     (INTCONbits.RBIF = 0);
  1925  0016AA  90F2               	bcf	242,0,c	;volatile
  1926  0016AC                     
  1927                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 749:     if(source == 0){
  1928  0016AC  506C               	movf	RB5_ISR@source^0,w,c
  1929  0016AE  A4D8               	btfss	status,2,c
  1930  0016B0  EF5C  F00B         	goto	i2u42_41
  1931  0016B4  EF5E  F00B         	goto	i2u42_40
  1932  0016B8                     i2u42_41:
  1933  0016B8  EF60  F00B         	goto	i2l2840
  1934  0016BC                     i2u42_40:
  1935  0016BC  EF60  F00B         	goto	i2l1109
  1936  0016C0                     i2l2840:
  1937  0016C0                     i2l1109:
  1938  0016C0  0012               	return		;funcret
  1939  0016C2                     __end_of_RB5_ISR:
  1940                           	callstack 0
  1941                           
  1942 ;; *************** function _RB4_ISR *****************
  1943 ;; Defined at:
  1944 ;;		line 738 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  source          1    wreg     unsigned char 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  source          1    0[COMRAM] unsigned char 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      void 
  1951 ;; Registers used:
  1952 ;;		wreg, status,2, status,0
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1959 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;Total ram usage:        1 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; This function calls:
  1965 ;;		Nothing
  1966 ;; This function is called by:
  1967 ;;		_InterruptManager
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           	psect	text12
  1972  0016C2                     __ptext12:
  1973                           	callstack 0
  1974  0016C2                     _RB4_ISR:
  1975                           	callstack 28
  1976                           
  1977                           ;incstack = 0
  1978                           ;RB4_ISR@source stored from wreg
  1979  0016C2  6E6C               	movwf	RB4_ISR@source^0,c
  1980  0016C4                     
  1981                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 739:     (INTCONbits.RBIF = 0);
  1982  0016C4  90F2               	bcf	242,0,c	;volatile
  1983  0016C6                     
  1984                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 740:     if(source == 0){
  1985  0016C6  506C               	movf	RB4_ISR@source^0,w,c
  1986  0016C8  A4D8               	btfss	status,2,c
  1987  0016CA  EF69  F00B         	goto	i2u41_41
  1988  0016CE  EF6B  F00B         	goto	i2u41_40
  1989  0016D2                     i2u41_41:
  1990  0016D2  EF6D  F00B         	goto	i2l2830
  1991  0016D6                     i2u41_40:
  1992  0016D6  EF6D  F00B         	goto	i2l1101
  1993  0016DA                     i2l2830:
  1994  0016DA                     i2l1101:
  1995  0016DA  0012               	return		;funcret
  1996  0016DC                     __end_of_RB4_ISR:
  1997                           	callstack 0
  1998                           
  1999 ;; *************** function _INT2_ISR *****************
  2000 ;; Defined at:
  2001 ;;		line 614 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;		None
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;		None
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  1    wreg      void 
  2008 ;; Registers used:
  2009 ;;		None
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2019 ;;Total ram usage:        0 bytes
  2020 ;; Hardware stack levels used: 1
  2021 ;; This function calls:
  2022 ;;		Nothing
  2023 ;; This function is called by:
  2024 ;;		_InterruptManager
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           	psect	text13
  2029  001716                     __ptext13:
  2030                           	callstack 0
  2031  001716                     _INT2_ISR:
  2032                           	callstack 28
  2033  001716                     
  2034                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 615:     (INTCON3bits.INT2IF = 0);
  2035  001716  92F0               	bcf	240,1,c	;volatile
  2036  001718  0012               	return		;funcret
  2037  00171A                     __end_of_INT2_ISR:
  2038                           	callstack 0
  2039                           
  2040 ;; *************** function _INT1_ISR *****************
  2041 ;; Defined at:
  2042 ;;		line 608 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;		None
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;		None
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      void 
  2049 ;; Registers used:
  2050 ;;		None
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2060 ;;Total ram usage:        0 bytes
  2061 ;; Hardware stack levels used: 1
  2062 ;; This function calls:
  2063 ;;		Nothing
  2064 ;; This function is called by:
  2065 ;;		_InterruptManager
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           	psect	text14
  2070  00171A                     __ptext14:
  2071                           	callstack 0
  2072  00171A                     _INT1_ISR:
  2073                           	callstack 28
  2074  00171A                     
  2075                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 609:     (INTCON3bits.INT1IF = 0);
  2076  00171A  90F0               	bcf	240,0,c	;volatile
  2077  00171C  0012               	return		;funcret
  2078  00171E                     __end_of_INT1_ISR:
  2079                           	callstack 0
  2080                           
  2081 ;; *************** function _INT0_ISR *****************
  2082 ;; Defined at:
  2083 ;;		line 602 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;		None
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;		None
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      void 
  2090 ;; Registers used:
  2091 ;;		None
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;Total ram usage:        0 bytes
  2102 ;; Hardware stack levels used: 1
  2103 ;; This function calls:
  2104 ;;		Nothing
  2105 ;; This function is called by:
  2106 ;;		_InterruptManager
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           	psect	text15
  2111  00171E                     __ptext15:
  2112                           	callstack 0
  2113  00171E                     _INT0_ISR:
  2114                           	callstack 28
  2115  00171E                     
  2116                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 603:     (INTCONbits.INT0IF = 0);
  2117  00171E  92F2               	bcf	242,1,c	;volatile
  2118  001720  0012               	return		;funcret
  2119  001722                     __end_of_INT0_ISR:
  2120                           	callstack 0
  2121                           
  2122 ;; *************** function _EUSART_TX_Isr *****************
  2123 ;; Defined at:
  2124 ;;		line 349 in file "MCAL_Layer/EUSART/hal_eusart.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;		None
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, status,2, status,0
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;Total ram usage:        0 bytes
  2143 ;; Hardware stack levels used: 1
  2144 ;; This function calls:
  2145 ;;		Nothing
  2146 ;; This function is called by:
  2147 ;;		_InterruptManager
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           	psect	text16
  2152  00172E                     __ptext16:
  2153                           	callstack 0
  2154  00172E                     _EUSART_TX_Isr:
  2155                           	callstack 28
  2156  00172E  0012               	return		;funcret
  2157  001730                     __end_of_EUSART_TX_Isr:
  2158                           	callstack 0
  2159                           
  2160 ;; *************** function _CCP2_ISR *****************
  2161 ;; Defined at:
  2162 ;;		line 405 in file "MCAL_Layer/CCP1/hal_ccp1.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;		None
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;		None
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		None
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;Total ram usage:        0 bytes
  2181 ;; Hardware stack levels used: 1
  2182 ;; This function calls:
  2183 ;;		Nothing
  2184 ;; This function is called by:
  2185 ;;		_InterruptManager
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           	psect	text17
  2190  001722                     __ptext17:
  2191                           	callstack 0
  2192  001722                     _CCP2_ISR:
  2193                           	callstack 28
  2194  001722                     
  2195                           ;MCAL_Layer/CCP1/hal_ccp1.c: 406:     (PIR2bits.CCP2IF = 0);
  2196  001722  90A1               	bcf	161,0,c	;volatile
  2197  001724  0012               	return		;funcret
  2198  001726                     __end_of_CCP2_ISR:
  2199                           	callstack 0
  2200                           
  2201 ;; *************** function _CCP1_ISR *****************
  2202 ;; Defined at:
  2203 ;;		line 397 in file "MCAL_Layer/CCP1/hal_ccp1.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;		None
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;		None
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  1    wreg      void 
  2210 ;; Registers used:
  2211 ;;		None
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2221 ;;Total ram usage:        0 bytes
  2222 ;; Hardware stack levels used: 1
  2223 ;; This function calls:
  2224 ;;		Nothing
  2225 ;; This function is called by:
  2226 ;;		_InterruptManager
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text18
  2231  001726                     __ptext18:
  2232                           	callstack 0
  2233  001726                     _CCP1_ISR:
  2234                           	callstack 28
  2235  001726                     
  2236                           ;MCAL_Layer/CCP1/hal_ccp1.c: 398:     (PIR1bits.CCP1IF = 0);
  2237  001726  949E               	bcf	158,2,c	;volatile
  2238  001728  0012               	return		;funcret
  2239  00172A                     __end_of_CCP1_ISR:
  2240                           	callstack 0
  2241                           
  2242 ;; *************** function _ADC_ISR *****************
  2243 ;; Defined at:
  2244 ;;		line 196 in file "MCAL_Layer/ADC/hal_adc.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;		None
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;		None
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		None
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2262 ;;Total ram usage:        0 bytes
  2263 ;; Hardware stack levels used: 1
  2264 ;; This function calls:
  2265 ;;		Nothing
  2266 ;; This function is called by:
  2267 ;;		_InterruptManager
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text19
  2272  00172A                     __ptext19:
  2273                           	callstack 0
  2274  00172A                     _ADC_ISR:
  2275                           	callstack 28
  2276  00172A                     
  2277                           ;MCAL_Layer/ADC/hal_adc.c: 197:     (PIR1bits.ADIF = 0);
  2278  00172A  9C9E               	bcf	158,6,c	;volatile
  2279  00172C  0012               	return		;funcret
  2280  00172E                     __end_of_ADC_ISR:
  2281                           	callstack 0
  2282                           
  2283                           	psect	rparam
  2284  0000                     
  2285                           	psect	temp
  2286  000073                     btemp:
  2287                           	callstack 0
  2288  000073                     	ds	1
  2289  0000                     int$flags	set	btemp
  2290  0000                     wtemp8	set	btemp+1
  2291  0000                     ttemp5	set	btemp+1
  2292  0000                     ttemp6	set	btemp+4
  2293  0000                     ttemp7	set	btemp+8
  2294                           
  2295                           	psect	idloc
  2296                           
  2297                           ;Config register IDLOC0 @ 0x200000
  2298                           ;	unspecified, using default values
  2299  200000                     	org	2097152
  2300  200000  FF                 	db	255
  2301                           
  2302                           ;Config register IDLOC1 @ 0x200001
  2303                           ;	unspecified, using default values
  2304  200001                     	org	2097153
  2305  200001  FF                 	db	255
  2306                           
  2307                           ;Config register IDLOC2 @ 0x200002
  2308                           ;	unspecified, using default values
  2309  200002                     	org	2097154
  2310  200002  FF                 	db	255
  2311                           
  2312                           ;Config register IDLOC3 @ 0x200003
  2313                           ;	unspecified, using default values
  2314  200003                     	org	2097155
  2315  200003  FF                 	db	255
  2316                           
  2317                           ;Config register IDLOC4 @ 0x200004
  2318                           ;	unspecified, using default values
  2319  200004                     	org	2097156
  2320  200004  FF                 	db	255
  2321                           
  2322                           ;Config register IDLOC5 @ 0x200005
  2323                           ;	unspecified, using default values
  2324  200005                     	org	2097157
  2325  200005  FF                 	db	255
  2326                           
  2327                           ;Config register IDLOC6 @ 0x200006
  2328                           ;	unspecified, using default values
  2329  200006                     	org	2097158
  2330  200006  FF                 	db	255
  2331                           
  2332                           ;Config register IDLOC7 @ 0x200007
  2333                           ;	unspecified, using default values
  2334  200007                     	org	2097159
  2335  200007  FF                 	db	255
  2336                           
  2337                           	psect	config
  2338                           
  2339                           ; Padding undefined space
  2340  300000                     	org	3145728
  2341  300000  FF                 	db	255
  2342                           
  2343                           ;Config register CONFIG1H @ 0x300001
  2344                           ;	Oscillator Selection bits
  2345                           ;	OSC = HS, HS oscillator
  2346                           ;	Fail-Safe Clock Monitor Enable bit
  2347                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2348                           ;	Internal/External Oscillator Switchover bit
  2349                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2350  300001                     	org	3145729
  2351  300001  02                 	db	2
  2352                           
  2353                           ;Config register CONFIG2L @ 0x300002
  2354                           ;	Power-up Timer Enable bit
  2355                           ;	PWRT = OFF, PWRT disabled
  2356                           ;	Brown-out Reset Enable bits
  2357                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2358                           ;	Brown Out Reset Voltage bits
  2359                           ;	BORV = 1, 
  2360  300002                     	org	3145730
  2361  300002  09                 	db	9
  2362                           
  2363                           ;Config register CONFIG2H @ 0x300003
  2364                           ;	Watchdog Timer Enable bit
  2365                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2366                           ;	Watchdog Timer Postscale Select bits
  2367                           ;	WDTPS = 32768, 1:32768
  2368  300003                     	org	3145731
  2369  300003  1E                 	db	30
  2370                           
  2371                           ; Padding undefined space
  2372  300004                     	org	3145732
  2373  300004  FF                 	db	255
  2374                           
  2375                           ;Config register CONFIG3H @ 0x300005
  2376                           ;	CCP2 MUX bit
  2377                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2378                           ;	PORTB A/D Enable bit
  2379                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2380                           ;	Low-Power Timer1 Oscillator Enable bit
  2381                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2382                           ;	MCLR Pin Enable bit
  2383                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2384  300005                     	org	3145733
  2385  300005  81                 	db	129
  2386                           
  2387                           ;Config register CONFIG4L @ 0x300006
  2388                           ;	Stack Full/Underflow Reset Enable bit
  2389                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2390                           ;	Single-Supply ICSP Enable bit
  2391                           ;	LVP = OFF, Single-Supply ICSP disabled
  2392                           ;	Extended Instruction Set Enable bit
  2393                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2394                           ;	Background Debugger Enable bit
  2395                           ;	DEBUG = 0x1, unprogrammed default
  2396  300006                     	org	3145734
  2397  300006  81                 	db	129
  2398                           
  2399                           ; Padding undefined space
  2400  300007                     	org	3145735
  2401  300007  FF                 	db	255
  2402                           
  2403                           ;Config register CONFIG5L @ 0x300008
  2404                           ;	Code Protection bit
  2405                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2406                           ;	Code Protection bit
  2407                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2408                           ;	Code Protection bit
  2409                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2410                           ;	Code Protection bit
  2411                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2412  300008                     	org	3145736
  2413  300008  0F                 	db	15
  2414                           
  2415                           ;Config register CONFIG5H @ 0x300009
  2416                           ;	Boot Block Code Protection bit
  2417                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2418                           ;	Data EEPROM Code Protection bit
  2419                           ;	CPD = OFF, Data EEPROM not code-protected
  2420  300009                     	org	3145737
  2421  300009  C0                 	db	192
  2422                           
  2423                           ;Config register CONFIG6L @ 0x30000A
  2424                           ;	Write Protection bit
  2425                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2426                           ;	Write Protection bit
  2427                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2428                           ;	Write Protection bit
  2429                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2430                           ;	Write Protection bit
  2431                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2432  30000A                     	org	3145738
  2433  30000A  0F                 	db	15
  2434                           
  2435                           ;Config register CONFIG6H @ 0x30000B
  2436                           ;	Configuration Register Write Protection bit
  2437                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2438                           ;	Boot Block Write Protection bit
  2439                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2440                           ;	Data EEPROM Write Protection bit
  2441                           ;	WRTD = OFF, Data EEPROM not write-protected
  2442  30000B                     	org	3145739
  2443  30000B  E0                 	db	224
  2444                           
  2445                           ;Config register CONFIG7L @ 0x30000C
  2446                           ;	Table Read Protection bit
  2447                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2448                           ;	Table Read Protection bit
  2449                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2450                           ;	Table Read Protection bit
  2451                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2452                           ;	Table Read Protection bit
  2453                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2454  30000C                     	org	3145740
  2455  30000C  0F                 	db	15
  2456                           
  2457                           ;Config register CONFIG7H @ 0x30000D
  2458                           ;	Boot Block Table Read Protection bit
  2459                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2460  30000D                     	org	3145741
  2461  30000D  40                 	db	64
  2462                           tosu	equ	0xFFF
  2463                           tosh	equ	0xFFE
  2464                           tosl	equ	0xFFD
  2465                           stkptr	equ	0xFFC
  2466                           pclatu	equ	0xFFB
  2467                           pclath	equ	0xFFA
  2468                           pcl	equ	0xFF9
  2469                           tblptru	equ	0xFF8
  2470                           tblptrh	equ	0xFF7
  2471                           tblptrl	equ	0xFF6
  2472                           tablat	equ	0xFF5
  2473                           prodh	equ	0xFF4
  2474                           prodl	equ	0xFF3
  2475                           indf0	equ	0xFEF
  2476                           postinc0	equ	0xFEE
  2477                           postdec0	equ	0xFED
  2478                           preinc0	equ	0xFEC
  2479                           plusw0	equ	0xFEB
  2480                           fsr0h	equ	0xFEA
  2481                           fsr0l	equ	0xFE9
  2482                           wreg	equ	0xFE8
  2483                           indf1	equ	0xFE7
  2484                           postinc1	equ	0xFE6
  2485                           postdec1	equ	0xFE5
  2486                           preinc1	equ	0xFE4
  2487                           plusw1	equ	0xFE3
  2488                           fsr1h	equ	0xFE2
  2489                           fsr1l	equ	0xFE1
  2490                           bsr	equ	0xFE0
  2491                           indf2	equ	0xFDF
  2492                           postinc2	equ	0xFDE
  2493                           postdec2	equ	0xFDD
  2494                           preinc2	equ	0xFDC
  2495                           plusw2	equ	0xFDB
  2496                           fsr2h	equ	0xFDA
  2497                           fsr2l	equ	0xFD9
  2498                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        55
    BSS         52
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      7     114
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    S4661$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S4661$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    mcal_spi_init@spi_obj	PTR const struct . size(2) Largest target is 5
		 -> _spi(COMRAM[5]), 

    hal_timer3_interrupt_handler_init@timer3.TMR3_Handler	PTR FTN()void  size(2) Largest target is 0

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    hal_timer3_set_prescaler@timer3.TMR3_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_timer3_rw_8bit_16bit_mode@timer3.TMR3_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_timer3_synchronize_external_clock@timer3.TMR3_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_timer3_select_clock_source@timer3.TMR3_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_timer3_write_value@timer3.TMR3_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_timer3_read_value@timer3.TMR3_Handler	PTR FTN()void  size(2) Largest target is 0

    S3572$TMR3_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_timer3_initialize@timer3.TMR3_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_timer2_interrupt_handler_init@timer2.TMR2_Handler	PTR FTN()void  size(2) Largest target is 0

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3421$TMR2_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_timer2_initialize@timer2.TMR2_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_timer1_interrupt_handler_init@timer1.TMR1_Handler	PTR FTN()void  size(2) Largest target is 0

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    hal_timer1_config_timer1_oscillator@timer1.TMR1_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_timer1_set_prescaler@timer1.TMR1_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_timer1_rw_8bit_16bit_mode@timer1.TMR1_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_timer1_synchronize_external_clock@timer1.TMR1_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_timer1_select_clock_source@timer1.TMR1_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_timer1_write_value@timer1.TMR1_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_timer1_read_value@timer1.TMR1_Handler	PTR FTN()void  size(2) Largest target is 0

    S3092$TMR1_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_timer1_initialize@timer1.TMR1_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_timer0_interrupt_handler_init@timer0.TMR0_Handler	PTR FTN()void  size(2) Largest target is 0

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    hal_timer0_set_prescaler_value@timer0.TMR0_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_timer0_disable_prescaler@timer0.TMR0_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_timer0_enable_prescaler@timer0.TMR0_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_timer0_select_8bit_or_16bit_mode@timer0.TMR0_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_timer0_select_edge_increment@timer0.TMR0_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_timer0_select_clock_source@timer0.TMR0_Handler	PTR FTN()void  size(2) Largest target is 0

    S2848$TMR0_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_timer0_initialize@timer0.TMR0_Handler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB7_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Interrupt_RBx_SetInterruptHandler@int_obj.EXT_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_SetInterruptHandler@int_obj.EXT_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 0

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Interrupt_INTx_SetInterruptHandler@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2123$EXT_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_Init@int_obj.EXT_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 0

    S2123$EXT_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_Init@int_obj.EXT_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_Flag@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2080$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    External_Interrupt_Global_Enable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRllll[1]), PORTD(BITBIGSFRllll[1]), PORTC(BITBIGSFRllll[1]), PORTB(BITBIGSFRllll[1]), 
		 -> PORTA(BITBIGSFRllll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlllh[1]), LATD(BITBIGSFRlllh[1]), LATC(BITBIGSFRlllh[1]), LATB(BITBIGSFRlllh[1]), 
		 -> LATA(BITBIGSFRllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRlh[1]), TRISD(BITBIGSFRlh[1]), TRISC(SFR[1]), TRISB(ABS[1]), 
		 -> TRISA(BITBIGSFRllll[1]), 

    RX_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S1554$Int_Rx_Handler_Var	PTR FTN()void  size(2) Largest target is 0

    eusart_rx_init@eusart_rx_obj.Int_Rx_Handler_Var	PTR FTN()void  size(2) Largest target is 0

    TX_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S1546$Int_Tx_Handler_Var	PTR FTN()void  size(2) Largest target is 0

    eusart_tx_init@eusart_tx_obj.Int_Tx_Handler_Var	PTR FTN()void  size(2) Largest target is 0

    eusart_baudrate_configuration_bits_init@eusart_obj.eusart_rx_cfg	PTR struct . size(2) Largest target is 0

    eusart_baudrate_configuration_bits_init@eusart_obj.eusart_tx_cfg	PTR struct . size(2) Largest target is 0

    S1561$eusart_rx_cfg	PTR struct . size(2) Largest target is 0

    mcal_eusart_asynchronous_init@eusart_obj.eusart_rx_cfg	PTR struct . size(2) Largest target is 0

    S1561$eusart_tx_cfg	PTR struct . size(2) Largest target is 0

    mcal_eusart_asynchronous_init@eusart_obj.eusart_tx_cfg	PTR struct . size(2) Largest target is 0

    hal_ccp_PWMStop@ccpobj.CCP2_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_ccp_PWMStop@ccpobj.CCP1_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_ccp_PWMStart@ccpobj.CCP2_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_ccp_PWMStart@ccpobj.CCP1_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_ccp_setPWMDuty@ccpobj.CCP2_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_ccp_setPWMDuty@ccpobj.CCP1_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_ccp_compareModeSetValue@ccpobj.CCP2_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_ccp_compareModeSetValue@ccpobj.CCP1_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_ccp_isCompareComplete@ccpobj.CCP2_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_ccp_isCompareComplete@ccpobj.CCP1_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_ccp_readCaptureValue@ccpobj.CCP2_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_ccp_readCaptureValue@ccpobj.CCP1_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_ccp_isCaptureReady@ccpobj.CCP2_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_ccp_isCaptureReady@ccpobj.CCP1_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_ccp_deinit@ccpobj.CCP2_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_ccp_deinit@ccpobj.CCP1_Handler	PTR FTN()void  size(2) Largest target is 0

    CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S1045$CCP2_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_ccp_init@ccpobj.CCP2_Handler	PTR FTN()void  size(2) Largest target is 0

    S1045$CCP1_Handler	PTR FTN()void  size(2) Largest target is 0

    hal_ccp_init@ccpobj.CCP1_Handler	PTR FTN()void  size(2) Largest target is 0

    ADC_GetConversionResult@_adc.ADC_IntHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S688$ADC_IntHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_ModuleInitialize@_adc.ADC_IntHandler	PTR FTN()void  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_mcal_spi_init

Critical Paths under _InterruptManager in COMRAM

    _InterruptManager->_RB4_ISR
    _InterruptManager->_RB5_ISR
    _InterruptManager->_RB6_ISR
    _InterruptManager->_RB7_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     354
                                              5 COMRAM     2     2      0
                      _mcal_spi_init
              _mcal_spi_select_slave
        _mcal_spi_send_byte_blocking
 ---------------------------------------------------------------------------------
 (1) _mcal_spi_send_byte_blocking                          1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _mcal_spi_select_slave                                4     4      0      30
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _mcal_spi_init                                        5     3      2     309
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _InterruptManager                                     0     0      0     120
                            _ADC_ISR
                           _CCP1_ISR
                           _CCP2_ISR
                      _EUSART_TX_Isr
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                         _Timer0_ISR
                         _Timer1_ISR
                         _Timer2_ISR
                         _Timer3_ISR
 ---------------------------------------------------------------------------------
 (3) _Timer3_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timer2_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timer1_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timer0_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_TX_Isr                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CCP2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CCP1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _mcal_spi_init
   _mcal_spi_select_slave
   _mcal_spi_send_byte_blocking

 _InterruptManager (ROOT)
   _ADC_ISR
   _CCP1_ISR
   _CCP2_ISR
   _EUSART_TX_Isr
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _Timer0_ISR
   _Timer1_ISR
   _Timer2_ISR
   _Timer3_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      7      72       1       90.5%
BITBIGSFRhhlhlh     18      0       0      38        0.0%
BITBIGSFRhhh         D      0       0      37        0.0%
BITBIGSFRlh          6      0       0      46        0.0%
BITBIGSFRhhlhll      5      0       0      39        0.0%
BITBIGSFRhlllhh      4      0       0      43        0.0%
BITBIGSFRlllh        4      0       0      47        0.0%
BITBIGSFRhlllhl      4      0       0      44        0.0%
BITBIGSFRllll        4      0       0      48        0.0%
BITBIGSFRhhllh       1      0       0      40        0.0%
BITBIGSFRhlllhh      1      0       0      42        0.0%
BITBIGSFRhhlll       1      0       0      41        0.0%
BITBIGSFRhllll       1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      72      12        0.0%
DATA                 0      0      72       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Aug 13 16:30:38 2022

                 ??_InterruptManager 006D                          _SSPSTATbits 000FC7  
                                _PR2 000FCB                                  u540 1650  
                                u541 164C                                  u560 16F0  
                                u561 16EC                                  u554 1662  
                                u555 165E                        _mcal_spi_init 139C  
                    __end_of_ADC_ISR 172E                  led_initialize@F2881 006B  
                                wreg 000FE8            _RB5_InterruptHandler_High 004E  
              relay_initialize@F2879 0067                      __end_of_RB4_ISR 16DC  
                    __end_of_RB5_ISR 16C2                      __end_of_RB6_ISR 16A8  
                    __end_of_RB7_ISR 168E                                 l1731 1576  
                               l1742 16E2                                 l1745 16F0  
                               l1739 1672                                 l5600 1414  
                               l5610 142E                                 l5602 141C  
                               l5620 144C                                 l5612 1434  
                               l5604 141E                                 l5622 144E  
                               l5614 143C                                 l5606 1424  
                               l5630 14AA                                 l2990 1672  
                               l5640 14EE                                 l5632 14C6  
                               l5624 1454                                 l5616 143E  
                               l5608 142C                                 l2984 1640  
                               l2992 16DE                                 l5650 1532  
                               l5642 150A                                 l5634 14CC  
                               l5618 1444                                 l2986 1640  
                               l5652 154E                                 l5644 1510  
                               l5636 14E8                                 l5628 1458  
                               l5580 13D0                                 l5572 139C  
                               l2988 1650                                 l5654 1554  
                               l5646 152C                                 l5638 14EE  
                               l5590 13FC                                 l5582 13EC  
                               l5574 139C                                 l5670 1584  
                               l5656 1570                                 l5648 1532  
                               l5592 13FE                                 l5584 13F2  
                               l5576 13AE                                 l5680 15B2  
                               l5672 158A                                 l5594 1404  
                               l5586 13F2                                 l5578 13CA  
                               l5658 1576                                 l5674 1590  
                               l5596 140C                                 l5588 13F8  
                               l5676 15A6                                 l5668 1578  
                               l5686 1474                                 l5598 140E  
                               l5678 15AC                                 STR_1 1011  
                               _LATA 000F89                                 _LATB 000F8A  
                               _LATC 000F8B                                 u4000 154E  
                               _LATD 000F8C                                 u4001 154A  
                               _LATE 000F8D                                 u4010 1570  
                               u4011 156C                                 u4027 159A  
                               u4037 15BC                                 u3930 13AE  
                               u3931 13AA                                 u3940 13CA  
                               u3941 13C6                                 u3950 13EC  
                               u3951 13E8                                 u3960 14C6  
                               u3961 14C2                                 u3970 14E8  
                               u3971 14E4                                 u3980 150A  
                               u3981 1506                                 u3990 152C  
                               u3991 1528                                 _TMR1 000FCE  
                               _TMR2 000FCC                                 _TMR3 000FB2  
                               __spi 0033                                 _main 1578  
           _RB4_InterruptHandler_Low 0050                     __end_of_CCP1_ISR 172A  
                   __end_of_CCP2_ISR 1726                                 fsr2h 000FDA  
                               indf2 000FDF                                 fsr1l 000FE1  
                               fsr2l 000FD9                                 btemp 0073  
           _RB7_InterruptHandler_Low 0044                           _RX_Handler 005A  
                               start 000E                         ___param_bank 000000  
                         _TX_Handler 005C                     __end_of_INT0_ISR 1722  
                   __end_of_INT1_ISR 171E                     __end_of_INT2_ISR 171A  
                              ?_main 006C                                _EEADR 000FA9  
                      _EUSART_TX_Isr 172E                       ?_mcal_spi_init 006D  
                              i2l391 172C                                i2l712 172E  
                              i2l554 1724                                i2l549 1728  
                              _RCREG 000FAE                                _TMR0H 000FD7  
                              _TMR1H 000FCF                                _TMR0L 000FD6  
                              _TMR1L 000FCE                                _TMR3H 000FB3  
                              _TMR3L 000FB2                                _SPBRG 000FAF  
                              _PORTA 000F80                                _PORTB 000F81  
                              _PORTC 000F82                                _PORTD 000F83  
                              _PORTE 000F84                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
                              _TXREG 000FAD                                _lcd_1 002D  
                              _lcd_2 0023                                tablat 000FF5  
                              ttemp5 0074                                ttemp6 0077  
                              ttemp7 007B                                status 000FD8  
                              wtemp8 0074                 mcal_spi_init@spi_obj 006D  
                    __initialization 1608                         __end_of_main 15D0  
                          ??_ADC_ISR 006C                        _lat_registers 000B  
                     ?_EUSART_TX_Isr 006C                               ??_main 0071  
                      __activetblptr 000003                _TMR3_InterruptHandler 003A  
                   led_turn_on@F2886 006A                            ??_RB4_ISR 006C  
                          ??_RB5_ISR 006C                            ??_RB6_ISR 006C  
                          ??_RB7_ISR 006C              ??_mcal_spi_select_slave 006D  
                             _ADRESH 000FC4                               _EEADRH 000FAA  
                             _ADRESL 000FC3                               _EEDATA 000FA8  
                             _CCPR1H 000FBF                               _CCPR2H 000FBC  
                             _CCPR1L 000FBE                               _CCPR2L 000FBB  
                             _EECON2 000FA7                               i2l1101 16DA  
                             i2l1033 1720                               i2l1041 1718  
                             i2l1201 1398                               i2l1037 171C  
                             i2l1109 16C0                               i2l1117 16A6  
                             i2l1125 168C                               i2l1341 1714  
                             i2l1538 1710                               i2l1486 1708  
                             i2l2810 172E                               i2l2812 171E  
                             i2l2820 1716                               i2l1669 16FC  
                             i2l2830 16DA                               i2l2816 171A  
                             i2l2824 16C4                               i2l2840 16C0  
                             i2l2826 16C6                               i2l2834 16AA  
                             i2l2850 16A6                               i2l2780 172A  
                             i2l2836 16AC                               i2l2844 1690  
                             i2l2860 168C                               i2l4700 1160  
                             i2l2846 1692                               i2l2854 1676  
                             i2l2870 1700                               i2l4710 1196  
                             i2l4702 116E                               i2l2792 1722  
                             i2l2856 1678                               i2l2864 1712  
                             i2l2872 1704                               i2l2880 16F2  
                             i2l4800 1386                               i2l4712 11A4  
                             i2l4720 11CC                               i2l4704 117E  
                             i2l2786 1726                               i2l2882 16F4  
                             i2l4802 1394                               i2l4730 120A  
                             i2l4722 11DA                               i2l4714 11B2  
                             i2l4706 1182                               i2l4650 1046  
                             i2l4642 1018                               i2l2868 16FE  
                             i2l2876 170A                               i2l2884 16F8  
                             i2l4740 124A                               i2l4724 11E8  
                             i2l4732 1210                               i2l4716 11C2  
                             i2l4708 1188                               i2l4660 1078  
                             i2l4652 1054                               i2l4644 1026  
                             i2l4750 127E                               i2l4742 124E  
                             i2l4734 121E                               i2l4726 11F6  
                             i2l4718 11C6                               i2l4670 10B6  
                             i2l4662 1086                               i2l4654 1058  
                             i2l4646 1034                               i2l4760 12B4  
                             i2l4752 128E                               i2l4736 122C  
                             i2l4744 1254                               i2l4728 1206  
                             i2l4680 10F6                               i2l4664 1094  
                             i2l4672 10BC                               i2l4656 1066  
                             i2l4648 1038                               i2l4770 12E6  
                             i2l4762 12B8                               i2l4754 1292  
                             i2l4746 1262                               i2l4738 123A  
                             i2l4690 112A                               i2l4682 10FA  
                             i2l4674 10CA                               i2l4666 10A2  
                             i2l4658 1074                               i2l4780 1318  
                             i2l4772 12F4                               i2l4764 12C6  
                             i2l4748 1270                               i2l4756 1298  
                             i2l4692 113A                               i2l4676 10D8  
                             i2l4684 1100                               i2l4668 10B2  
                             i2l4790 1354                               i2l4782 1326  
                             i2l4774 12F8                               i2l4766 12D4  
                             i2l4758 12A6                               i2l4694 113E  
                             i2l4686 110E                               i2l4678 10E6  
                             i2l4792 1358                               i2l4784 1334  
                             i2l4776 1306                               i2l4768 12D8  
                             i2l4688 111C                               i2l4696 1144  
                             i2l4794 1366                               i2l4786 1338  
                             i2l4778 1314                               i2l4698 1152  
                             i2l4796 1374                               i2l4788 1346  
                             i2l4798 1378                               _SPBRGH 000FB0  
                             _SSPBUF 000FC9                           _Timer0_ISR 1712  
                         _Timer1_ISR 16FE                           _Timer2_ISR 170A  
                         _Timer3_ISR 16F2                               clear_0 162E  
                    ??_mcal_spi_init 006F                               isa$std 000001  
                          ?_CCP1_ISR 006C                         __pdataCOMRAM 0001  
                          ?_CCP2_ISR 006C                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                           __accesstop 0080  
            __end_of__initialization 1634                            ?_INT0_ISR 006C  
                          ?_INT1_ISR 006C                            ?_INT2_ISR 006C  
                      ___rparam_used 000001                       __pcstackCOMRAM 006C  
                      RB4_ISR@source 006C                      ??_EUSART_TX_Isr 006C  
                         ??_CCP1_ISR 006C                           ??_CCP2_ISR 006C  
                      RB5_ISR@source 006C                _INT0_InterruptHandler 0058  
                         ??_INT0_ISR 006C                           ??_INT1_ISR 006C  
                         ??_INT2_ISR 006C  __end_of_mcal_spi_send_byte_blocking 16F2  
        _mcal_spi_send_byte_blocking 16DC                          ?_Timer0_ISR 006C  
                        ?_Timer1_ISR 006C                          ?_Timer2_ISR 006C  
                        ?_Timer3_ISR 006C                        RB6_ISR@source 006C  
                  led_turn_off@F2891 0069                              _ADC_ISR 172A  
                    led_toggle@F2896 0068                        relay_On@F2884 0066  
                            _RB4_ISR 16C2                              _RB5_ISR 16A8  
                            _RB6_ISR 168E                              _RB7_ISR 1674  
          _RB6_InterruptHandler_High 004A                              i2u41_40 16D6  
                            i2u41_41 16D2                              i2u42_40 16BC  
                            i2u42_41 16B8                              i2u43_40 16A2  
                            i2u43_41 169E                              i2u44_40 1688  
                            i2u44_41 1684                        RB7_ISR@source 006C  
                     _tris_registers 0015             _RB6_InterruptHandler_Low 0048  
               _ADC_InterruptHandler 0062                              __Hparam 0000  
                            __Lparam 0000       mcal_spi_select_slave@slave_pin 006F  
                       __psmallconst 1000                              __pcinit 1608  
                            __ramtop 1000                              __ptext0 1578  
                            __ptext1 16DC                              __ptext2 163E  
                            __ptext3 139C                              __ptext5 16F2  
                            __ptext6 170A                              __ptext7 16FE  
                            __ptext8 1712                              __ptext9 1674  
                          _T0CONbits 000FD5                            _T1CONbits 000FCD  
                          _T2CONbits 000FCA                            _T3CONbits 000FB1  
      __end_of_mcal_spi_select_slave 1674                       __pintcode_body 1016  
               end_of_initialization 1634                              int_func 1016  
                          _RCSTAbits 000FAB                              postdec1 000FE5  
                            postinc0 000FEE                              postinc2 000FDE  
              _INT1_InterruptHandler 0056                            _PORTBbits 000F81  
                   _InterruptManager 0008                            _TRISAbits 000F92  
                          _TRISCbits 000F94                          _CCP1CONbits 000FBD  
                        _CCP2CONbits 000FBA                            _TXSTAbits 000FAC  
                        _BAUDCONbits 000FB8                        __pidataCOMRAM 15D0  
              __end_of_mcal_spi_init 1578      mcal_spi_send_byte_blocking@data 006D  
                     _timer2_preload 0064                  start_initialization 1608  
           _timer3_isr_preload_value 0038                         ??_Timer0_ISR 006C  
                       ??_Timer1_ISR 006C                         ??_Timer2_ISR 006C  
                       ??_Timer3_ISR 006C                             ?_ADC_ISR 006C  
              __end_of_EUSART_TX_Isr 1730                             ?_RB4_ISR 006C  
                           ?_RB5_ISR 006C                             ?_RB6_ISR 006C  
                           ?_RB7_ISR 006C                          __pbssCOMRAM 0038  
                 __end_of_Timer0_ISR 1716                   __end_of_Timer1_ISR 170A  
                 __end_of_Timer2_ISR 1712                   __end_of_Timer3_ISR 16FE  
              _INT2_InterruptHandler 0054                _TMR0_InterruptHandler 0042  
                          __pintcode 0008                          __smallconst 1000  
                           _CCP1_ISR 1726                             _CCP2_ISR 1722  
          _RB4_InterruptHandler_High 0052            _RB7_InterruptHandler_High 0046  
                           _INT0_ISR 171E                             _INT1_ISR 171A  
                           _INT2_ISR 1716             _RB5_InterruptHandler_Low 004C  
                           _RB4_Flag 0022                             _RB5_Flag 0021  
                           _RB6_Flag 0020                  __end_of_keypad_btns 1011  
                           _RB7_Flag 001F             __end_of_InterruptManager 139C  
                           _PIE1bits 000F9D                             _PIE2bits 000FA0  
                     relay_Off@F2889 0065                             i2u250_40 1086  
                           i2u250_41 1082                             i2u251_40 1094  
                           i2u251_41 1090                             i2u260_40 112A  
                           i2u252_40 10A2                             i2u244_40 1026  
                           i2u260_41 1126                             i2u252_41 109E  
                           i2u244_41 1022                             i2u261_40 113A  
                           i2u253_40 10B2                             i2u245_40 1034  
                           i2u261_41 1136                             i2u253_41 10AE  
                           i2u245_41 1030                             i2u270_40 11DA  
                           i2u262_40 1152                             i2u254_40 10CA  
                           i2u246_40 1046                             i2u270_41 11D6  
                           i2u262_41 114E                             i2u254_41 10C6  
                           i2u246_41 1042                             i2u271_40 11E8  
                           i2u263_40 1160                             i2u255_40 10D8  
                           i2u247_40 1054                             i2u271_41 11E4  
                           i2u263_41 115C                             i2u255_41 10D4  
                           i2u247_41 1050                             i2u280_40 127E  
                           i2u272_40 11F6                             i2u264_40 116E  
                           i2u256_40 10E6                             i2u248_40 1066  
                           i2u280_41 127A                             i2u272_41 11F2  
                           i2u264_41 116A                             i2u256_41 10E2  
                           i2u248_41 1062                             i2u281_40 128E  
                           i2u273_40 1206                             i2u265_40 117E  
                           i2u257_40 10F6                             i2u249_40 1074  
                           i2u281_41 128A                             i2u273_41 1202  
                           i2u265_41 117A                             i2u257_41 10F2  
                           i2u249_41 1070                             _PIR1bits 000F9E  
                           i2u290_40 1326                             i2u282_40 12A6  
                           i2u274_40 121E                             i2u266_40 1196  
                           i2u258_40 110E                             i2u290_41 1322  
                           i2u282_41 12A2                             i2u274_41 121A  
                           i2u266_41 1192                             i2u258_41 110A  
                           i2u291_40 1334                             i2u283_40 12B4  
                           i2u275_40 122C                             i2u267_40 11A4  
                           i2u259_40 111C                             i2u291_41 1330  
                           i2u283_41 12B0                             i2u275_41 1228  
                           i2u267_41 11A0                             i2u259_41 1118  
                           _PIR2bits 000FA1                             i2u292_40 1346  
                           i2u284_40 12C6                             i2u276_40 123A  
                           i2u268_40 11B2                             i2u292_41 1342  
                           i2u284_41 12C2                             i2u276_41 1236  
                           i2u268_41 11AE                             i2u293_40 1354  
                           i2u285_40 12D4                             i2u277_40 124A  
                           i2u269_40 11C2                             i2u293_41 1350  
                           i2u285_41 12D0                             i2u277_41 1246  
                           i2u269_41 11BE                             i2u294_40 1366  
                           i2u286_40 12E6                             i2u278_40 1262  
                           i2u294_41 1362                             i2u286_41 12E2  
                           i2u278_41 125E                             i2u295_40 1374  
                           i2u287_40 12F4                             i2u279_40 1270  
                           i2u295_41 1370                             i2u287_41 12F0  
                           i2u279_41 126C                             i2u296_40 1386  
                           i2u288_40 1306                             i2u296_41 1382  
                           i2u288_41 1302                             i2u297_40 1394  
                           i2u289_40 1314                             i2u297_41 1390  
                           i2u289_41 1310                           _ADCON0bits 000FC2  
                         _ADCON1bits 000FC1                           _ADCON2bits 000FC0  
                        _INTCON2bits 000FF1                          _INTCON3bits 000FF0  
                          copy_data0 161C                _mcal_spi_select_slave 163E  
                         _EECON1bits 000FA6                             __Hrparam 0000  
                           __Lrparam 0000                _CCP1_InterruptHandler 0060  
              _TMR1_InterruptHandler 0040                             __ptext10 168E  
                           __ptext11 16A8                             __ptext12 16C2  
                           __ptext13 1716                             __ptext14 171A  
                           __ptext15 171E                             __ptext16 172E  
                           __ptext17 1722                             __ptext18 1726  
                           __ptext19 172A                          _keypad_btns 1001  
       ?_mcal_spi_send_byte_blocking 006C                             isa$xinst 000000  
                           int$flags 0073                           _INTCONbits 000FF2  
           _timer1_isr_preload_value 003E               ?_mcal_spi_select_slave 006C  
                           intlevel2 0000        ??_mcal_spi_send_byte_blocking 006D  
                     _port_registers 0001                          _SSPCON1bits 000FC6  
              _CCP2_InterruptHandler 005E                _TMR2_InterruptHandler 003C  
                  ?_InterruptManager 006C  
